{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { resolveSlot, warn } from \"../../_utils/index.mjs\";\nimport { useBrowserLocation } from \"../../_utils/composable/use-browser-location.mjs\";\nimport { breadcrumbInjectionKey } from \"./Breadcrumb.mjs\";\nexport const breadcrumbItemProps = {\n  separator: String,\n  href: String,\n  clickable: {\n    type: Boolean,\n    default: true\n  },\n  onClick: Function\n};\nexport default defineComponent({\n  name: 'BreadcrumbItem',\n  props: breadcrumbItemProps,\n  setup(props, {\n    slots\n  }) {\n    const NBreadcrumb = inject(breadcrumbInjectionKey, null);\n    if (!NBreadcrumb) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('breadcrumb', '`n-breadcrumb-item` must be placed inside `n-breadcrumb`.');\n      }\n      return () => null;\n    }\n    const {\n      separatorRef,\n      mergedClsPrefixRef\n    } = NBreadcrumb;\n    const browserLocationRef = useBrowserLocation();\n    const htmlTagRef = computed(() => props.href ? 'a' : 'span');\n    const ariaCurrentRef = computed(() => browserLocationRef.value.href === props.href ? 'location' : null);\n    return () => {\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"li\", {\n        class: [`${mergedClsPrefix}-breadcrumb-item`, props.clickable && `${mergedClsPrefix}-breadcrumb-item--clickable`]\n      }, h(htmlTagRef.value, {\n        class: `${mergedClsPrefix}-breadcrumb-item__link`,\n        'aria-current': ariaCurrentRef.value,\n        href: props.href,\n        onClick: props.onClick\n      }, slots), h(\"span\", {\n        class: `${mergedClsPrefix}-breadcrumb-item__separator`,\n        \"aria-hidden\": \"true\"\n      }, resolveSlot(slots.separator, () => {\n        var _a;\n        return [(_a = props.separator) !== null && _a !== void 0 ? _a : separatorRef.value];\n      })));\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","computed","resolveSlot","warn","useBrowserLocation","breadcrumbInjectionKey","breadcrumbItemProps","separator","String","href","clickable","type","Boolean","default","onClick","Function","name","props","setup","slots","NBreadcrumb","process","env","NODE_ENV","separatorRef","mergedClsPrefixRef","browserLocationRef","htmlTagRef","ariaCurrentRef","value","mergedClsPrefix","class","_a"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/breadcrumb/src/BreadcrumbItem.mjs"],"sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { resolveSlot, warn } from \"../../_utils/index.mjs\";\nimport { useBrowserLocation } from \"../../_utils/composable/use-browser-location.mjs\";\nimport { breadcrumbInjectionKey } from \"./Breadcrumb.mjs\";\nexport const breadcrumbItemProps = {\n  separator: String,\n  href: String,\n  clickable: {\n    type: Boolean,\n    default: true\n  },\n  onClick: Function\n};\nexport default defineComponent({\n  name: 'BreadcrumbItem',\n  props: breadcrumbItemProps,\n  setup(props, {\n    slots\n  }) {\n    const NBreadcrumb = inject(breadcrumbInjectionKey, null);\n    if (!NBreadcrumb) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('breadcrumb', '`n-breadcrumb-item` must be placed inside `n-breadcrumb`.');\n      }\n      return () => null;\n    }\n    const {\n      separatorRef,\n      mergedClsPrefixRef\n    } = NBreadcrumb;\n    const browserLocationRef = useBrowserLocation();\n    const htmlTagRef = computed(() => props.href ? 'a' : 'span');\n    const ariaCurrentRef = computed(() => browserLocationRef.value.href === props.href ? 'location' : null);\n    return () => {\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"li\", {\n        class: [`${mergedClsPrefix}-breadcrumb-item`, props.clickable && `${mergedClsPrefix}-breadcrumb-item--clickable`]\n      }, h(htmlTagRef.value, {\n        class: `${mergedClsPrefix}-breadcrumb-item__link`,\n        'aria-current': ariaCurrentRef.value,\n        href: props.href,\n        onClick: props.onClick\n      }, slots), h(\"span\", {\n        class: `${mergedClsPrefix}-breadcrumb-item__separator`,\n        \"aria-hidden\": \"true\"\n      }, resolveSlot(slots.separator, () => {\n        var _a;\n        return [(_a = props.separator) !== null && _a !== void 0 ? _a : separatorRef.value];\n      })));\n    };\n  }\n});"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,KAAK;AAC1D,SAASC,WAAW,EAAEC,IAAI,QAAQ,wBAAwB;AAC1D,SAASC,kBAAkB,QAAQ,kDAAkD;AACrF,SAASC,sBAAsB,QAAQ,kBAAkB;AACzD,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,SAAS,EAAEC,MAAM;EACjBC,IAAI,EAAED,MAAM;EACZE,SAAS,EAAE;IACTC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACX,CAAC;EACDC,OAAO,EAAEC;AACX,CAAC;AACD,eAAehB,eAAe,CAAC;EAC7BiB,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAEX,mBAAmB;EAC1BY,KAAKA,CAACD,KAAK,EAAE;IACXE;EACF,CAAC,EAAE;IACD,MAAMC,WAAW,GAAGpB,MAAM,CAACK,sBAAsB,EAAE,IAAI,CAAC;IACxD,IAAI,CAACe,WAAW,EAAE;MAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzCpB,IAAI,CAAC,YAAY,EAAE,2DAA2D,CAAC;MACjF;MACA,OAAO,MAAM,IAAI;IACnB;IACA,MAAM;MACJqB,YAAY;MACZC;IACF,CAAC,GAAGL,WAAW;IACf,MAAMM,kBAAkB,GAAGtB,kBAAkB,CAAC,CAAC;IAC/C,MAAMuB,UAAU,GAAG1B,QAAQ,CAAC,MAAMgB,KAAK,CAACR,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC;IAC5D,MAAMmB,cAAc,GAAG3B,QAAQ,CAAC,MAAMyB,kBAAkB,CAACG,KAAK,CAACpB,IAAI,KAAKQ,KAAK,CAACR,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC;IACvG,OAAO,MAAM;MACX,MAAM;QACJoB,KAAK,EAAEC;MACT,CAAC,GAAGL,kBAAkB;MACtB,OAAO3B,CAAC,CAAC,IAAI,EAAE;QACbiC,KAAK,EAAE,CAAE,GAAED,eAAgB,kBAAiB,EAAEb,KAAK,CAACP,SAAS,IAAK,GAAEoB,eAAgB,6BAA4B;MAClH,CAAC,EAAEhC,CAAC,CAAC6B,UAAU,CAACE,KAAK,EAAE;QACrBE,KAAK,EAAG,GAAED,eAAgB,wBAAuB;QACjD,cAAc,EAAEF,cAAc,CAACC,KAAK;QACpCpB,IAAI,EAAEQ,KAAK,CAACR,IAAI;QAChBK,OAAO,EAAEG,KAAK,CAACH;MACjB,CAAC,EAAEK,KAAK,CAAC,EAAErB,CAAC,CAAC,MAAM,EAAE;QACnBiC,KAAK,EAAG,GAAED,eAAgB,6BAA4B;QACtD,aAAa,EAAE;MACjB,CAAC,EAAE5B,WAAW,CAACiB,KAAK,CAACZ,SAAS,EAAE,MAAM;QACpC,IAAIyB,EAAE;QACN,OAAO,CAAC,CAACA,EAAE,GAAGf,KAAK,CAACV,SAAS,MAAM,IAAI,IAAIyB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGR,YAAY,CAACK,KAAK,CAAC;MACrF,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}