{"ast":null,"code":"import { composite } from 'seemly';\nimport { commonLight } from \"../../_styles/common/index.mjs\";\nimport { scrollbarLight } from \"../../_internal/scrollbar/styles/index.mjs\";\nimport { createTheme } from \"../../_mixins/index.mjs\";\nexport const self = vars => {\n  const {\n    baseColor,\n    textColor2,\n    bodyColor,\n    cardColor,\n    dividerColor,\n    actionColor,\n    scrollbarColor,\n    scrollbarColorHover,\n    invertedColor\n  } = vars;\n  return {\n    textColor: textColor2,\n    textColorInverted: '#FFF',\n    color: bodyColor,\n    colorEmbedded: actionColor,\n    headerColor: cardColor,\n    headerColorInverted: invertedColor,\n    footerColor: actionColor,\n    footerColorInverted: invertedColor,\n    headerBorderColor: dividerColor,\n    headerBorderColorInverted: invertedColor,\n    footerBorderColor: dividerColor,\n    footerBorderColorInverted: invertedColor,\n    siderBorderColor: dividerColor,\n    siderBorderColorInverted: invertedColor,\n    siderColor: cardColor,\n    siderColorInverted: invertedColor,\n    siderToggleButtonBorder: `1px solid ${dividerColor}`,\n    siderToggleButtonColor: baseColor,\n    siderToggleButtonIconColor: textColor2,\n    siderToggleButtonIconColorInverted: textColor2,\n    siderToggleBarColor: composite(bodyColor, scrollbarColor),\n    siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n    // hack for inverted background\n    __invertScrollbar: 'true'\n  };\n};\nconst layoutLight = createTheme({\n  name: 'Layout',\n  common: commonLight,\n  peers: {\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default layoutLight;","map":{"version":3,"names":["composite","commonLight","scrollbarLight","createTheme","self","vars","baseColor","textColor2","bodyColor","cardColor","dividerColor","actionColor","scrollbarColor","scrollbarColorHover","invertedColor","textColor","textColorInverted","color","colorEmbedded","headerColor","headerColorInverted","footerColor","footerColorInverted","headerBorderColor","headerBorderColorInverted","footerBorderColor","footerBorderColorInverted","siderBorderColor","siderBorderColorInverted","siderColor","siderColorInverted","siderToggleButtonBorder","siderToggleButtonColor","siderToggleButtonIconColor","siderToggleButtonIconColorInverted","siderToggleBarColor","siderToggleBarColorHover","__invertScrollbar","layoutLight","name","common","peers","Scrollbar"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/layout/styles/light.mjs"],"sourcesContent":["import { composite } from 'seemly';\nimport { commonLight } from \"../../_styles/common/index.mjs\";\nimport { scrollbarLight } from \"../../_internal/scrollbar/styles/index.mjs\";\nimport { createTheme } from \"../../_mixins/index.mjs\";\nexport const self = vars => {\n  const {\n    baseColor,\n    textColor2,\n    bodyColor,\n    cardColor,\n    dividerColor,\n    actionColor,\n    scrollbarColor,\n    scrollbarColorHover,\n    invertedColor\n  } = vars;\n  return {\n    textColor: textColor2,\n    textColorInverted: '#FFF',\n    color: bodyColor,\n    colorEmbedded: actionColor,\n    headerColor: cardColor,\n    headerColorInverted: invertedColor,\n    footerColor: actionColor,\n    footerColorInverted: invertedColor,\n    headerBorderColor: dividerColor,\n    headerBorderColorInverted: invertedColor,\n    footerBorderColor: dividerColor,\n    footerBorderColorInverted: invertedColor,\n    siderBorderColor: dividerColor,\n    siderBorderColorInverted: invertedColor,\n    siderColor: cardColor,\n    siderColorInverted: invertedColor,\n    siderToggleButtonBorder: `1px solid ${dividerColor}`,\n    siderToggleButtonColor: baseColor,\n    siderToggleButtonIconColor: textColor2,\n    siderToggleButtonIconColorInverted: textColor2,\n    siderToggleBarColor: composite(bodyColor, scrollbarColor),\n    siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n    // hack for inverted background\n    __invertScrollbar: 'true'\n  };\n};\nconst layoutLight = createTheme({\n  name: 'Layout',\n  common: commonLight,\n  peers: {\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default layoutLight;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAO,MAAMC,IAAI,GAAGC,IAAI,IAAI;EAC1B,MAAM;IACJC,SAAS;IACTC,UAAU;IACVC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZC,WAAW;IACXC,cAAc;IACdC,mBAAmB;IACnBC;EACF,CAAC,GAAGT,IAAI;EACR,OAAO;IACLU,SAAS,EAAER,UAAU;IACrBS,iBAAiB,EAAE,MAAM;IACzBC,KAAK,EAAET,SAAS;IAChBU,aAAa,EAAEP,WAAW;IAC1BQ,WAAW,EAAEV,SAAS;IACtBW,mBAAmB,EAAEN,aAAa;IAClCO,WAAW,EAAEV,WAAW;IACxBW,mBAAmB,EAAER,aAAa;IAClCS,iBAAiB,EAAEb,YAAY;IAC/Bc,yBAAyB,EAAEV,aAAa;IACxCW,iBAAiB,EAAEf,YAAY;IAC/BgB,yBAAyB,EAAEZ,aAAa;IACxCa,gBAAgB,EAAEjB,YAAY;IAC9BkB,wBAAwB,EAAEd,aAAa;IACvCe,UAAU,EAAEpB,SAAS;IACrBqB,kBAAkB,EAAEhB,aAAa;IACjCiB,uBAAuB,EAAG,aAAYrB,YAAa,EAAC;IACpDsB,sBAAsB,EAAE1B,SAAS;IACjC2B,0BAA0B,EAAE1B,UAAU;IACtC2B,kCAAkC,EAAE3B,UAAU;IAC9C4B,mBAAmB,EAAEnC,SAAS,CAACQ,SAAS,EAAEI,cAAc,CAAC;IACzDwB,wBAAwB,EAAEpC,SAAS,CAACQ,SAAS,EAAEK,mBAAmB,CAAC;IACnE;IACAwB,iBAAiB,EAAE;EACrB,CAAC;AACH,CAAC;AACD,MAAMC,WAAW,GAAGnC,WAAW,CAAC;EAC9BoC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAEvC,WAAW;EACnBwC,KAAK,EAAE;IACLC,SAAS,EAAExC;EACb,CAAC;EACDE;AACF,CAAC,CAAC;AACF,eAAekC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}