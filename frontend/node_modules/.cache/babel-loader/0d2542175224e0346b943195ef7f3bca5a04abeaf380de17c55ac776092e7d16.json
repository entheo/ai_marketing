{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"brand\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"步步为营\")], -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"slogan\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"一款仅为追求营销效果的你提供脚手架的AI助理\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_n_layout_content = _resolveComponent(\"n-layout-content\");\n  const _component_n_layout_footer = _resolveComponent(\"n-layout-footer\");\n  return _openBlock(), _createBlock($setup[\"NLayout\"], {\n    position: \"absolute\"\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"NLayoutHeader\"]), _createVNode(_component_n_layout_content, null, {\n      default: _withCtx(() => [_createVNode($setup[\"NGrid\"], {\n        class: \"login\",\n        cols: \"2 s:2 m:2 l:7 xl:7 2xl:7\",\n        responsive: \"screen\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\"品牌信息\"), _createVNode($setup[\"NGridItem\"], {\n          span: \"4\"\n        }, {\n          default: _withCtx(() => [_hoisted_1, _hoisted_2]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\"登录&注册组件\"), _createVNode($setup[\"NGridItem\"], {\n          offset: 1,\n          span: \"2\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"NCard\"], null, {\n            default: _withCtx(() => [_createVNode($setup[\"LoginRegister\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_n_layout_footer, null, {\n      default: _withCtx(() => [_createTextVNode(\" footer \")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","$setup","position","default","_withCtx","_createVNode","_component_n_layout_content","cols","responsive","_createCommentVNode","span","_hoisted_1","_hoisted_2","_","offset","_component_n_layout_footer","_createTextVNode"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <n-layout position=\"absolute\">\n  <n-layout-header></n-layout-header>\n  <n-layout-content> \n  <n-grid  class=\"login\" cols=\"2 s:2 m:2 l:7 xl:7 2xl:7\" responsive=\"screen\">\n     \n     <!--品牌信息-->\n     <n-grid-item span=4>\n        <div class='brand'>\n          <h1>步步为营</h1>\n        </div>\n        \n        <div class='slogan'>\n          <p>一款仅为追求营销效果的你提供脚手架的AI助理</p>\n        </div>\n      </n-grid-item>\n    \n     <!--登录&注册组件-->\n     <n-grid-item :offset=\"1\" span=2>\n        <n-card>\n        <login-register/>\n        </n-card>\n      </n-grid-item>\n  </n-grid>    \n  </n-layout-content>\n  <n-layout-footer>\n   footer\n  </n-layout-footer>\n  </n-layout>\n</template>\n\n<script setup>\n//import axios from 'axios';\n//import { ref } from 'vue';\nimport { useStore } from 'vuex';\n//import { useRouter } from 'vue-router';\nimport LoginRegister from './LoginRegister.vue';\nimport {NLayout,NLayoutHeader,NGrid,NGridItem,NCard} from 'naive-ui';\n\n// 用于获取csrftoken的函数\n/*\nfunction getCsrfToken() {\n  return document.cookie.split('; ')\n    .find(row => row.startsWith('csrftoken'))\n    ?.split('=')[1];\n}*/\n\nconst authStore = useStore();\nconsole.log(authStore.getters.isLoggedIn); // 使用getters来访问状态\n// 在组件加载时获取CSRF token\n//const csrfToken = ref(getCsrfToken());\n/*\nconst registerUsername = ref('');\nconst registerPassword = ref('');\nconst invitation = ref('');\nconst router = useRouter();\nconst handleRegisterSubmit = async () => {\n      try{\n          const response = await axios.post('/account/register/', {\n            username: registerUsername.value,\n            password: registerPassword.value,\n            invitation_code: invitation.value\n          },\n          {\n          headers: {\n            'X-CSRFToken': csrfToken.value,\n            }\n          });\n          console.log(response);\n          console.log(\"注册成功，用户名: \", registerUsername.value);\n          await router.push('/login');\n          }\n     catch (err) {\n            console.log(err);\n           }\n       };\n*/\n/*\nexport default {\n  name: 'HomePage',\n  setup() {\n    const authStore = useStore();\n    console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态\n    // 在组件加载时获取CSRF token\n    const csrfToken = ref(getCsrfToken());\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n    const handleLoginSubmit = async () => {\n      try{\n          console.log(loginUsername.value);\n          console.log(loginPassword.value);\n          const response = await axios.post('/account/login/', {\n            username: loginUsername.value,\n            password: loginPassword.value,\n            keep_logged_in_for_days: keepLoggedInForDays.value\n          },\n         {\n            withCredentials: true,\n            headers: {\n            'X-CSRFToken': csrfToken.value,\n          }\n        });\n\n         console.log(\"登录成功，用户名: \", loginUsername.value);\n         const token = response.data.token.access;\n         const user = response.data.username;\n         const csrf_token = response.data.csrf_token;\n         console.log('csrf_token:');\n         console.log(csrf_token);\n         localStorage.setItem('token', token);\n         await authStore.commit('auth_success', { token, user });\n         await router.push('/dashboard');\n          }\n      catch (err) {\n          console.log(err);\n          }\n        };\n       \n\n    const handleRegisterSubmit = async () => {\n      try{\n          const response = await axios.post('/account/register/', {\n            username: registerUsername.value,\n            password: registerPassword.value,\n            invitation_code: invitation.value\n          },\n          {\n          headers: {\n            'X-CSRFToken': csrfToken.value,\n            }\n          });\n          console.log(response);\n          console.log(\"注册成功，用户名: \", registerUsername.value);\n          await router.push('/login');\n          }\n     catch (err) {\n            console.log(err);\n           }\n       };\n\n    return {\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n      csrfToken, // 添加csrfToken到返回值中\n      LoginForm,\n    };\n  },\n};\n*/\n</script>\n\n<style>\n.n-grid{\n    height:100%;\n    align-items:center;\n    }\n.brand{\n    margin-top:3em;\n    font-size:3em;\n    }\n.slogan{\n    margin-top:-2em;\n    font-size:1.2em}\n.card-tabs .n-tabs-nav--bar-type {\n  padding-left: 4px;\n}\n</style>\n"],"mappings":";gCASQA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAO,I,aAChBD,mBAAA,CAAa,YAAT,MAAI,E;gCAGVA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAQ,I,aACjBD,mBAAA,CAA6B,WAA1B,wBAAsB,E;;;;uBAZjCE,YAAA,CA2BWC,MAAA;IA3BDC,QAAQ,EAAC;EAAU;IAF/BC,OAAA,EAAAC,QAAA,CAGE,MAAmC,CAAnCC,YAAA,CAAmCJ,MAAA,oBACnCI,YAAA,CAqBmBC,2BAAA;MAzBrBH,OAAA,EAAAC,QAAA,CAKE,MAmBS,CAnBTC,YAAA,CAmBSJ,MAAA;QAnBAF,KAAK,EAAC,OAAO;QAACQ,IAAI,EAAC,0BAA0B;QAACC,UAAU,EAAC;;QALpEL,OAAA,EAAAC,QAAA,CAOK,MAAW,CAAXK,mBAAA,QAAW,EACXJ,YAAA,CAQeJ,MAAA;UARFS,IAAI,EAAC;QAAC;UARxBP,OAAA,EAAAC,QAAA,CASQ,MAEM,CAFNO,UAEM,EAENC,UAEM,C;UAfdC,CAAA;YAkBKJ,mBAAA,WAAc,EACdJ,YAAA,CAIeJ,MAAA;UAJDa,MAAM,EAAE,CAAC;UAAEJ,IAAI,EAAC;;UAnBnCP,OAAA,EAAAC,QAAA,CAoBQ,MAES,CAFTC,YAAA,CAESJ,MAAA;YAtBjBE,OAAA,EAAAC,QAAA,CAqBQ,MAAiB,CAAjBC,YAAA,CAAiBJ,MAAA,mB;YArBzBY,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QA0BER,YAAA,CAEkBU,0BAAA;MA5BpBZ,OAAA,EAAAC,QAAA,CA0BmB,MAEjB,CA5BFY,gBAAA,CA0BmB,UAEjB,E;MA5BFH,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}