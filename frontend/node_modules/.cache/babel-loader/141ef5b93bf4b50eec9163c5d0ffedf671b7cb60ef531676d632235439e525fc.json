{"ast":null,"code":"import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from \"../../_utils/env/browser.mjs\";\nimport { EyeIcon, EyeOffIcon } from \"../../_internal/icons/index.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from \"../../_internal/index.mjs\";\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from \"../../_mixins/index.mjs\";\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from \"../../_utils/index.mjs\";\nimport { inputLight } from \"../styles/index.mjs\";\nimport { inputInjectionKey } from \"./interface.mjs\";\nimport { isEmptyInputValue, useCursor } from \"./utils.mjs\";\nimport WordCount from \"./WordCount.mjs\";\nimport style, { safariStyle } from \"./styles/input.cssr.mjs\";\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  placeholder: [Array, String],\n  defaultValue: {\n    type: [String, Array],\n    default: null\n  },\n  value: [String, Array],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  rows: {\n    type: [Number, String],\n    default: 3\n  },\n  round: Boolean,\n  minlength: [String, Number],\n  maxlength: [String, Number],\n  clearable: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    default: false\n  },\n  pair: Boolean,\n  separator: String,\n  readonly: {\n    type: [String, Boolean],\n    default: false\n  },\n  passivelyActivated: Boolean,\n  showPasswordOn: String,\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  autofocus: Boolean,\n  inputProps: Object,\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  showCount: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  allowInput: Function,\n  renderCount: Function,\n  onMousedown: Function,\n  onKeydown: Function,\n  onKeyup: [Function, Array],\n  onInput: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClick: [Function, Array],\n  onChange: [Function, Array],\n  onClear: [Function, Array],\n  countGraphemes: Function,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  /** private */\n  textDecoration: [String, Array],\n  attrSize: {\n    type: Number,\n    default: 20\n  },\n  onInputBlur: [Function, Array],\n  onInputFocus: [Function, Array],\n  onDeactivate: [Function, Array],\n  onActivate: [Function, Array],\n  onWrapperFocus: [Function, Array],\n  onWrapperBlur: [Function, Array],\n  internalDeactivateOnEnter: Boolean,\n  internalForceFocus: Boolean,\n  internalLoadingBeforeSuffix: {\n    type: Boolean,\n    default: true\n  },\n  /** deprecated */\n  showPasswordToggle: Boolean\n});\nexport default defineComponent({\n  name: 'Input',\n  props: inputProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.showPasswordToggle) {\n          warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n        }\n      });\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n    if (isSafari) {\n      useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n    }\n    // dom refs\n    const wrapperElRef = ref(null);\n    const textareaElRef = ref(null);\n    const textareaMirrorElRef = ref(null);\n    const inputMirrorElRef = ref(null);\n    const inputElRef = ref(null);\n    const inputEl2Ref = ref(null);\n    const currentFocusedInputRef = ref(null);\n    const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n    const textareaScrollbarInstRef = ref(null);\n    // local\n    const {\n      localeRef\n    } = useLocale('Input');\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    // form-item\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // states\n    const focusedRef = ref(false);\n    const hoverRef = ref(false);\n    const isComposingRef = ref(false);\n    const activatedRef = ref(false);\n    let syncSource = null;\n    // placeholder\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder,\n        pair\n      } = props;\n      if (pair) {\n        if (Array.isArray(placeholder)) {\n          return placeholder;\n        } else if (placeholder === undefined) {\n          return ['', ''];\n        }\n        return [placeholder, placeholder];\n      } else if (placeholder === undefined) {\n        return [localeRef.value.placeholder];\n      } else {\n        return [placeholder];\n      }\n    });\n    const showPlaceholder1Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0])) && mergedPlaceholder[0];\n    });\n    const showPlaceholder2Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && mergedPlaceholder[1] && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]));\n    });\n    // focus\n    const mergedFocusRef = useMemo(() => {\n      return props.internalForceFocus || focusedRef.value;\n    });\n    // clear\n    const showClearButton = useMemo(() => {\n      if (mergedDisabledRef.value || props.readonly || !props.clearable || !mergedFocusRef.value && !hoverRef.value) {\n        return false;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedFocus\n      } = mergedFocusRef;\n      if (props.pair) {\n        return !!(Array.isArray(mergedValue) && (mergedValue[0] || mergedValue[1])) && (hoverRef.value || mergedFocus);\n      } else {\n        return !!mergedValue && (hoverRef.value || mergedFocus);\n      }\n    });\n    // passwordVisible\n    const mergedShowPasswordOnRef = computed(() => {\n      const {\n        showPasswordOn\n      } = props;\n      if (showPasswordOn) {\n        return showPasswordOn;\n      }\n      if (props.showPasswordToggle) return 'click';\n      return undefined;\n    });\n    const passwordVisibleRef = ref(false);\n    // text-decoration\n    const textDecorationStyleRef = computed(() => {\n      const {\n        textDecoration\n      } = props;\n      if (!textDecoration) return ['', ''];\n      if (Array.isArray(textDecoration)) {\n        return textDecoration.map(v => ({\n          textDecoration: v\n        }));\n      }\n      return [{\n        textDecoration\n      }];\n    });\n    const textAreaScrollContainerWidthRef = ref(undefined);\n    // textarea autosize\n    const updateTextAreaStyle = () => {\n      var _a, _b;\n      if (props.type === 'textarea') {\n        const {\n          autosize\n        } = props;\n        if (autosize) {\n          textAreaScrollContainerWidthRef.value = (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        }\n        if (!textareaElRef.value) return;\n        if (typeof autosize === 'boolean') return;\n        const {\n          paddingTop: stylePaddingTop,\n          paddingBottom: stylePaddingBottom,\n          lineHeight: styleLineHeight\n        } = window.getComputedStyle(textareaElRef.value);\n        const paddingTop = Number(stylePaddingTop.slice(0, -2));\n        const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n        const lineHeight = Number(styleLineHeight.slice(0, -2));\n        const {\n          value: textareaMirrorEl\n        } = textareaMirrorElRef;\n        if (!textareaMirrorEl) return;\n        if (autosize.minRows) {\n          const minRows = Math.max(autosize.minRows, 1);\n          const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n          textareaMirrorEl.style.minHeight = styleMinHeight;\n        }\n        if (autosize.maxRows) {\n          const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n          textareaMirrorEl.style.maxHeight = styleMaxHeight;\n        }\n      }\n    };\n    // word count\n    const maxlengthRef = computed(() => {\n      const {\n        maxlength\n      } = props;\n      return maxlength === undefined ? undefined : Number(maxlength);\n    });\n    onMounted(() => {\n      // sync mirror if is not pair\n      const {\n        value\n      } = mergedValueRef;\n      if (!Array.isArray(value)) {\n        syncMirror(value);\n      }\n    });\n    // other methods\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const vm = getCurrentInstance().proxy;\n    function doUpdateValue(value, meta) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onInput\n      } = props;\n      const {\n        nTriggerFormInput\n      } = formItem;\n      if (onUpdateValue) call(onUpdateValue, value, meta);\n      if (_onUpdateValue) call(_onUpdateValue, value, meta);\n      if (onInput) call(onInput, value, meta);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n    }\n    function doChange(value, meta) {\n      const {\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value, meta);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doUpdateValueBlur(e) {\n      const {\n        onInputBlur\n      } = props;\n      if (onInputBlur) call(onInputBlur, e);\n    }\n    function doUpdateValueFocus(e) {\n      const {\n        onInputFocus\n      } = props;\n      if (onInputFocus) call(onInputFocus, e);\n    }\n    function doDeactivate() {\n      const {\n        onDeactivate\n      } = props;\n      if (onDeactivate) call(onDeactivate);\n    }\n    function doActivate() {\n      const {\n        onActivate\n      } = props;\n      if (onActivate) call(onActivate);\n    }\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) call(onClick, e);\n    }\n    function doWrapperFocus(e) {\n      const {\n        onWrapperFocus\n      } = props;\n      if (onWrapperFocus) call(onWrapperFocus, e);\n    }\n    function doWrapperBlur(e) {\n      const {\n        onWrapperBlur\n      } = props;\n      if (onWrapperBlur) call(onWrapperBlur, e);\n    }\n    // methods\n    function handleCompositionStart() {\n      isComposingRef.value = true;\n    }\n    function handleCompositionEnd(e) {\n      isComposingRef.value = false;\n      if (e.target === inputEl2Ref.value) {\n        handleInput(e, 1);\n      } else {\n        handleInput(e, 0);\n      }\n    }\n    function handleInput(e, index = 0, event = 'input') {\n      const targetValue = e.target.value;\n      syncMirror(targetValue);\n      if (e instanceof InputEvent && !e.isComposing) {\n        isComposingRef.value = false;\n      }\n      if (props.type === 'textarea') {\n        const {\n          value: textareaScrollbarInst\n        } = textareaScrollbarInstRef;\n        if (textareaScrollbarInst) {\n          textareaScrollbarInst.syncUnifiedContainer();\n        }\n      }\n      syncSource = targetValue;\n      if (isComposingRef.value) return;\n      focusedInputCursorControl.recordCursor();\n      const isIncomingValueValid = allowInput(targetValue);\n      if (isIncomingValueValid) {\n        if (!props.pair) {\n          event === 'input' ? doUpdateValue(targetValue, {\n            source: index\n          }) : doChange(targetValue, {\n            source: index\n          });\n        } else {\n          let {\n            value\n          } = mergedValueRef;\n          if (!Array.isArray(value)) {\n            value = ['', ''];\n          } else {\n            value = [value[0], value[1]];\n          }\n          value[index] = targetValue;\n          event === 'input' ? doUpdateValue(value, {\n            source: index\n          }) : doChange(value, {\n            source: index\n          });\n        }\n      }\n      // force update to sync input's view with value\n      // if not set, after input, input value won't sync with dom input value\n      vm.$forceUpdate();\n      if (!isIncomingValueValid) {\n        void nextTick(focusedInputCursorControl.restoreCursor);\n      }\n    }\n    function allowInput(value) {\n      const {\n        countGraphemes,\n        maxlength,\n        minlength\n      } = props;\n      if (countGraphemes) {\n        let graphemesCount;\n        if (maxlength !== undefined) {\n          if (graphemesCount === undefined) {\n            graphemesCount = countGraphemes(value);\n          }\n          if (graphemesCount > Number(maxlength)) return false;\n        }\n        if (minlength !== undefined) {\n          if (graphemesCount === undefined) {\n            graphemesCount = countGraphemes(value);\n          }\n          if (graphemesCount < Number(maxlength)) return false;\n        }\n      }\n      const {\n        allowInput\n      } = props;\n      if (typeof allowInput === 'function') {\n        return allowInput(value);\n      }\n      return true;\n    }\n    function handleInputBlur(e) {\n      doUpdateValueBlur(e);\n      if (e.relatedTarget === wrapperElRef.value) {\n        doDeactivate();\n      }\n      if (!(e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value))) {\n        activatedRef.value = false;\n      }\n      dealWithEvent(e, 'blur');\n      currentFocusedInputRef.value = null;\n    }\n    function handleInputFocus(e, index) {\n      doUpdateValueFocus(e);\n      focusedRef.value = true;\n      activatedRef.value = true;\n      doActivate();\n      dealWithEvent(e, 'focus');\n      if (index === 0) {\n        currentFocusedInputRef.value = inputElRef.value;\n      } else if (index === 1) {\n        currentFocusedInputRef.value = inputEl2Ref.value;\n      } else if (index === 2) {\n        currentFocusedInputRef.value = textareaElRef.value;\n      }\n    }\n    function handleWrapperBlur(e) {\n      if (props.passivelyActivated) {\n        doWrapperBlur(e);\n        dealWithEvent(e, 'blur');\n      }\n    }\n    function handleWrapperFocus(e) {\n      if (props.passivelyActivated) {\n        focusedRef.value = true;\n        doWrapperFocus(e);\n        dealWithEvent(e, 'focus');\n      }\n    }\n    function dealWithEvent(e, type) {\n      if (e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value || e.relatedTarget === wrapperElRef.value)) {\n        /**\n         * activeElement transfer inside the input, do nothing\n         */\n      } else {\n        if (type === 'focus') {\n          doFocus(e);\n          focusedRef.value = true;\n        } else if (type === 'blur') {\n          doBlur(e);\n          focusedRef.value = false;\n        }\n      }\n    }\n    function handleChange(e, index) {\n      handleInput(e, index, 'change');\n    }\n    function handleClick(e) {\n      doClick(e);\n    }\n    function handleClear(e) {\n      doClear(e);\n      clearValue();\n    }\n    function clearValue() {\n      if (props.pair) {\n        doUpdateValue(['', ''], {\n          source: 'clear'\n        });\n        doChange(['', ''], {\n          source: 'clear'\n        });\n      } else {\n        doUpdateValue('', {\n          source: 'clear'\n        });\n        doChange('', {\n          source: 'clear'\n        });\n      }\n    }\n    function handleMouseDown(e) {\n      const {\n        onMousedown\n      } = props;\n      if (onMousedown) onMousedown(e);\n      const {\n        tagName\n      } = e.target;\n      if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n        if (props.resizable) {\n          const {\n            value: wrapperEl\n          } = wrapperElRef;\n          if (wrapperEl) {\n            const {\n              left,\n              top,\n              width,\n              height\n            } = wrapperEl.getBoundingClientRect();\n            const resizeHandleSize = 14;\n            if (left + width - resizeHandleSize < e.clientX && e.clientX < left + width && top + height - resizeHandleSize < e.clientY && e.clientY < top + height) {\n              // touching resize handle, just let it go.\n              // resize won't take focus, maybe there is a better way to do this.\n              // hope someone can figure out a better solution\n              return;\n            }\n          }\n        }\n        e.preventDefault();\n        if (!focusedRef.value) {\n          focus();\n        }\n      }\n    }\n    function handleMouseEnter() {\n      var _a;\n      hoverRef.value = true;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n      }\n    }\n    function handleMouseLeave() {\n      var _a;\n      hoverRef.value = false;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n      }\n    }\n    function handlePasswordToggleClick() {\n      if (mergedDisabledRef.value) return;\n      if (mergedShowPasswordOnRef.value !== 'click') return;\n      passwordVisibleRef.value = !passwordVisibleRef.value;\n    }\n    function handlePasswordToggleMousedown(e) {\n      if (mergedDisabledRef.value) return;\n      e.preventDefault();\n      const preventDefaultOnce = e => {\n        e.preventDefault();\n        off('mouseup', document, preventDefaultOnce);\n      };\n      on('mouseup', document, preventDefaultOnce);\n      if (mergedShowPasswordOnRef.value !== 'mousedown') return;\n      passwordVisibleRef.value = true;\n      const hidePassword = () => {\n        passwordVisibleRef.value = false;\n        off('mouseup', document, hidePassword);\n      };\n      on('mouseup', document, hidePassword);\n    }\n    function handleWrapperKeyup(e) {\n      if (props.onKeyup) call(props.onKeyup, e);\n    }\n    function handleWrapperKeydown(e) {\n      if (props.onKeydown) call(props.onKeydown, e);\n      switch (e.key) {\n        case 'Escape':\n          handleWrapperKeydownEsc();\n          break;\n        case 'Enter':\n          handleWrapperKeydownEnter(e);\n          break;\n      }\n    }\n    function handleWrapperKeydownEnter(e) {\n      var _a, _b;\n      if (props.passivelyActivated) {\n        const {\n          value: focused\n        } = activatedRef;\n        if (focused) {\n          if (props.internalDeactivateOnEnter) {\n            handleWrapperKeydownEsc();\n          }\n          return;\n        }\n        e.preventDefault();\n        if (props.type === 'textarea') {\n          (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n      }\n    }\n    function handleWrapperKeydownEsc() {\n      if (props.passivelyActivated) {\n        activatedRef.value = false;\n        void nextTick(() => {\n          var _a;\n          (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        });\n      }\n    }\n    function focus() {\n      var _a, _b, _c;\n      if (mergedDisabledRef.value) return;\n      if (props.passivelyActivated) {\n        (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n    function blur() {\n      var _a;\n      if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n        ;\n        document.activeElement.blur();\n      }\n    }\n    function select() {\n      var _a, _b;\n      (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n    }\n    function activate() {\n      if (mergedDisabledRef.value) return;\n      if (textareaElRef.value) textareaElRef.value.focus();else if (inputElRef.value) inputElRef.value.focus();\n    }\n    function deactivate() {\n      const {\n        value: wrapperEl\n      } = wrapperElRef;\n      if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) && wrapperEl !== document.activeElement) {\n        handleWrapperKeydownEsc();\n      }\n    }\n    function scrollTo(options) {\n      if (props.type === 'textarea') {\n        const {\n          value: textareaEl\n        } = textareaElRef;\n        textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n      } else {\n        const {\n          value: inputEl\n        } = inputElRef;\n        inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n      }\n    }\n    function syncMirror(value) {\n      const {\n        type,\n        pair,\n        autosize\n      } = props;\n      if (!pair && autosize) {\n        if (type === 'textarea') {\n          const {\n            value: textareaMirrorEl\n          } = textareaMirrorElRef;\n          if (textareaMirrorEl) {\n            textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n          }\n        } else {\n          const {\n            value: inputMirrorEl\n          } = inputMirrorElRef;\n          if (inputMirrorEl) {\n            if (value) {\n              inputMirrorEl.textContent = value;\n            } else {\n              inputMirrorEl.innerHTML = '&nbsp;';\n            }\n          }\n        }\n      }\n    }\n    function handleTextAreaMirrorResize() {\n      updateTextAreaStyle();\n    }\n    const placeholderStyleRef = ref({\n      top: '0'\n    });\n    function handleTextAreaScroll(e) {\n      var _a;\n      const {\n        scrollTop\n      } = e.target;\n      placeholderStyleRef.value.top = `${-scrollTop}px`;\n      (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n    }\n    let stopWatchMergedValue1 = null;\n    watchEffect(() => {\n      const {\n        autosize,\n        type\n      } = props;\n      if (autosize && type === 'textarea') {\n        stopWatchMergedValue1 = watch(mergedValueRef, value => {\n          if (!Array.isArray(value) && value !== syncSource) {\n            syncMirror(value);\n          }\n        });\n      } else {\n        stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n      }\n    });\n    let stopWatchMergedValue2 = null;\n    watchEffect(() => {\n      if (props.type === 'textarea') {\n        stopWatchMergedValue2 = watch(mergedValueRef, value => {\n          var _a;\n          if (!Array.isArray(value) && value !== syncSource) {\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n          }\n        });\n      } else {\n        stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n      }\n    });\n    provide(inputInjectionKey, {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef,\n      countGraphemesRef: toRef(props, 'countGraphemes')\n    });\n    const exposedProps = {\n      wrapperElRef,\n      inputElRef,\n      textareaElRef,\n      isCompositing: isComposingRef,\n      clear: clearValue,\n      focus,\n      blur,\n      select,\n      deactivate,\n      activate,\n      scrollTo\n    };\n    const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          borderRadius,\n          textColor,\n          caretColor,\n          caretColorError,\n          caretColorWarning,\n          textDecorationColor,\n          border,\n          borderDisabled,\n          borderHover,\n          borderFocus,\n          placeholderColor,\n          placeholderColorDisabled,\n          lineHeightTextarea,\n          colorDisabled,\n          colorFocus,\n          textColorDisabled,\n          boxShadowFocus,\n          iconSize,\n          colorFocusWarning,\n          boxShadowFocusWarning,\n          borderWarning,\n          borderFocusWarning,\n          borderHoverWarning,\n          colorFocusError,\n          boxShadowFocusError,\n          borderError,\n          borderFocusError,\n          borderHoverError,\n          clearSize,\n          clearColor,\n          clearColorHover,\n          clearColorPressed,\n          iconColor,\n          iconColorDisabled,\n          suffixTextColor,\n          countTextColor,\n          countTextColorDisabled,\n          iconColorHover,\n          iconColorPressed,\n          loadingColor,\n          loadingColorError,\n          loadingColorWarning,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height\n        }\n      } = themeRef.value;\n      const {\n        left: paddingLeft,\n        right: paddingRight\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-count-text-color': countTextColor,\n        '--n-count-text-color-disabled': countTextColorDisabled,\n        '--n-color': color,\n        '--n-font-size': fontSize,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-padding-left': paddingLeft,\n        '--n-padding-right': paddingRight,\n        '--n-text-color': textColor,\n        '--n-caret-color': caretColor,\n        '--n-text-decoration-color': textDecorationColor,\n        '--n-border': border,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-hover': borderHover,\n        '--n-border-focus': borderFocus,\n        '--n-placeholder-color': placeholderColor,\n        '--n-placeholder-color-disabled': placeholderColorDisabled,\n        '--n-icon-size': iconSize,\n        '--n-line-height-textarea': lineHeightTextarea,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-focus': colorFocus,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        // form warning\n        '--n-caret-color-warning': caretColorWarning,\n        '--n-color-focus-warning': colorFocusWarning,\n        '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n        '--n-border-warning': borderWarning,\n        '--n-border-focus-warning': borderFocusWarning,\n        '--n-border-hover-warning': borderHoverWarning,\n        '--n-loading-color-warning': loadingColorWarning,\n        // form error\n        '--n-caret-color-error': caretColorError,\n        '--n-color-focus-error': colorFocusError,\n        '--n-box-shadow-focus-error': boxShadowFocusError,\n        '--n-border-error': borderError,\n        '--n-border-focus-error': borderFocusError,\n        '--n-border-hover-error': borderHoverError,\n        '--n-loading-color-error': loadingColorError,\n        // clear-button\n        '--n-clear-color': clearColor,\n        '--n-clear-size': clearSize,\n        '--n-clear-color-hover': clearColorHover,\n        '--n-clear-color-pressed': clearColorPressed,\n        '--n-icon-color': iconColor,\n        '--n-icon-color-hover': iconColorHover,\n        '--n-icon-color-pressed': iconColorPressed,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-suffix-text-color': suffixTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('input', computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      return size[0];\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedProps), {\n      // DOM ref\n      wrapperElRef,\n      inputElRef,\n      inputMirrorElRef,\n      inputEl2Ref,\n      textareaElRef,\n      textareaMirrorElRef,\n      textareaScrollbarInstRef,\n      // value\n      rtlEnabled: rtlEnabledRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      passwordVisible: passwordVisibleRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      showPlaceholder1: showPlaceholder1Ref,\n      showPlaceholder2: showPlaceholder2Ref,\n      mergedFocus: mergedFocusRef,\n      isComposing: isComposingRef,\n      activated: activatedRef,\n      showClearButton,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      textDecorationStyle: textDecorationStyleRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      mergedShowPasswordOn: mergedShowPasswordOnRef,\n      placeholderStyle: placeholderStyleRef,\n      mergedStatus: mergedStatusRef,\n      textAreaScrollContainerWidth: textAreaScrollContainerWidthRef,\n      // methods\n      handleTextAreaScroll,\n      handleCompositionStart,\n      handleCompositionEnd,\n      handleInput,\n      handleInputBlur,\n      handleInputFocus,\n      handleWrapperBlur,\n      handleWrapperFocus,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      handleChange,\n      handleClick,\n      handleClear,\n      handlePasswordToggleClick,\n      handlePasswordToggleMousedown,\n      handleWrapperKeydown,\n      handleWrapperKeyup,\n      handleTextAreaMirrorResize,\n      getTextareaScrollContainer: () => {\n        return textareaElRef.value;\n      },\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a, _b;\n    const {\n      mergedClsPrefix,\n      mergedStatus,\n      themeClass,\n      type,\n      countGraphemes,\n      onRender\n    } = this;\n    const $slots = this.$slots;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"wrapperElRef\",\n      class: [`${mergedClsPrefix}-input`, themeClass, mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`, {\n        [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n        [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n        [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n        [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n        [`${mergedClsPrefix}-input--pair`]: this.pair,\n        [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n        [`${mergedClsPrefix}-input--stateful`]: this.stateful\n      }],\n      style: this.cssVars,\n      tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated ? 0 : undefined,\n      onFocus: this.handleWrapperFocus,\n      onBlur: this.handleWrapperBlur,\n      onClick: this.handleClick,\n      onMousedown: this.handleMouseDown,\n      onMouseenter: this.handleMouseEnter,\n      onMouseleave: this.handleMouseLeave,\n      onCompositionstart: this.handleCompositionStart,\n      onCompositionend: this.handleCompositionEnd,\n      onKeyup: this.handleWrapperKeyup,\n      onKeydown: this.handleWrapperKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, resolveWrappedSlot($slots.prefix, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-input__prefix`\n    }, children)), type === 'textarea' ? h(NScrollbar, {\n      ref: \"textareaScrollbarInstRef\",\n      class: `${mergedClsPrefix}-input__textarea`,\n      container: this.getTextareaScrollContainer,\n      triggerDisplayManually: true,\n      useUnifiedContainer: true,\n      internalHoistYRail: true\n    }, {\n      default: () => {\n        var _a, _b;\n        const {\n          textAreaScrollContainerWidth\n        } = this;\n        const scrollContainerWidthStyle = {\n          width: this.autosize && textAreaScrollContainerWidth && `${textAreaScrollContainerWidth}px`\n        };\n        return h(Fragment, null, h(\"textarea\", Object.assign({}, this.inputProps, {\n          ref: \"textareaElRef\",\n          class: [`${mergedClsPrefix}-input__textarea-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n          autofocus: this.autofocus,\n          rows: Number(this.rows),\n          placeholder: this.placeholder,\n          value: this.mergedValue,\n          disabled: this.mergedDisabled,\n          maxlength: countGraphemes ? undefined : this.maxlength,\n          minlength: countGraphemes ? undefined : this.minlength,\n          readonly: this.readonly,\n          tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n          style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style, scrollContainerWidthStyle],\n          onBlur: this.handleInputBlur,\n          onFocus: e => {\n            this.handleInputFocus(e, 2);\n          },\n          onInput: this.handleInput,\n          onChange: this.handleChange,\n          onScroll: this.handleTextAreaScroll\n        })), this.showPlaceholder1 ? h(\"div\", {\n          class: `${mergedClsPrefix}-input__placeholder`,\n          style: [this.placeholderStyle, scrollContainerWidthStyle],\n          key: \"placeholder\"\n        }, this.mergedPlaceholder[0]) : null, this.autosize ? h(VResizeObserver, {\n          onResize: this.handleTextAreaMirrorResize\n        }, {\n          default: () => h(\"div\", {\n            ref: \"textareaMirrorElRef\",\n            class: `${mergedClsPrefix}-input__textarea-mirror`,\n            key: \"mirror\"\n          })\n        }) : null);\n      }\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", Object.assign({\n      type: type === 'password' && this.mergedShowPasswordOn && this.passwordVisible ? 'text' : type\n    }, this.inputProps, {\n      ref: \"inputElRef\",\n      class: [`${mergedClsPrefix}-input__input-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n      style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style],\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[0],\n      disabled: this.mergedDisabled,\n      maxlength: countGraphemes ? undefined : this.maxlength,\n      minlength: countGraphemes ? undefined : this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[0] : this.mergedValue,\n      readonly: this.readonly,\n      autofocus: this.autofocus,\n      size: this.attrSize,\n      onBlur: this.handleInputBlur,\n      onFocus: e => {\n        this.handleInputFocus(e, 0);\n      },\n      onInput: e => {\n        this.handleInput(e, 0);\n      },\n      onChange: e => {\n        this.handleChange(e, 0);\n      }\n    })), this.showPlaceholder1 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[0])) : null, this.autosize ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__input-mirror`,\n      key: \"mirror\",\n      ref: \"inputMirrorElRef\"\n    }, \"\\u00A0\") : null), !this.pair && resolveWrappedSlot($slots.suffix, children => {\n      return children || this.clearable || this.showCount || this.mergedShowPasswordOn || this.loading !== undefined ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [resolveWrappedSlot($slots['clear-icon-placeholder'], children => {\n        return (this.clearable || children) && h(NBaseClear, {\n          clsPrefix: mergedClsPrefix,\n          show: this.showClearButton,\n          onClear: this.handleClear\n        }, {\n          placeholder: () => children,\n          icon: () => {\n            var _a, _b;\n            return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n        });\n      }), !this.internalLoadingBeforeSuffix ? children : null, this.loading !== undefined ? h(NBaseSuffix, {\n        clsPrefix: mergedClsPrefix,\n        loading: this.loading,\n        showArrow: false,\n        showClear: false,\n        style: this.cssVars\n      }) : null, this.internalLoadingBeforeSuffix ? children : null, this.showCount && this.type !== 'textarea' ? h(WordCount, null, {\n        default: props => {\n          var _a;\n          return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n        }\n      }) : null, this.mergedShowPasswordOn && this.type === 'password' ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__eye`,\n        onMousedown: this.handlePasswordToggleMousedown,\n        onClick: this.handlePasswordToggleClick\n      }, this.passwordVisible ? resolveSlot($slots['password-visible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeIcon, null)\n      })]) : resolveSlot($slots['password-invisible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeOffIcon, null)\n      })])) : null]) : null;\n    })), this.pair ? h(\"span\", {\n      class: `${mergedClsPrefix}-input__separator`\n    }, resolveSlot($slots.separator, () => [this.separator])) : null, this.pair ? h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", {\n      ref: \"inputEl2Ref\",\n      type: this.type,\n      class: `${mergedClsPrefix}-input__input-el`,\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[1],\n      disabled: this.mergedDisabled,\n      maxlength: countGraphemes ? undefined : this.maxlength,\n      minlength: countGraphemes ? undefined : this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[1] : undefined,\n      readonly: this.readonly,\n      style: this.textDecorationStyle[1],\n      onBlur: this.handleInputBlur,\n      onFocus: e => {\n        this.handleInputFocus(e, 1);\n      },\n      onInput: e => {\n        this.handleInput(e, 1);\n      },\n      onChange: e => {\n        this.handleChange(e, 1);\n      }\n    }), this.showPlaceholder2 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[1])) : null), resolveWrappedSlot($slots.suffix, children => {\n      return (this.clearable || children) && h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [this.clearable && h(NBaseClear, {\n        clsPrefix: mergedClsPrefix,\n        show: this.showClearButton,\n        onClear: this.handleClear\n      }, {\n        icon: () => {\n          var _a;\n          return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        },\n        placeholder: () => {\n          var _a;\n          return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        }\n      }), children]);\n    })) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__border`\n    }) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__state-border`\n    }) : null, this.showCount && type === 'textarea' ? h(WordCount, null, {\n      default: props => {\n        var _a;\n        const {\n          renderCount\n        } = this;\n        if (renderCount) {\n          return renderCount(props);\n        }\n        return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n      }\n    }) : null);\n  }\n});","map":{"version":3,"names":["h","computed","defineComponent","nextTick","ref","toRef","onMounted","getCurrentInstance","watch","watchEffect","provide","Fragment","useMergedState","useMemo","getPadding","VResizeObserver","off","on","isSafari","EyeIcon","EyeOffIcon","useRtl","NBaseClear","NBaseIcon","NBaseSuffix","NScrollbar","useTheme","useLocale","useFormItem","useConfig","useThemeClass","useStyle","call","createKey","resolveSlot","resolveWrappedSlot","warnOnce","inputLight","inputInjectionKey","isEmptyInputValue","useCursor","WordCount","style","safariStyle","inputProps","Object","assign","props","bordered","type","Boolean","default","undefined","String","placeholder","Array","defaultValue","value","disabled","size","rows","Number","round","minlength","maxlength","clearable","autosize","pair","separator","readonly","passivelyActivated","showPasswordOn","stateful","autofocus","resizable","showCount","loading","allowInput","Function","renderCount","onMousedown","onKeydown","onKeyup","onInput","onFocus","onBlur","onClick","onChange","onClear","countGraphemes","status","onUpdateValue","textDecoration","attrSize","onInputBlur","onInputFocus","onDeactivate","onActivate","onWrapperFocus","onWrapperBlur","internalDeactivateOnEnter","internalForceFocus","internalLoadingBeforeSuffix","showPasswordToggle","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","inlineThemeDisabled","mergedRtlRef","themeRef","wrapperElRef","textareaElRef","textareaMirrorElRef","inputMirrorElRef","inputElRef","inputEl2Ref","currentFocusedInputRef","focusedInputCursorControl","textareaScrollbarInstRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","focusedRef","hoverRef","isComposingRef","activatedRef","syncSource","mergedPlaceholderRef","isArray","showPlaceholder1Ref","isComposing","mergedValue","mergedPlaceholder","showPlaceholder2Ref","mergedFocusRef","showClearButton","mergedFocus","mergedShowPasswordOnRef","passwordVisibleRef","textDecorationStyleRef","map","v","textAreaScrollContainerWidthRef","updateTextAreaStyle","_a","_b","$el","offsetWidth","paddingTop","stylePaddingTop","paddingBottom","stylePaddingBottom","lineHeight","styleLineHeight","window","getComputedStyle","slice","textareaMirrorEl","minRows","Math","max","styleMinHeight","minHeight","maxRows","styleMaxHeight","maxHeight","maxlengthRef","syncMirror","vm","proxy","doUpdateValue","meta","_onUpdateValue","nTriggerFormInput","doChange","nTriggerFormChange","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","doClear","doUpdateValueBlur","doUpdateValueFocus","doDeactivate","doActivate","doClick","doWrapperFocus","doWrapperBlur","handleCompositionStart","handleCompositionEnd","target","handleInput","index","event","targetValue","InputEvent","textareaScrollbarInst","syncUnifiedContainer","recordCursor","isIncomingValueValid","source","$forceUpdate","restoreCursor","graphemesCount","handleInputBlur","relatedTarget","dealWithEvent","handleInputFocus","handleWrapperBlur","handleWrapperFocus","handleChange","handleClick","handleClear","clearValue","handleMouseDown","tagName","wrapperEl","left","top","width","height","getBoundingClientRect","resizeHandleSize","clientX","clientY","preventDefault","focus","handleMouseEnter","handleMouseEnterWrapper","handleMouseLeave","handleMouseLeaveWrapper","handlePasswordToggleClick","handlePasswordToggleMousedown","preventDefaultOnce","document","hidePassword","handleWrapperKeyup","handleWrapperKeydown","key","handleWrapperKeydownEsc","handleWrapperKeydownEnter","focused","_c","blur","contains","activeElement","select","activate","deactivate","scrollTo","options","textareaEl","inputEl","textContent","inputMirrorEl","innerHTML","handleTextAreaMirrorResize","placeholderStyleRef","handleTextAreaScroll","scrollTop","stopWatchMergedValue1","stopWatchMergedValue2","countGraphemesRef","exposedProps","isCompositing","clear","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","color","borderRadius","textColor","caretColor","caretColorError","caretColorWarning","textDecorationColor","border","borderDisabled","borderHover","borderFocus","placeholderColor","placeholderColorDisabled","lineHeightTextarea","colorDisabled","colorFocus","textColorDisabled","boxShadowFocus","iconSize","colorFocusWarning","boxShadowFocusWarning","borderWarning","borderFocusWarning","borderHoverWarning","colorFocusError","boxShadowFocusError","borderError","borderFocusError","borderHoverError","clearSize","clearColor","clearColorHover","clearColorPressed","iconColor","iconColorDisabled","suffixTextColor","countTextColor","countTextColorDisabled","iconColorHover","iconColorPressed","loadingColor","loadingColorError","loadingColorWarning","padding","fontSize","paddingLeft","right","paddingRight","themeClassHandle","rtlEnabled","uncontrolledValue","passwordVisible","showPlaceholder1","showPlaceholder2","activated","mergedSize","mergedDisabled","textDecorationStyle","mergedClsPrefix","mergedBordered","mergedShowPasswordOn","placeholderStyle","mergedStatus","textAreaScrollContainerWidth","getTextareaScrollContainer","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","tabindex","onMouseenter","onMouseleave","onCompositionstart","onCompositionend","prefix","children","container","triggerDisplayManually","useUnifiedContainer","internalHoistYRail","scrollContainerWidthStyle","onScroll","onResize","suffix","clsPrefix","show","icon","showArrow","showClear","count"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/input/src/Input.mjs"],"sourcesContent":["import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from \"../../_utils/env/browser.mjs\";\nimport { EyeIcon, EyeOffIcon } from \"../../_internal/icons/index.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from \"../../_internal/index.mjs\";\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from \"../../_mixins/index.mjs\";\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from \"../../_utils/index.mjs\";\nimport { inputLight } from \"../styles/index.mjs\";\nimport { inputInjectionKey } from \"./interface.mjs\";\nimport { isEmptyInputValue, useCursor } from \"./utils.mjs\";\nimport WordCount from \"./WordCount.mjs\";\nimport style, { safariStyle } from \"./styles/input.cssr.mjs\";\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  placeholder: [Array, String],\n  defaultValue: {\n    type: [String, Array],\n    default: null\n  },\n  value: [String, Array],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  rows: {\n    type: [Number, String],\n    default: 3\n  },\n  round: Boolean,\n  minlength: [String, Number],\n  maxlength: [String, Number],\n  clearable: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    default: false\n  },\n  pair: Boolean,\n  separator: String,\n  readonly: {\n    type: [String, Boolean],\n    default: false\n  },\n  passivelyActivated: Boolean,\n  showPasswordOn: String,\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  autofocus: Boolean,\n  inputProps: Object,\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  showCount: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  allowInput: Function,\n  renderCount: Function,\n  onMousedown: Function,\n  onKeydown: Function,\n  onKeyup: [Function, Array],\n  onInput: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClick: [Function, Array],\n  onChange: [Function, Array],\n  onClear: [Function, Array],\n  countGraphemes: Function,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  /** private */\n  textDecoration: [String, Array],\n  attrSize: {\n    type: Number,\n    default: 20\n  },\n  onInputBlur: [Function, Array],\n  onInputFocus: [Function, Array],\n  onDeactivate: [Function, Array],\n  onActivate: [Function, Array],\n  onWrapperFocus: [Function, Array],\n  onWrapperBlur: [Function, Array],\n  internalDeactivateOnEnter: Boolean,\n  internalForceFocus: Boolean,\n  internalLoadingBeforeSuffix: {\n    type: Boolean,\n    default: true\n  },\n  /** deprecated */\n  showPasswordToggle: Boolean\n});\nexport default defineComponent({\n  name: 'Input',\n  props: inputProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.showPasswordToggle) {\n          warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n        }\n      });\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n    if (isSafari) {\n      useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n    }\n    // dom refs\n    const wrapperElRef = ref(null);\n    const textareaElRef = ref(null);\n    const textareaMirrorElRef = ref(null);\n    const inputMirrorElRef = ref(null);\n    const inputElRef = ref(null);\n    const inputEl2Ref = ref(null);\n    const currentFocusedInputRef = ref(null);\n    const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n    const textareaScrollbarInstRef = ref(null);\n    // local\n    const {\n      localeRef\n    } = useLocale('Input');\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    // form-item\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // states\n    const focusedRef = ref(false);\n    const hoverRef = ref(false);\n    const isComposingRef = ref(false);\n    const activatedRef = ref(false);\n    let syncSource = null;\n    // placeholder\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder,\n        pair\n      } = props;\n      if (pair) {\n        if (Array.isArray(placeholder)) {\n          return placeholder;\n        } else if (placeholder === undefined) {\n          return ['', ''];\n        }\n        return [placeholder, placeholder];\n      } else if (placeholder === undefined) {\n        return [localeRef.value.placeholder];\n      } else {\n        return [placeholder];\n      }\n    });\n    const showPlaceholder1Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0])) && mergedPlaceholder[0];\n    });\n    const showPlaceholder2Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && mergedPlaceholder[1] && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]));\n    });\n    // focus\n    const mergedFocusRef = useMemo(() => {\n      return props.internalForceFocus || focusedRef.value;\n    });\n    // clear\n    const showClearButton = useMemo(() => {\n      if (mergedDisabledRef.value || props.readonly || !props.clearable || !mergedFocusRef.value && !hoverRef.value) {\n        return false;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedFocus\n      } = mergedFocusRef;\n      if (props.pair) {\n        return !!(Array.isArray(mergedValue) && (mergedValue[0] || mergedValue[1])) && (hoverRef.value || mergedFocus);\n      } else {\n        return !!mergedValue && (hoverRef.value || mergedFocus);\n      }\n    });\n    // passwordVisible\n    const mergedShowPasswordOnRef = computed(() => {\n      const {\n        showPasswordOn\n      } = props;\n      if (showPasswordOn) {\n        return showPasswordOn;\n      }\n      if (props.showPasswordToggle) return 'click';\n      return undefined;\n    });\n    const passwordVisibleRef = ref(false);\n    // text-decoration\n    const textDecorationStyleRef = computed(() => {\n      const {\n        textDecoration\n      } = props;\n      if (!textDecoration) return ['', ''];\n      if (Array.isArray(textDecoration)) {\n        return textDecoration.map(v => ({\n          textDecoration: v\n        }));\n      }\n      return [{\n        textDecoration\n      }];\n    });\n    const textAreaScrollContainerWidthRef = ref(undefined);\n    // textarea autosize\n    const updateTextAreaStyle = () => {\n      var _a, _b;\n      if (props.type === 'textarea') {\n        const {\n          autosize\n        } = props;\n        if (autosize) {\n          textAreaScrollContainerWidthRef.value = (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        }\n        if (!textareaElRef.value) return;\n        if (typeof autosize === 'boolean') return;\n        const {\n          paddingTop: stylePaddingTop,\n          paddingBottom: stylePaddingBottom,\n          lineHeight: styleLineHeight\n        } = window.getComputedStyle(textareaElRef.value);\n        const paddingTop = Number(stylePaddingTop.slice(0, -2));\n        const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n        const lineHeight = Number(styleLineHeight.slice(0, -2));\n        const {\n          value: textareaMirrorEl\n        } = textareaMirrorElRef;\n        if (!textareaMirrorEl) return;\n        if (autosize.minRows) {\n          const minRows = Math.max(autosize.minRows, 1);\n          const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n          textareaMirrorEl.style.minHeight = styleMinHeight;\n        }\n        if (autosize.maxRows) {\n          const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n          textareaMirrorEl.style.maxHeight = styleMaxHeight;\n        }\n      }\n    };\n    // word count\n    const maxlengthRef = computed(() => {\n      const {\n        maxlength\n      } = props;\n      return maxlength === undefined ? undefined : Number(maxlength);\n    });\n    onMounted(() => {\n      // sync mirror if is not pair\n      const {\n        value\n      } = mergedValueRef;\n      if (!Array.isArray(value)) {\n        syncMirror(value);\n      }\n    });\n    // other methods\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const vm = getCurrentInstance().proxy;\n    function doUpdateValue(value, meta) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onInput\n      } = props;\n      const {\n        nTriggerFormInput\n      } = formItem;\n      if (onUpdateValue) call(onUpdateValue, value, meta);\n      if (_onUpdateValue) call(_onUpdateValue, value, meta);\n      if (onInput) call(onInput, value, meta);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n    }\n    function doChange(value, meta) {\n      const {\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value, meta);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doUpdateValueBlur(e) {\n      const {\n        onInputBlur\n      } = props;\n      if (onInputBlur) call(onInputBlur, e);\n    }\n    function doUpdateValueFocus(e) {\n      const {\n        onInputFocus\n      } = props;\n      if (onInputFocus) call(onInputFocus, e);\n    }\n    function doDeactivate() {\n      const {\n        onDeactivate\n      } = props;\n      if (onDeactivate) call(onDeactivate);\n    }\n    function doActivate() {\n      const {\n        onActivate\n      } = props;\n      if (onActivate) call(onActivate);\n    }\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) call(onClick, e);\n    }\n    function doWrapperFocus(e) {\n      const {\n        onWrapperFocus\n      } = props;\n      if (onWrapperFocus) call(onWrapperFocus, e);\n    }\n    function doWrapperBlur(e) {\n      const {\n        onWrapperBlur\n      } = props;\n      if (onWrapperBlur) call(onWrapperBlur, e);\n    }\n    // methods\n    function handleCompositionStart() {\n      isComposingRef.value = true;\n    }\n    function handleCompositionEnd(e) {\n      isComposingRef.value = false;\n      if (e.target === inputEl2Ref.value) {\n        handleInput(e, 1);\n      } else {\n        handleInput(e, 0);\n      }\n    }\n    function handleInput(e, index = 0, event = 'input') {\n      const targetValue = e.target.value;\n      syncMirror(targetValue);\n      if (e instanceof InputEvent && !e.isComposing) {\n        isComposingRef.value = false;\n      }\n      if (props.type === 'textarea') {\n        const {\n          value: textareaScrollbarInst\n        } = textareaScrollbarInstRef;\n        if (textareaScrollbarInst) {\n          textareaScrollbarInst.syncUnifiedContainer();\n        }\n      }\n      syncSource = targetValue;\n      if (isComposingRef.value) return;\n      focusedInputCursorControl.recordCursor();\n      const isIncomingValueValid = allowInput(targetValue);\n      if (isIncomingValueValid) {\n        if (!props.pair) {\n          event === 'input' ? doUpdateValue(targetValue, {\n            source: index\n          }) : doChange(targetValue, {\n            source: index\n          });\n        } else {\n          let {\n            value\n          } = mergedValueRef;\n          if (!Array.isArray(value)) {\n            value = ['', ''];\n          } else {\n            value = [value[0], value[1]];\n          }\n          value[index] = targetValue;\n          event === 'input' ? doUpdateValue(value, {\n            source: index\n          }) : doChange(value, {\n            source: index\n          });\n        }\n      }\n      // force update to sync input's view with value\n      // if not set, after input, input value won't sync with dom input value\n      vm.$forceUpdate();\n      if (!isIncomingValueValid) {\n        void nextTick(focusedInputCursorControl.restoreCursor);\n      }\n    }\n    function allowInput(value) {\n      const {\n        countGraphemes,\n        maxlength,\n        minlength\n      } = props;\n      if (countGraphemes) {\n        let graphemesCount;\n        if (maxlength !== undefined) {\n          if (graphemesCount === undefined) {\n            graphemesCount = countGraphemes(value);\n          }\n          if (graphemesCount > Number(maxlength)) return false;\n        }\n        if (minlength !== undefined) {\n          if (graphemesCount === undefined) {\n            graphemesCount = countGraphemes(value);\n          }\n          if (graphemesCount < Number(maxlength)) return false;\n        }\n      }\n      const {\n        allowInput\n      } = props;\n      if (typeof allowInput === 'function') {\n        return allowInput(value);\n      }\n      return true;\n    }\n    function handleInputBlur(e) {\n      doUpdateValueBlur(e);\n      if (e.relatedTarget === wrapperElRef.value) {\n        doDeactivate();\n      }\n      if (!(e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value))) {\n        activatedRef.value = false;\n      }\n      dealWithEvent(e, 'blur');\n      currentFocusedInputRef.value = null;\n    }\n    function handleInputFocus(e, index) {\n      doUpdateValueFocus(e);\n      focusedRef.value = true;\n      activatedRef.value = true;\n      doActivate();\n      dealWithEvent(e, 'focus');\n      if (index === 0) {\n        currentFocusedInputRef.value = inputElRef.value;\n      } else if (index === 1) {\n        currentFocusedInputRef.value = inputEl2Ref.value;\n      } else if (index === 2) {\n        currentFocusedInputRef.value = textareaElRef.value;\n      }\n    }\n    function handleWrapperBlur(e) {\n      if (props.passivelyActivated) {\n        doWrapperBlur(e);\n        dealWithEvent(e, 'blur');\n      }\n    }\n    function handleWrapperFocus(e) {\n      if (props.passivelyActivated) {\n        focusedRef.value = true;\n        doWrapperFocus(e);\n        dealWithEvent(e, 'focus');\n      }\n    }\n    function dealWithEvent(e, type) {\n      if (e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value || e.relatedTarget === wrapperElRef.value)) {\n        /**\n         * activeElement transfer inside the input, do nothing\n         */\n      } else {\n        if (type === 'focus') {\n          doFocus(e);\n          focusedRef.value = true;\n        } else if (type === 'blur') {\n          doBlur(e);\n          focusedRef.value = false;\n        }\n      }\n    }\n    function handleChange(e, index) {\n      handleInput(e, index, 'change');\n    }\n    function handleClick(e) {\n      doClick(e);\n    }\n    function handleClear(e) {\n      doClear(e);\n      clearValue();\n    }\n    function clearValue() {\n      if (props.pair) {\n        doUpdateValue(['', ''], {\n          source: 'clear'\n        });\n        doChange(['', ''], {\n          source: 'clear'\n        });\n      } else {\n        doUpdateValue('', {\n          source: 'clear'\n        });\n        doChange('', {\n          source: 'clear'\n        });\n      }\n    }\n    function handleMouseDown(e) {\n      const {\n        onMousedown\n      } = props;\n      if (onMousedown) onMousedown(e);\n      const {\n        tagName\n      } = e.target;\n      if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n        if (props.resizable) {\n          const {\n            value: wrapperEl\n          } = wrapperElRef;\n          if (wrapperEl) {\n            const {\n              left,\n              top,\n              width,\n              height\n            } = wrapperEl.getBoundingClientRect();\n            const resizeHandleSize = 14;\n            if (left + width - resizeHandleSize < e.clientX && e.clientX < left + width && top + height - resizeHandleSize < e.clientY && e.clientY < top + height) {\n              // touching resize handle, just let it go.\n              // resize won't take focus, maybe there is a better way to do this.\n              // hope someone can figure out a better solution\n              return;\n            }\n          }\n        }\n        e.preventDefault();\n        if (!focusedRef.value) {\n          focus();\n        }\n      }\n    }\n    function handleMouseEnter() {\n      var _a;\n      hoverRef.value = true;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n      }\n    }\n    function handleMouseLeave() {\n      var _a;\n      hoverRef.value = false;\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n      }\n    }\n    function handlePasswordToggleClick() {\n      if (mergedDisabledRef.value) return;\n      if (mergedShowPasswordOnRef.value !== 'click') return;\n      passwordVisibleRef.value = !passwordVisibleRef.value;\n    }\n    function handlePasswordToggleMousedown(e) {\n      if (mergedDisabledRef.value) return;\n      e.preventDefault();\n      const preventDefaultOnce = e => {\n        e.preventDefault();\n        off('mouseup', document, preventDefaultOnce);\n      };\n      on('mouseup', document, preventDefaultOnce);\n      if (mergedShowPasswordOnRef.value !== 'mousedown') return;\n      passwordVisibleRef.value = true;\n      const hidePassword = () => {\n        passwordVisibleRef.value = false;\n        off('mouseup', document, hidePassword);\n      };\n      on('mouseup', document, hidePassword);\n    }\n    function handleWrapperKeyup(e) {\n      if (props.onKeyup) call(props.onKeyup, e);\n    }\n    function handleWrapperKeydown(e) {\n      if (props.onKeydown) call(props.onKeydown, e);\n      switch (e.key) {\n        case 'Escape':\n          handleWrapperKeydownEsc();\n          break;\n        case 'Enter':\n          handleWrapperKeydownEnter(e);\n          break;\n      }\n    }\n    function handleWrapperKeydownEnter(e) {\n      var _a, _b;\n      if (props.passivelyActivated) {\n        const {\n          value: focused\n        } = activatedRef;\n        if (focused) {\n          if (props.internalDeactivateOnEnter) {\n            handleWrapperKeydownEsc();\n          }\n          return;\n        }\n        e.preventDefault();\n        if (props.type === 'textarea') {\n          (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n      }\n    }\n    function handleWrapperKeydownEsc() {\n      if (props.passivelyActivated) {\n        activatedRef.value = false;\n        void nextTick(() => {\n          var _a;\n          (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        });\n      }\n    }\n    function focus() {\n      var _a, _b, _c;\n      if (mergedDisabledRef.value) return;\n      if (props.passivelyActivated) {\n        (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n    function blur() {\n      var _a;\n      if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n        ;\n        document.activeElement.blur();\n      }\n    }\n    function select() {\n      var _a, _b;\n      (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n    }\n    function activate() {\n      if (mergedDisabledRef.value) return;\n      if (textareaElRef.value) textareaElRef.value.focus();else if (inputElRef.value) inputElRef.value.focus();\n    }\n    function deactivate() {\n      const {\n        value: wrapperEl\n      } = wrapperElRef;\n      if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) && wrapperEl !== document.activeElement) {\n        handleWrapperKeydownEsc();\n      }\n    }\n    function scrollTo(options) {\n      if (props.type === 'textarea') {\n        const {\n          value: textareaEl\n        } = textareaElRef;\n        textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n      } else {\n        const {\n          value: inputEl\n        } = inputElRef;\n        inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n      }\n    }\n    function syncMirror(value) {\n      const {\n        type,\n        pair,\n        autosize\n      } = props;\n      if (!pair && autosize) {\n        if (type === 'textarea') {\n          const {\n            value: textareaMirrorEl\n          } = textareaMirrorElRef;\n          if (textareaMirrorEl) {\n            textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n          }\n        } else {\n          const {\n            value: inputMirrorEl\n          } = inputMirrorElRef;\n          if (inputMirrorEl) {\n            if (value) {\n              inputMirrorEl.textContent = value;\n            } else {\n              inputMirrorEl.innerHTML = '&nbsp;';\n            }\n          }\n        }\n      }\n    }\n    function handleTextAreaMirrorResize() {\n      updateTextAreaStyle();\n    }\n    const placeholderStyleRef = ref({\n      top: '0'\n    });\n    function handleTextAreaScroll(e) {\n      var _a;\n      const {\n        scrollTop\n      } = e.target;\n      placeholderStyleRef.value.top = `${-scrollTop}px`;\n      (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n    }\n    let stopWatchMergedValue1 = null;\n    watchEffect(() => {\n      const {\n        autosize,\n        type\n      } = props;\n      if (autosize && type === 'textarea') {\n        stopWatchMergedValue1 = watch(mergedValueRef, value => {\n          if (!Array.isArray(value) && value !== syncSource) {\n            syncMirror(value);\n          }\n        });\n      } else {\n        stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n      }\n    });\n    let stopWatchMergedValue2 = null;\n    watchEffect(() => {\n      if (props.type === 'textarea') {\n        stopWatchMergedValue2 = watch(mergedValueRef, value => {\n          var _a;\n          if (!Array.isArray(value) && value !== syncSource) {\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n          }\n        });\n      } else {\n        stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n      }\n    });\n    provide(inputInjectionKey, {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef,\n      countGraphemesRef: toRef(props, 'countGraphemes')\n    });\n    const exposedProps = {\n      wrapperElRef,\n      inputElRef,\n      textareaElRef,\n      isCompositing: isComposingRef,\n      clear: clearValue,\n      focus,\n      blur,\n      select,\n      deactivate,\n      activate,\n      scrollTo\n    };\n    const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          borderRadius,\n          textColor,\n          caretColor,\n          caretColorError,\n          caretColorWarning,\n          textDecorationColor,\n          border,\n          borderDisabled,\n          borderHover,\n          borderFocus,\n          placeholderColor,\n          placeholderColorDisabled,\n          lineHeightTextarea,\n          colorDisabled,\n          colorFocus,\n          textColorDisabled,\n          boxShadowFocus,\n          iconSize,\n          colorFocusWarning,\n          boxShadowFocusWarning,\n          borderWarning,\n          borderFocusWarning,\n          borderHoverWarning,\n          colorFocusError,\n          boxShadowFocusError,\n          borderError,\n          borderFocusError,\n          borderHoverError,\n          clearSize,\n          clearColor,\n          clearColorHover,\n          clearColorPressed,\n          iconColor,\n          iconColorDisabled,\n          suffixTextColor,\n          countTextColor,\n          countTextColorDisabled,\n          iconColorHover,\n          iconColorPressed,\n          loadingColor,\n          loadingColorError,\n          loadingColorWarning,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height\n        }\n      } = themeRef.value;\n      const {\n        left: paddingLeft,\n        right: paddingRight\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-count-text-color': countTextColor,\n        '--n-count-text-color-disabled': countTextColorDisabled,\n        '--n-color': color,\n        '--n-font-size': fontSize,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-padding-left': paddingLeft,\n        '--n-padding-right': paddingRight,\n        '--n-text-color': textColor,\n        '--n-caret-color': caretColor,\n        '--n-text-decoration-color': textDecorationColor,\n        '--n-border': border,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-hover': borderHover,\n        '--n-border-focus': borderFocus,\n        '--n-placeholder-color': placeholderColor,\n        '--n-placeholder-color-disabled': placeholderColorDisabled,\n        '--n-icon-size': iconSize,\n        '--n-line-height-textarea': lineHeightTextarea,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-focus': colorFocus,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        // form warning\n        '--n-caret-color-warning': caretColorWarning,\n        '--n-color-focus-warning': colorFocusWarning,\n        '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n        '--n-border-warning': borderWarning,\n        '--n-border-focus-warning': borderFocusWarning,\n        '--n-border-hover-warning': borderHoverWarning,\n        '--n-loading-color-warning': loadingColorWarning,\n        // form error\n        '--n-caret-color-error': caretColorError,\n        '--n-color-focus-error': colorFocusError,\n        '--n-box-shadow-focus-error': boxShadowFocusError,\n        '--n-border-error': borderError,\n        '--n-border-focus-error': borderFocusError,\n        '--n-border-hover-error': borderHoverError,\n        '--n-loading-color-error': loadingColorError,\n        // clear-button\n        '--n-clear-color': clearColor,\n        '--n-clear-size': clearSize,\n        '--n-clear-color-hover': clearColorHover,\n        '--n-clear-color-pressed': clearColorPressed,\n        '--n-icon-color': iconColor,\n        '--n-icon-color-hover': iconColorHover,\n        '--n-icon-color-pressed': iconColorPressed,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-suffix-text-color': suffixTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('input', computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      return size[0];\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedProps), {\n      // DOM ref\n      wrapperElRef,\n      inputElRef,\n      inputMirrorElRef,\n      inputEl2Ref,\n      textareaElRef,\n      textareaMirrorElRef,\n      textareaScrollbarInstRef,\n      // value\n      rtlEnabled: rtlEnabledRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      passwordVisible: passwordVisibleRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      showPlaceholder1: showPlaceholder1Ref,\n      showPlaceholder2: showPlaceholder2Ref,\n      mergedFocus: mergedFocusRef,\n      isComposing: isComposingRef,\n      activated: activatedRef,\n      showClearButton,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      textDecorationStyle: textDecorationStyleRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      mergedShowPasswordOn: mergedShowPasswordOnRef,\n      placeholderStyle: placeholderStyleRef,\n      mergedStatus: mergedStatusRef,\n      textAreaScrollContainerWidth: textAreaScrollContainerWidthRef,\n      // methods\n      handleTextAreaScroll,\n      handleCompositionStart,\n      handleCompositionEnd,\n      handleInput,\n      handleInputBlur,\n      handleInputFocus,\n      handleWrapperBlur,\n      handleWrapperFocus,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      handleChange,\n      handleClick,\n      handleClear,\n      handlePasswordToggleClick,\n      handlePasswordToggleMousedown,\n      handleWrapperKeydown,\n      handleWrapperKeyup,\n      handleTextAreaMirrorResize,\n      getTextareaScrollContainer: () => {\n        return textareaElRef.value;\n      },\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a, _b;\n    const {\n      mergedClsPrefix,\n      mergedStatus,\n      themeClass,\n      type,\n      countGraphemes,\n      onRender\n    } = this;\n    const $slots = this.$slots;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"wrapperElRef\",\n      class: [`${mergedClsPrefix}-input`, themeClass, mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`, {\n        [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n        [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n        [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n        [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n        [`${mergedClsPrefix}-input--pair`]: this.pair,\n        [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n        [`${mergedClsPrefix}-input--stateful`]: this.stateful\n      }],\n      style: this.cssVars,\n      tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated ? 0 : undefined,\n      onFocus: this.handleWrapperFocus,\n      onBlur: this.handleWrapperBlur,\n      onClick: this.handleClick,\n      onMousedown: this.handleMouseDown,\n      onMouseenter: this.handleMouseEnter,\n      onMouseleave: this.handleMouseLeave,\n      onCompositionstart: this.handleCompositionStart,\n      onCompositionend: this.handleCompositionEnd,\n      onKeyup: this.handleWrapperKeyup,\n      onKeydown: this.handleWrapperKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, resolveWrappedSlot($slots.prefix, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-input__prefix`\n    }, children)), type === 'textarea' ? h(NScrollbar, {\n      ref: \"textareaScrollbarInstRef\",\n      class: `${mergedClsPrefix}-input__textarea`,\n      container: this.getTextareaScrollContainer,\n      triggerDisplayManually: true,\n      useUnifiedContainer: true,\n      internalHoistYRail: true\n    }, {\n      default: () => {\n        var _a, _b;\n        const {\n          textAreaScrollContainerWidth\n        } = this;\n        const scrollContainerWidthStyle = {\n          width: this.autosize && textAreaScrollContainerWidth && `${textAreaScrollContainerWidth}px`\n        };\n        return h(Fragment, null, h(\"textarea\", Object.assign({}, this.inputProps, {\n          ref: \"textareaElRef\",\n          class: [`${mergedClsPrefix}-input__textarea-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n          autofocus: this.autofocus,\n          rows: Number(this.rows),\n          placeholder: this.placeholder,\n          value: this.mergedValue,\n          disabled: this.mergedDisabled,\n          maxlength: countGraphemes ? undefined : this.maxlength,\n          minlength: countGraphemes ? undefined : this.minlength,\n          readonly: this.readonly,\n          tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n          style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style, scrollContainerWidthStyle],\n          onBlur: this.handleInputBlur,\n          onFocus: e => {\n            this.handleInputFocus(e, 2);\n          },\n          onInput: this.handleInput,\n          onChange: this.handleChange,\n          onScroll: this.handleTextAreaScroll\n        })), this.showPlaceholder1 ? h(\"div\", {\n          class: `${mergedClsPrefix}-input__placeholder`,\n          style: [this.placeholderStyle, scrollContainerWidthStyle],\n          key: \"placeholder\"\n        }, this.mergedPlaceholder[0]) : null, this.autosize ? h(VResizeObserver, {\n          onResize: this.handleTextAreaMirrorResize\n        }, {\n          default: () => h(\"div\", {\n            ref: \"textareaMirrorElRef\",\n            class: `${mergedClsPrefix}-input__textarea-mirror`,\n            key: \"mirror\"\n          })\n        }) : null);\n      }\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", Object.assign({\n      type: type === 'password' && this.mergedShowPasswordOn && this.passwordVisible ? 'text' : type\n    }, this.inputProps, {\n      ref: \"inputElRef\",\n      class: [`${mergedClsPrefix}-input__input-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n      style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style],\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[0],\n      disabled: this.mergedDisabled,\n      maxlength: countGraphemes ? undefined : this.maxlength,\n      minlength: countGraphemes ? undefined : this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[0] : this.mergedValue,\n      readonly: this.readonly,\n      autofocus: this.autofocus,\n      size: this.attrSize,\n      onBlur: this.handleInputBlur,\n      onFocus: e => {\n        this.handleInputFocus(e, 0);\n      },\n      onInput: e => {\n        this.handleInput(e, 0);\n      },\n      onChange: e => {\n        this.handleChange(e, 0);\n      }\n    })), this.showPlaceholder1 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[0])) : null, this.autosize ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__input-mirror`,\n      key: \"mirror\",\n      ref: \"inputMirrorElRef\"\n    }, \"\\u00A0\") : null), !this.pair && resolveWrappedSlot($slots.suffix, children => {\n      return children || this.clearable || this.showCount || this.mergedShowPasswordOn || this.loading !== undefined ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [resolveWrappedSlot($slots['clear-icon-placeholder'], children => {\n        return (this.clearable || children) && h(NBaseClear, {\n          clsPrefix: mergedClsPrefix,\n          show: this.showClearButton,\n          onClear: this.handleClear\n        }, {\n          placeholder: () => children,\n          icon: () => {\n            var _a, _b;\n            return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n        });\n      }), !this.internalLoadingBeforeSuffix ? children : null, this.loading !== undefined ? h(NBaseSuffix, {\n        clsPrefix: mergedClsPrefix,\n        loading: this.loading,\n        showArrow: false,\n        showClear: false,\n        style: this.cssVars\n      }) : null, this.internalLoadingBeforeSuffix ? children : null, this.showCount && this.type !== 'textarea' ? h(WordCount, null, {\n        default: props => {\n          var _a;\n          return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n        }\n      }) : null, this.mergedShowPasswordOn && this.type === 'password' ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__eye`,\n        onMousedown: this.handlePasswordToggleMousedown,\n        onClick: this.handlePasswordToggleClick\n      }, this.passwordVisible ? resolveSlot($slots['password-visible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeIcon, null)\n      })]) : resolveSlot($slots['password-invisible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeOffIcon, null)\n      })])) : null]) : null;\n    })), this.pair ? h(\"span\", {\n      class: `${mergedClsPrefix}-input__separator`\n    }, resolveSlot($slots.separator, () => [this.separator])) : null, this.pair ? h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", {\n      ref: \"inputEl2Ref\",\n      type: this.type,\n      class: `${mergedClsPrefix}-input__input-el`,\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[1],\n      disabled: this.mergedDisabled,\n      maxlength: countGraphemes ? undefined : this.maxlength,\n      minlength: countGraphemes ? undefined : this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[1] : undefined,\n      readonly: this.readonly,\n      style: this.textDecorationStyle[1],\n      onBlur: this.handleInputBlur,\n      onFocus: e => {\n        this.handleInputFocus(e, 1);\n      },\n      onInput: e => {\n        this.handleInput(e, 1);\n      },\n      onChange: e => {\n        this.handleChange(e, 1);\n      }\n    }), this.showPlaceholder2 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[1])) : null), resolveWrappedSlot($slots.suffix, children => {\n      return (this.clearable || children) && h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [this.clearable && h(NBaseClear, {\n        clsPrefix: mergedClsPrefix,\n        show: this.showClearButton,\n        onClear: this.handleClear\n      }, {\n        icon: () => {\n          var _a;\n          return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        },\n        placeholder: () => {\n          var _a;\n          return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        }\n      }), children]);\n    })) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__border`\n    }) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__state-border`\n    }) : null, this.showCount && type === 'textarea' ? h(WordCount, null, {\n      default: props => {\n        var _a;\n        const {\n          renderCount\n        } = this;\n        if (renderCount) {\n          return renderCount(props);\n        }\n        return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n      }\n    }) : null);\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}