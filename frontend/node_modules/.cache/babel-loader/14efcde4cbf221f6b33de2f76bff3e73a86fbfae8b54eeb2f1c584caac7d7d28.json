{"ast":null,"code":"// store/index.js\nimport { defineStore } from 'pinia';\nexport const useAuthStore = defineStore('user', {\n  state: () => ({\n    isLoggedIn: false,\n    userData: null\n    // isAuthenticated: false,\n  }),\n  // 你可以添加 actions 和 mutations 等\n  actions: {\n    logIn({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: 'http://your-backend-url/api/login',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = resp.data.token.access;\n          const user = resp.data.username;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', {\n            token,\n            user\n          });\n          resolve(resp);\n        }).catch(err => {\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    logOut() {\n      this.isLoggedIn = false;\n      this.userData = null;\n      // 清除存储等清理工作\n    },\n    checkLoginStatus() {\n      // 根据localStorage或其他持久化存储状态恢复登录状态\n      // 例如:\n      const userData = localStorage.getItem('user');\n      if (user) {\n        const userData = JSON.parse(user);\n        const now = new Date().getTime();\n        if (userData.expiration > now) {\n          this.logIn(userData);\n        } else {\n          this.logOut(); // 清除过期Token\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useAuthStore","state","isLoggedIn","userData","actions","logIn","commit","user","Promise","resolve","reject","axios","url","data","method","then","resp","token","access","username","localStorage","setItem","defaults","headers","common","catch","err","removeItem","logOut","checkLoginStatus","getItem","JSON","parse","now","Date","getTime","expiration"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/store/index.js"],"sourcesContent":["// store/index.js\nimport { defineStore } from 'pinia';\n\nexport const useAuthStore = defineStore(\n  'user',{\n  state: () => ({\n    isLoggedIn: false,\n    userData: null,\n    // isAuthenticated: false,\n  }),\n  // 你可以添加 actions 和 mutations 等\n   actions: {\n     logIn({commit}, user) {\n       return new Promise((resolve, reject) => {\n          axios({url: 'http://your-backend-url/api/login', data: user, method: 'POST' })\n          .then(resp => {\n            const token = resp.data.token.access\n            const user = resp.data.username\n            localStorage.setItem('token', token)\n            axios.defaults.headers.common['Authorization'] = token\n            commit('auth_success', { token, user })\n            resolve(resp)\n          })\n          .catch(err => {\n            localStorage.removeItem('token')\n            reject(err)\n          })\n       })\n     },\n     logOut() {\n       this.isLoggedIn = false;\n       this.userData = null;\n       // 清除存储等清理工作\n     },\n     checkLoginStatus() {\n      // 根据localStorage或其他持久化存储状态恢复登录状态\n      // 例如:\n      const userData = localStorage.getItem('user');\n      if (user) {\n        const userData = JSON.parse(user);\n        const now = new Date().getTime();\n        if (userData.expiration > now) {\n          this.logIn(userData);\n          } \n        else {\n          this.logOut(); // 清除过期Token\n          }\n      }\n    }\n   }\n});\n\n\n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,GAAGD,WAAW,CACrC,MAAM,EAAC;EACPE,KAAK,EAAEA,CAAA,MAAO;IACZC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE;IACV;EACF,CAAC,CAAC;EACF;EACCC,OAAO,EAAE;IACPC,KAAKA,CAAC;MAACC;IAAM,CAAC,EAAEC,IAAI,EAAE;MACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACrCC,KAAK,CAAC;UAACC,GAAG,EAAE,mCAAmC;UAAEC,IAAI,EAAEN,IAAI;UAAEO,MAAM,EAAE;QAAO,CAAC,CAAC,CAC7EC,IAAI,CAACC,IAAI,IAAI;UACZ,MAAMC,KAAK,GAAGD,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,MAAM;UACpC,MAAMX,IAAI,GAAGS,IAAI,CAACH,IAAI,CAACM,QAAQ;UAC/BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;UACpCN,KAAK,CAACW,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAGP,KAAK;UACtDX,MAAM,CAAC,cAAc,EAAE;YAAEW,KAAK;YAAEV;UAAK,CAAC,CAAC;UACvCE,OAAO,CAACO,IAAI,CAAC;QACf,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAI;UACZN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;UAChCjB,MAAM,CAACgB,GAAG,CAAC;QACb,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC1B,UAAU,GAAG,KAAK;MACvB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB;IACF,CAAC;IACD0B,gBAAgBA,CAAA,EAAG;MAClB;MACA;MACA,MAAM1B,QAAQ,GAAGiB,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAIvB,IAAI,EAAE;QACR,MAAMJ,QAAQ,GAAG4B,IAAI,CAACC,KAAK,CAACzB,IAAI,CAAC;QACjC,MAAM0B,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAChC,IAAIhC,QAAQ,CAACiC,UAAU,GAAGH,GAAG,EAAE;UAC7B,IAAI,CAAC5B,KAAK,CAACF,QAAQ,CAAC;QACpB,CAAC,MACE;UACH,IAAI,CAACyB,MAAM,CAAC,CAAC,CAAC,CAAC;QACf;MACJ;IACF;EACD;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}