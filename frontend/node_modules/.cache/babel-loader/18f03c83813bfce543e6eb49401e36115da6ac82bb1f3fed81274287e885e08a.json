{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { watch, onMounted, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\n// injection.collection {\n//   key1: [insta, instb]\n//   key2: [instc]\n// }\nexport function useInjectionInstanceCollection(injectionName, collectionKey, registerKeyRef) {\n  var _a;\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  const vm = (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy;\n  watch(registerKeyRef, registerInstance);\n  registerInstance(registerKeyRef.value);\n  onBeforeUnmount(() => {\n    registerInstance(undefined, registerKeyRef.value);\n  });\n  function registerInstance(key, oldKey) {\n    if (!injection) return;\n    const collection = injection[collectionKey];\n    if (oldKey !== undefined) removeInstance(collection, oldKey);\n    if (key !== undefined) addInstance(collection, key);\n  }\n  function removeInstance(collection, key) {\n    if (!collection[key]) collection[key] = [];\n    collection[key].splice(collection[key].findIndex(instance => instance === vm), 1);\n  }\n  function addInstance(collection, key) {\n    if (!collection[key]) collection[key] = [];\n    if (!~collection[key].findIndex(instance => instance === vm)) {\n      collection[key].push(vm);\n    }\n  }\n}\n// injection.collection {\n//   key1: [insta.value, instb.value]\n//   key2: [instc.value]\n// }\nexport function useInjectionCollection(injectionName, collectionKey, valueRef) {\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  if (!(collectionKey in injection)) {\n    injection[collectionKey] = [];\n  }\n  injection[collectionKey].push(valueRef.value);\n  watch(valueRef, (value, prevValue) => {\n    const collectionArray = injection[collectionKey];\n    const index = collectionArray.findIndex(collectionValue => collectionValue === prevValue);\n    if (~index) collectionArray.splice(index, 1);\n    collectionArray.push(value);\n  });\n  onBeforeUnmount(() => {\n    const collectionArray = injection[collectionKey];\n    const index = collectionArray.findIndex(collectionValue => collectionValue === valueRef.value);\n    if (~index) collectionArray.splice(index, 1);\n  });\n}\n// injection.collection {\n//   key1: [insta.$el, instb.$el]\n//   key2: [instc.$el]\n// }\nexport function useInjectionElementCollection(injectionName, collectionKey, getElement) {\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  if (!(collectionKey in injection)) {\n    injection[collectionKey] = [];\n  }\n  onMounted(() => {\n    const el = getElement();\n    if (!el) return;\n    injection[collectionKey].push(el);\n  });\n  onBeforeUnmount(() => {\n    const collectionArray = injection[collectionKey];\n    const element = getElement();\n    const index = collectionArray.findIndex(collectionElement => collectionElement === element);\n    if (~index) collectionArray.splice(index, 1);\n  });\n}","map":{"version":3,"names":["watch","onMounted","inject","getCurrentInstance","onBeforeUnmount","useInjectionInstanceCollection","injectionName","collectionKey","registerKeyRef","_a","injection","vm","proxy","registerInstance","value","undefined","key","oldKey","collection","removeInstance","addInstance","splice","findIndex","instance","push","useInjectionCollection","valueRef","prevValue","collectionArray","index","collectionValue","useInjectionElementCollection","getElement","el","element","collectionElement"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/_utils/composable/use-collection.mjs"],"sourcesContent":["import { watch, onMounted, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\n// injection.collection {\n//   key1: [insta, instb]\n//   key2: [instc]\n// }\nexport function useInjectionInstanceCollection(injectionName, collectionKey, registerKeyRef) {\n  var _a;\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  const vm = (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy;\n  watch(registerKeyRef, registerInstance);\n  registerInstance(registerKeyRef.value);\n  onBeforeUnmount(() => {\n    registerInstance(undefined, registerKeyRef.value);\n  });\n  function registerInstance(key, oldKey) {\n    if (!injection) return;\n    const collection = injection[collectionKey];\n    if (oldKey !== undefined) removeInstance(collection, oldKey);\n    if (key !== undefined) addInstance(collection, key);\n  }\n  function removeInstance(collection, key) {\n    if (!collection[key]) collection[key] = [];\n    collection[key].splice(collection[key].findIndex(instance => instance === vm), 1);\n  }\n  function addInstance(collection, key) {\n    if (!collection[key]) collection[key] = [];\n    if (!~collection[key].findIndex(instance => instance === vm)) {\n      collection[key].push(vm);\n    }\n  }\n}\n// injection.collection {\n//   key1: [insta.value, instb.value]\n//   key2: [instc.value]\n// }\nexport function useInjectionCollection(injectionName, collectionKey, valueRef) {\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  if (!(collectionKey in injection)) {\n    injection[collectionKey] = [];\n  }\n  injection[collectionKey].push(valueRef.value);\n  watch(valueRef, (value, prevValue) => {\n    const collectionArray = injection[collectionKey];\n    const index = collectionArray.findIndex(collectionValue => collectionValue === prevValue);\n    if (~index) collectionArray.splice(index, 1);\n    collectionArray.push(value);\n  });\n  onBeforeUnmount(() => {\n    const collectionArray = injection[collectionKey];\n    const index = collectionArray.findIndex(collectionValue => collectionValue === valueRef.value);\n    if (~index) collectionArray.splice(index, 1);\n  });\n}\n// injection.collection {\n//   key1: [insta.$el, instb.$el]\n//   key2: [instc.$el]\n// }\nexport function useInjectionElementCollection(injectionName, collectionKey, getElement) {\n  const injection = inject(injectionName, null);\n  if (injection === null) return;\n  if (!(collectionKey in injection)) {\n    injection[collectionKey] = [];\n  }\n  onMounted(() => {\n    const el = getElement();\n    if (!el) return;\n    injection[collectionKey].push(el);\n  });\n  onBeforeUnmount(() => {\n    const collectionArray = injection[collectionKey];\n    const element = getElement();\n    const index = collectionArray.findIndex(collectionElement => collectionElement === element);\n    if (~index) collectionArray.splice(index, 1);\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}