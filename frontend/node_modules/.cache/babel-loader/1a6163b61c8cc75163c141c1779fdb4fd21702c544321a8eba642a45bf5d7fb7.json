{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_n_calendar = _resolveComponent(\"n-calendar\");\n  return _openBlock(), _createBlock(_component_n_calendar, {\n    value: _ctx.value,\n    \"onUpdate:value\": [_cache[0] || (_cache[0] = $event => _ctx.value = $event), _ctx.handleUpdateValue],\n    \"is-date-disabled\": _ctx.isDateDisabled\n  }, {\n    default: _withCtx(({\n      year,\n      month,\n      date\n    }) => [_createTextVNode(_toDisplayString(year) + \"-\" + _toDisplayString(month) + \"-\" + _toDisplayString(date), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"value\", \"is-date-disabled\", \"onUpdate:value\"]);\n}","map":{"version":3,"names":["_createBlock","_component_n_calendar","value","_ctx","$event","handleUpdateValue","isDateDisabled","default","_withCtx","year","month","date","_createTextVNode","_toDisplayString","_"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n\n<n-calendar\n    v-model:value=\"value\"\n    #=\"{ year, month, date }\"\n    :is-date-disabled=\"isDateDisabled\"\n    @update:value=\"handleUpdateValue\"\n  >\n    {{ year }}-{{ month }}-{{ date }}\n  </n-calendar>\n\n</template>\n\n<script setup>\nimport { isYesterday, addDays } from 'date-fns/esm';\nimport {NCalendar} from 'naive-ui';\nimport {ref} from 'vue';\n\n//const message = useMessage();\nconst value = ref(addDays(Date.now(), 1).valueOf());\nconst handleUpdateValue = (_, { year, month, date }) => {\n  \n  console.log(`${year}-${month}-${date}`);\n};\n\n\nconst isDateDisabled = (timestamp) => {\n    if (isYesterday(timestamp)) {\n          return true\n        }\n    return false\n    };\n\nconst fetchUserInfo = async() => {\n      const token = localStorage.getItem('token');\n      console.log(token);\n      try {\n        const resp =  await axios.get('http://localhost:8005/account/auth/',{\n            headers: {\n                'Authorization': `Bearer ${token}` // 设置请求头\n                }});\n        console.log('验证结果:')\n        console.log(resp.data);\n        userName.value = resp.data.username;\n        //has_brands.value = resp.data.created_brands.length;\n        //localStorage.setItem('username',resp.data.username);\n          } catch (error) {\n        console.error('Failed to fetch user info:', error);\n      }\n    };\nonBeforeMount(async()={\n    fetchUserInfo()})\n\n</script>\n"],"mappings":";;;uBAEAA,YAAA,CAOeC,qBAAA;IANHC,KAAK,EAAEC,IAAA,CAAAD,KAAK;IAHxB,mB,oCAGmBC,IAAA,CAAAD,KAAK,GAAAE,MAAA,GAGLD,IAAA,CAAAE,iBAAiB,C;IAD/B,kBAAgB,EAAEF,IAAA,CAAAG;;IALvBC,OAAA,EAAAC,QAAA,CAQI,CAAU;MAJLC,IAAI;MAAEC,KAAK;MAAEC;IAAI,OAJ1BC,gBAAA,CAAAC,gBAAA,CAQOJ,IAAI,IAAG,GAAC,GAAAI,gBAAA,CAAGH,KAAK,IAAG,GAAC,GAAAG,gBAAA,CAAGF,IAAI,iB;IARlCG,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}