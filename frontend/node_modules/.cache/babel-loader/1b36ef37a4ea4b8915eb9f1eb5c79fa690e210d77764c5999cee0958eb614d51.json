{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from \"../../_internal/icons/index.mjs\";\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { resolveSlot, throwError } from \"../../_utils/index.mjs\";\nimport { uploadInjectionKey } from \"./interface.mjs\";\nimport { getFilesFromEntries } from \"./utils.mjs\";\nimport NUploadDragger from \"./UploadDragger.mjs\";\nexport default defineComponent({\n  name: 'UploadTrigger',\n  props: {\n    abstract: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n    if (!NUpload) {\n      throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedDisabledRef,\n      maxReachedRef,\n      listTypeRef,\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDirectoryDndRef,\n      triggerClassRef,\n      triggerStyleRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value || maxReachedRef.value) return;\n      openOpenFileDialog();\n    }\n    function handleTriggerDragOver(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragEnter(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragLeave(e) {\n      e.preventDefault();\n      dragOverRef.value = false;\n    }\n    function handleTriggerDrop(e) {\n      var _a;\n      e.preventDefault();\n      if (!draggerInsideRef.value || mergedDisabledRef.value || maxReachedRef.value) {\n        dragOverRef.value = false;\n        return;\n      }\n      const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n      if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n        void getFilesFromEntries(Array.from(dataTransferItems).map(item => item.webkitGetAsEntry()), mergedDirectoryDndRef.value).then(files => {\n          handleFileAddition(files);\n        }).finally(() => {\n          dragOverRef.value = false;\n        });\n      } else {\n        dragOverRef.value = false;\n      }\n    }\n    return () => {\n      var _a;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return props.abstract ? (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        handleClick: handleTriggerClick,\n        handleDrop: handleTriggerDrop,\n        handleDragOver: handleTriggerDragOver,\n        handleDragEnter: handleTriggerDragEnter,\n        handleDragLeave: handleTriggerDragLeave\n      }) : h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-trigger`, (mergedDisabledRef.value || maxReachedRef.value) && `${mergedClsPrefix}-upload-trigger--disabled`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-trigger--image-card`, triggerClassRef.value],\n        style: triggerStyleRef.value,\n        onClick: handleTriggerClick,\n        onDrop: handleTriggerDrop,\n        onDragover: handleTriggerDragOver,\n        onDragenter: handleTriggerDragEnter,\n        onDragleave: handleTriggerDragLeave\n      }, isImageCardTypeRef.value ? h(NUploadDragger, null, {\n        default: () => resolveSlot(slots.default, () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      }) : slots);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","computed","AddIcon","NBaseIcon","resolveSlot","throwError","uploadInjectionKey","getFilesFromEntries","NUploadDragger","name","props","abstract","Boolean","setup","slots","NUpload","mergedClsPrefixRef","mergedDisabledRef","maxReachedRef","listTypeRef","dragOverRef","openOpenFileDialog","draggerInsideRef","handleFileAddition","mergedDirectoryDndRef","triggerClassRef","triggerStyleRef","isImageCardTypeRef","value","handleTriggerClick","handleTriggerDragOver","e","preventDefault","handleTriggerDragEnter","handleTriggerDragLeave","handleTriggerDrop","_a","dataTransferItems","dataTransfer","items","length","Array","from","map","item","webkitGetAsEntry","then","files","finally","mergedClsPrefix","default","call","handleClick","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","class","style","onClick","onDrop","onDragover","onDragenter","onDragleave","clsPrefix"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/upload/src/UploadTrigger.mjs"],"sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from \"../../_internal/icons/index.mjs\";\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { resolveSlot, throwError } from \"../../_utils/index.mjs\";\nimport { uploadInjectionKey } from \"./interface.mjs\";\nimport { getFilesFromEntries } from \"./utils.mjs\";\nimport NUploadDragger from \"./UploadDragger.mjs\";\nexport default defineComponent({\n  name: 'UploadTrigger',\n  props: {\n    abstract: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n    if (!NUpload) {\n      throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedDisabledRef,\n      maxReachedRef,\n      listTypeRef,\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDirectoryDndRef,\n      triggerClassRef,\n      triggerStyleRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value || maxReachedRef.value) return;\n      openOpenFileDialog();\n    }\n    function handleTriggerDragOver(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragEnter(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n    function handleTriggerDragLeave(e) {\n      e.preventDefault();\n      dragOverRef.value = false;\n    }\n    function handleTriggerDrop(e) {\n      var _a;\n      e.preventDefault();\n      if (!draggerInsideRef.value || mergedDisabledRef.value || maxReachedRef.value) {\n        dragOverRef.value = false;\n        return;\n      }\n      const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n      if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n        void getFilesFromEntries(Array.from(dataTransferItems).map(item => item.webkitGetAsEntry()), mergedDirectoryDndRef.value).then(files => {\n          handleFileAddition(files);\n        }).finally(() => {\n          dragOverRef.value = false;\n        });\n      } else {\n        dragOverRef.value = false;\n      }\n    }\n    return () => {\n      var _a;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return props.abstract ? (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        handleClick: handleTriggerClick,\n        handleDrop: handleTriggerDrop,\n        handleDragOver: handleTriggerDragOver,\n        handleDragEnter: handleTriggerDragEnter,\n        handleDragLeave: handleTriggerDragLeave\n      }) : h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-trigger`, (mergedDisabledRef.value || maxReachedRef.value) && `${mergedClsPrefix}-upload-trigger--disabled`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-trigger--image-card`, triggerClassRef.value],\n        style: triggerStyleRef.value,\n        onClick: handleTriggerClick,\n        onDrop: handleTriggerDrop,\n        onDragover: handleTriggerDragOver,\n        onDragenter: handleTriggerDragEnter,\n        onDragleave: handleTriggerDragLeave\n      }, isImageCardTypeRef.value ? h(NUploadDragger, null, {\n        default: () => resolveSlot(slots.default, () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      }) : slots);\n    };\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}