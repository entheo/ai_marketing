{"ast":null,"code":"import { h, defineComponent, ref, mergeProps } from 'vue';\nimport { useMergedClsPrefix } from \"../../_mixins/use-config.mjs\";\nimport { useStyle } from \"../../_mixins/index.mjs\";\nimport Ellipsis, { createCursorClass, createLineClampClass, ellipsisProps } from \"./Ellipsis.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const NPerformantEllipsis = defineComponent({\n  name: 'PerformantEllipsis',\n  props: ellipsisProps,\n  inheritAttrs: false,\n  setup(props, {\n    attrs,\n    slots\n  }) {\n    const mouseEnteredRef = ref(false);\n    const mergedClsPrefixRef = useMergedClsPrefix();\n    useStyle('-ellipsis', style, mergedClsPrefixRef);\n    // Modified from Ellipsis.tsx\n    const renderTrigger = () => {\n      const {\n        lineClamp\n      } = props;\n      const mergedClsPrefix = mergedClsPrefixRef.value;\n      return h(\"span\", Object.assign({}, mergeProps(attrs, {\n        class: [`${mergedClsPrefix}-ellipsis`, lineClamp !== undefined ? createLineClampClass(mergedClsPrefix) : undefined, props.expandTrigger === 'click' ? createCursorClass(mergedClsPrefix, 'pointer') : undefined],\n        style: lineClamp === undefined ? {\n          textOverflow: 'ellipsis'\n        } : {\n          '-webkit-line-clamp': lineClamp\n        }\n      }), {\n        onMouseenter: () => {\n          mouseEnteredRef.value = true;\n        }\n      }), lineClamp ? slots : h(\"span\", null, slots));\n    };\n    return {\n      mouseEntered: mouseEnteredRef,\n      renderTrigger\n    };\n  },\n  render() {\n    if (this.mouseEntered) {\n      return h(Ellipsis, mergeProps({}, this.$attrs, this.$props), this.$slots);\n    } else {\n      return this.renderTrigger();\n    }\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","mergeProps","useMergedClsPrefix","useStyle","Ellipsis","createCursorClass","createLineClampClass","ellipsisProps","style","NPerformantEllipsis","name","props","inheritAttrs","setup","attrs","slots","mouseEnteredRef","mergedClsPrefixRef","renderTrigger","lineClamp","mergedClsPrefix","value","Object","assign","class","undefined","expandTrigger","textOverflow","onMouseenter","mouseEntered","render","$attrs","$props","$slots"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/ellipsis/src/PerformantEllipsis.mjs"],"sourcesContent":["import { h, defineComponent, ref, mergeProps } from 'vue';\nimport { useMergedClsPrefix } from \"../../_mixins/use-config.mjs\";\nimport { useStyle } from \"../../_mixins/index.mjs\";\nimport Ellipsis, { createCursorClass, createLineClampClass, ellipsisProps } from \"./Ellipsis.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const NPerformantEllipsis = defineComponent({\n  name: 'PerformantEllipsis',\n  props: ellipsisProps,\n  inheritAttrs: false,\n  setup(props, {\n    attrs,\n    slots\n  }) {\n    const mouseEnteredRef = ref(false);\n    const mergedClsPrefixRef = useMergedClsPrefix();\n    useStyle('-ellipsis', style, mergedClsPrefixRef);\n    // Modified from Ellipsis.tsx\n    const renderTrigger = () => {\n      const {\n        lineClamp\n      } = props;\n      const mergedClsPrefix = mergedClsPrefixRef.value;\n      return h(\"span\", Object.assign({}, mergeProps(attrs, {\n        class: [`${mergedClsPrefix}-ellipsis`, lineClamp !== undefined ? createLineClampClass(mergedClsPrefix) : undefined, props.expandTrigger === 'click' ? createCursorClass(mergedClsPrefix, 'pointer') : undefined],\n        style: lineClamp === undefined ? {\n          textOverflow: 'ellipsis'\n        } : {\n          '-webkit-line-clamp': lineClamp\n        }\n      }), {\n        onMouseenter: () => {\n          mouseEnteredRef.value = true;\n        }\n      }), lineClamp ? slots : h(\"span\", null, slots));\n    };\n    return {\n      mouseEntered: mouseEnteredRef,\n      renderTrigger\n    };\n  },\n  render() {\n    if (this.mouseEntered) {\n      return h(Ellipsis, mergeProps({}, this.$attrs, this.$props), this.$slots);\n    } else {\n      return this.renderTrigger();\n    }\n  }\n});"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,GAAG,EAAEC,UAAU,QAAQ,KAAK;AACzD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,QAAQ,IAAIC,iBAAiB,EAAEC,oBAAoB,EAAEC,aAAa,QAAQ,gBAAgB;AACjG,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAO,MAAMC,mBAAmB,GAAGV,eAAe,CAAC;EACjDW,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAEJ,aAAa;EACpBK,YAAY,EAAE,KAAK;EACnBC,KAAKA,CAACF,KAAK,EAAE;IACXG,KAAK;IACLC;EACF,CAAC,EAAE;IACD,MAAMC,eAAe,GAAGhB,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMiB,kBAAkB,GAAGf,kBAAkB,CAAC,CAAC;IAC/CC,QAAQ,CAAC,WAAW,EAAEK,KAAK,EAAES,kBAAkB,CAAC;IAChD;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAM;QACJC;MACF,CAAC,GAAGR,KAAK;MACT,MAAMS,eAAe,GAAGH,kBAAkB,CAACI,KAAK;MAChD,OAAOvB,CAAC,CAAC,MAAM,EAAEwB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEtB,UAAU,CAACa,KAAK,EAAE;QACnDU,KAAK,EAAE,CAAE,GAAEJ,eAAgB,WAAU,EAAED,SAAS,KAAKM,SAAS,GAAGnB,oBAAoB,CAACc,eAAe,CAAC,GAAGK,SAAS,EAAEd,KAAK,CAACe,aAAa,KAAK,OAAO,GAAGrB,iBAAiB,CAACe,eAAe,EAAE,SAAS,CAAC,GAAGK,SAAS,CAAC;QAChNjB,KAAK,EAAEW,SAAS,KAAKM,SAAS,GAAG;UAC/BE,YAAY,EAAE;QAChB,CAAC,GAAG;UACF,oBAAoB,EAAER;QACxB;MACF,CAAC,CAAC,EAAE;QACFS,YAAY,EAAEA,CAAA,KAAM;UAClBZ,eAAe,CAACK,KAAK,GAAG,IAAI;QAC9B;MACF,CAAC,CAAC,EAAEF,SAAS,GAAGJ,KAAK,GAAGjB,CAAC,CAAC,MAAM,EAAE,IAAI,EAAEiB,KAAK,CAAC,CAAC;IACjD,CAAC;IACD,OAAO;MACLc,YAAY,EAAEb,eAAe;MAC7BE;IACF,CAAC;EACH,CAAC;EACDY,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACD,YAAY,EAAE;MACrB,OAAO/B,CAAC,CAACM,QAAQ,EAAEH,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC8B,MAAM,EAAE,IAAI,CAACC,MAAM,CAAC,EAAE,IAAI,CAACC,MAAM,CAAC;IAC3E,CAAC,MAAM;MACL,OAAO,IAAI,CAACf,aAAa,CAAC,CAAC;IAC7B;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}