{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"提交\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"label\", null, [_createTextVNode(\" 上下文： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formData.context = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.context]])]), _createElementVNode(\"label\", null, [_createTextVNode(\" 写作目标： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formData.goal = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.goal]])]), _createElementVNode(\"label\", null, [_createTextVNode(\" 行文风格： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formData.style = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.style]])]), _createElementVNode(\"label\", null, [_createTextVNode(\" 情绪语气： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.formData.tone = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.tone]])]), _createElementVNode(\"label\", null, [_createTextVNode(\" 受众画像： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.formData.audience = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.audience]])]), _createElementVNode(\"label\", null, [_createTextVNode(\" 输出要求： \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.formData.output = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formData.output]])]), _createCommentVNode(\" 增加其他表单字段 \"), _hoisted_1], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.handleClick && $options.handleClick(...args))\n  }, \"点击\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_Fragment","onSubmit","_cache","_withModifiers","args","$options","submitForm","_createTextVNode","$event","$data","formData","context","goal","style","tone","audience","output","_createCommentVNode","_hoisted_1","_toDisplayString","message","onClick","handleClick"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HelloWorld.vue"],"sourcesContent":["\n<template>\n   \n    <div>\n        <form @submit.prevent=\"submitForm\">\n          <label>\n            上下文：\n            <input v-model=\"formData.context\" type=\"text\">\n          </label>\n          <label>\n            写作目标：\n            <input v-model=\"formData.goal\" type=\"text\">\n          </label>\n\n          <label>\n            行文风格：\n            <input v-model=\"formData.style\" type=\"text\">\n          </label>\n\n          <label>\n            情绪语气：\n            <input v-model=\"formData.tone\" type=\"text\">\n          </label>\n\n          <label>\n            受众画像：\n            <input v-model=\"formData.audience\" type=\"text\">\n          </label>\n          \n          <label>\n            输出要求：\n            <input v-model=\"formData.output\" type=\"text\">\n          </label>\n          <!-- 增加其他表单字段 -->\n          <button type=\"submit\">提交</button>\n        </form>\n    </div>\n\n  <div>{{ message }}</div>\n  <button @click=\"handleClick\">点击</button>\n\n</template>\n\n<script>\nimport axios from 'axios'; // 引入axios库\n\nexport default {\n  data() {\n    return {\n      message: '', // 定义message变量，用于存储api返回的数据\n      formData:{\n          context:'',\n          goal:'',\n          style:'',\n          tone:'',\n          audience:'',\n          output:''\n          }\n    }\n  },\n  components:{\n      },\n\n  methods: {\n     handleClick() {\n       axios.get('http://localhost:8001/api/response/?format=json')  //你的Django后端API的endpoint\n          .then(response => {\n             //在这里处理你的数据。response.data将包含你的数据。\n             console.log(response.data);\n             this.message = response.data.message;\n          })\n          .catch(error => {\n             //在这里处理错误\n             console.error(error);\n          }); \n        },\n\n    submitForm() {\n      axios.post('http://localhost:8001/api/response/', this.formData)\n          .then(response => {\n            // 处理你后端返回的response\n            console.log(response);\n            this.message = response.data.message;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n   },\n\n  mounted() {\n  }\n}\n</script>\n"],"mappings":";gCAkCUA,mBAAA,CAAiC;EAAzBC,IAAI,EAAC;AAAQ,GAAC,IAAE;;uBAlClCC,mBAAA,CAAAC,SAAA,SAGIH,mBAAA,CAiCM,cAhCFA,mBAAA,CA+BO;IA/BAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJrBC,cAAA,KAAAC,IAAA,KAI+BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BP,mBAAA,CAGQ,gBARlBU,gBAAA,CAKiB,QAEL,G,gBAAAV,mBAAA,CAA8C;IAP1D,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAO4BC,KAAA,CAAAC,QAAQ,CAACC,OAAO,GAAAH,MAAA;IAAEV,IAAI,EAAC;iDAAvBW,KAAA,CAAAC,QAAQ,CAACC,OAAO,E,KAElCd,mBAAA,CAGQ,gBAZlBU,gBAAA,CASiB,SAEL,G,gBAAAV,mBAAA,CAA2C;IAXvD,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAW4BC,KAAA,CAAAC,QAAQ,CAACE,IAAI,GAAAJ,MAAA;IAAEV,IAAI,EAAC;iDAApBW,KAAA,CAAAC,QAAQ,CAACE,IAAI,E,KAG/Bf,mBAAA,CAGQ,gBAjBlBU,gBAAA,CAciB,SAEL,G,gBAAAV,mBAAA,CAA4C;IAhBxD,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAgB4BC,KAAA,CAAAC,QAAQ,CAACG,KAAK,GAAAL,MAAA;IAAEV,IAAI,EAAC;iDAArBW,KAAA,CAAAC,QAAQ,CAACG,KAAK,E,KAGhChB,mBAAA,CAGQ,gBAtBlBU,gBAAA,CAmBiB,SAEL,G,gBAAAV,mBAAA,CAA2C;IArBvD,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAqB4BC,KAAA,CAAAC,QAAQ,CAACI,IAAI,GAAAN,MAAA;IAAEV,IAAI,EAAC;iDAApBW,KAAA,CAAAC,QAAQ,CAACI,IAAI,E,KAG/BjB,mBAAA,CAGQ,gBA3BlBU,gBAAA,CAwBiB,SAEL,G,gBAAAV,mBAAA,CAA+C;IA1B3D,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IA0B4BC,KAAA,CAAAC,QAAQ,CAACK,QAAQ,GAAAP,MAAA;IAAEV,IAAI,EAAC;iDAAxBW,KAAA,CAAAC,QAAQ,CAACK,QAAQ,E,KAGnClB,mBAAA,CAGQ,gBAhClBU,gBAAA,CA6BiB,SAEL,G,gBAAAV,mBAAA,CAA6C;IA/BzD,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IA+B4BC,KAAA,CAAAC,QAAQ,CAACM,MAAM,GAAAR,MAAA;IAAEV,IAAI,EAAC;iDAAtBW,KAAA,CAAAC,QAAQ,CAACM,MAAM,E,KAEjCC,mBAAA,cAAiB,EACjBC,UAAiC,C,8BAIzCrB,mBAAA,CAAwB,aAAAsB,gBAAA,CAAhBV,KAAA,CAAAW,OAAO,kBACfvB,mBAAA,CAAwC;IAA/BwB,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAiB,WAAA,IAAAjB,QAAA,CAAAiB,WAAA,IAAAlB,IAAA,CAAW;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}