{"ast":null,"code":"import { createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, withKeys as _withKeys, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"NForm\"], {\n    ref: \"formRef\",\n    rules: $setup.rules,\n    model: $setup.modelRef\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"NFormItemRow\"], {\n      path: \"userName\",\n      label: \"用户名\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        value: $setup.modelRef.userName,\n        \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.modelRef.userName = $event),\n        minlength: \"5\",\n        maxlength: \"10\",\n        placeholder: \"5~10位字符\"\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\"\\n        <n-form-item-row label=\\\"密码\\\" :feedback=\\\"validateInfos.password>\\n            <n-input v-model:value=\\\"registerPassword\\\" maxlength=\\\"15\\\" placeholder=\\\"最多15位字符\\\"/>\\n        </n-form-item-row>\\n          \\n        <n-form-item-row label=\\\"重复密码\\\">\\n            //<n-input passively-activated @input=\\\"checkRePassword\\\" v-model:value=\\\"rePassword\\\" placeholder=\\\"\\\"/>\\n            <n-input\\n                v-model:value=\\\"rePassword\\\"\\n                :disabled=\\\"!model.password\\\"\\n                type=\\\"password\\\"\\n                @keydown.enter.prevent\\n                placeholder=\\\"\\\"/>\\n        </n-form-item-row>\\n         \"), _createCommentVNode(\"验证模块\"), _createVNode($setup[\"NFormItem\"], {\n      path: \"password\",\n      label: \"密码\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        value: $setup.modelRef.password,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => $setup.modelRef.password = $event),\n        type: \"password\",\n        onInput: $setup.handlePasswordInput,\n        onKeydown: _cache[2] || (_cache[2] = _withKeys(_withModifiers(() => {}, [\"prevent\"]), [\"enter\"])),\n        minlength: \"6\",\n        placeholder: \"至少6个字符\",\n        \"show-password-on\": \"click\"\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"NFormItem\"], {\n      ref: \"rPasswordFormItemRef\",\n      first: \"\",\n      path: \"reenteredPassword\",\n      label: \"重复密码\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        value: $setup.modelRef.reenteredPassword,\n        \"onUpdate:value\": _cache[3] || (_cache[3] = $event => $setup.modelRef.reenteredPassword = $event),\n        disabled: !$setup.modelRef.password,\n        type: \"password\",\n        onKeydown: _cache[4] || (_cache[4] = _withKeys(_withModifiers(() => {}, [\"prevent\"]), [\"enter\"])),\n        placeholder: \"\",\n        clearable: \"\"\n      }, null, 8 /* PROPS */, [\"value\", \"disabled\"])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */), _createVNode($setup[\"NFormItemRow\"], {\n      path: \"invitationCode\",\n      label: \"邀请码\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        value: $setup.modelRef.invitationCode,\n        \"onUpdate:value\": _cache[5] || (_cache[5] = $event => $setup.modelRef.invitationCode = $event),\n        placeholder: \"\"\n      }, null, 8 /* PROPS */, [\"value\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), _createVNode($setup[\"NButton\"], {\n    onClick: $setup.formValidateCheck,\n    disabled: $setup.modelRef.userName === null,\n    type: \"primary\",\n    block: \"\",\n    secondary: \"\",\n    strong: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 注册 \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"disabled\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","$setup","ref","rules","model","modelRef","default","_withCtx","path","label","value","userName","_cache","$event","minlength","maxlength","placeholder","_","_createCommentVNode","password","type","onInput","handlePasswordInput","onKeydown","_withKeys","_withModifiers","first","reenteredPassword","disabled","clearable","invitationCode","onClick","formValidateCheck","block","secondary","strong","_createTextVNode"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/RegisterForm.vue"],"sourcesContent":["<template>\n    <n-form ref=\"formRef\" :rules=\"rules\"  :model=\"modelRef\">\n        <n-form-item-row path=\"userName\" label=\"用户名\">\n            <n-input v-model:value=\"modelRef.userName\" minlength=\"5\" maxlength=\"10\" placeholder=\"5~10位字符\" />\n        </n-form-item-row>\n        \n        <!--\n        <n-form-item-row label=\"密码\" :feedback=\"validateInfos.password>\n            <n-input v-model:value=\"registerPassword\" maxlength=\"15\" placeholder=\"最多15位字符\"/>\n        </n-form-item-row>\n          \n        <n-form-item-row label=\"重复密码\">\n            //<n-input passively-activated @input=\"checkRePassword\" v-model:value=\"rePassword\" placeholder=\"\"/>\n            <n-input\n                v-model:value=\"rePassword\"\n                :disabled=\"!model.password\"\n                type=\"password\"\n                @keydown.enter.prevent\n                placeholder=\"\"/>\n        </n-form-item-row>\n         -->\n         \n         \n         <!--验证模块-->\n\n        <n-form-item path=\"password\" label=\"密码\">\n          <n-input\n            v-model:value=\"modelRef.password\"\n            type=\"password\"\n            @input=\"handlePasswordInput\"\n            @keydown.enter.prevent\n            minlength=\"6\"\n            placeholder=\"至少6个字符\"\n            show-password-on=\"click\"\n            />\n        </n-form-item>\n    \n        <n-form-item\n          ref=\"rPasswordFormItemRef\"\n          first\n          path=\"reenteredPassword\"\n          label=\"重复密码\">\n\n          <n-input\n            v-model:value=\"modelRef.reenteredPassword\"\n            :disabled=\"!modelRef.password\"\n            type=\"password\"\n            @keydown.enter.prevent\n            placeholder=\"\"\n            clearable/>\n        </n-form-item>\n\n\n        <n-form-item-row path=\"invitationCode\" label=\"邀请码\">\n            <n-input v-model:value=\"modelRef.invitationCode\" placeholder=\"\"/>\n        </n-form-item-row>\n        \n    </n-form>\n    <n-button @click=\"formValidateCheck\" \n      :disabled=\"modelRef.userName === null\"\n      type=\"primary\" block secondary strong>\n          注册\n    </n-button>\n\n</template>\n<script setup>\nimport {useNotification,NFormItem,NFormItemRow,NForm,NButton,NInput} from 'naive-ui';\nimport {ref,defineExpose} from 'vue';\nimport {useRouter} from 'vue-router';\nimport axios from 'axios';\n\n//注册表单操作\n\n\n\nconst router=useRouter();\nconst registeredNextPath = ref('/dashboard');\n\n//注册方法\nconst notification =useNotification()\nconst register=async()=>{\n    if(formValidated.value===true){\n    try{\n      const response = await axios.post('/account/register/',\n      {\n        username:modelRef.value.userName,\n        password:modelRef.value.password,\n        invitation_code:modelRef.value.invitationCode,\n        },\n      {\n            headers:{\n                //'X-CSRFToken': csrfToken.value,\n                }\n      });\n      console.log(response);\n      await router.push(registeredNextPath.value);\n    }\n    catch(err){\n        if(err.status==400 && err.data.invitation_code){\n          notification.error({\n              content:err.data.invitation_code,\n              duration:2500,\n              })};\n\n        console.log('注册失败:',err)}\n    \n }}\n\n//密码验证\n\nconst formRef = ref(null);\nconst rPasswordFormItemRef = ref(null);\n\n// 响应式表单数据\nconst modelRef = ref({\n  userName:null,\n  password: null,\n  reenteredPassword: null,\n  invitationCode:null,\n});\n\n//表单验证,通过后进行注册\nconst formValidated=ref(false);\nconst formValidateCheck = async(e)=>{\n    e.preventDefault();\n    formRef.value?.validate((errors)=>{\n        if(!errors){\n            console.log('验证成功');\n            formValidated.value=true;\n            register();\n            }else{\n                console.log('验证失败');\n                }\n            });\n    };\n\n//表单验证规则\nconst rules = {\n  userName:[\n    {\n        required:true,\n        validator(rule,value){\n            if(!value){\n                return new Error(\"请填写用户名\");\n                }else if (value.length<5 || value.length>10){\n                    return new Error('字数须在5~10之间')}\n                    return true;\n            },\n            triggr:[\"input\",\"blur\"]\n        }\n  ],\n  password: [\n    {\n      required: true,\n      validator(rule,value){\n          if(value.length<6){\n              return new Error(\"须至少6位\")}\n          },\n      message: \"请输入密码\",\n    },\n  ],\n  reenteredPassword: [\n    {\n      required: true,\n      message: \"请再次输入密码\",\n      trigger: [\"password-input\", \"blur\"]\n    },\n    \n    {\n      validator: validatePasswordSame,\n      message: \"两次密码输入不一致\",\n      trigger: [\"blur\", \"password-input\"]\n    }\n  ],\n  invitationCode:[\n    {\n        required:true,\n        message:\"请输入邀请码\",\n        }\n  ]\n};\n\n\nfunction validatePasswordSame(rule, value) {\n  try{\n  return value === modelRef.value.password;\n  }catch(error){\n      console.error(error)} \n  \n  }\n\nconst handlePasswordInput=()=> {\n  if(modelRef.value.reenteredPassword){\n    console.log(modelRef.value.reenteredPassword);\n    rPasswordFormItemRef.value?.validate({ trigger: \"password-input\" });\n}}\n\n\ndefineExpose({register});\n</script>\n\n<style>\n.n-input{\n    text-align:left}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}