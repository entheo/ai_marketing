{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_n_h5 = _resolveComponent(\"n-h5\");\n  const _component_n_checkbox = _resolveComponent(\"n-checkbox\");\n  const _component_n_form_item = _resolveComponent(\"n-form-item\");\n  const _component_n_input = _resolveComponent(\"n-input\");\n  const _component_n_dynamic_tags = _resolveComponent(\"n-dynamic-tags\");\n  const _component_n_button = _resolveComponent(\"n-button\");\n  const _component_n_form = _resolveComponent(\"n-form\");\n  return _openBlock(), _createBlock(_component_n_form, {\n    onSubmit: _withModifiers(_ctx.createSenario, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_n_form_item, {\n      label: \"gender\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_n_h5, null, {\n        default: _withCtx(() => [_createTextVNode(\"主要营销场景在哪里？\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_n_checkbox, {\n        checked: _ctx.senarioInfo.online,\n        \"onUpdate:checked\": _cache[0] || (_cache[0] = $event => _ctx.senarioInfo.online = $event)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 线上 \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"checked\"]), _createVNode(_component_n_checkbox, {\n        checked: _ctx.senarioInfo.online,\n        \"onUpdate:checked\": _cache[1] || (_cache[1] = $event => _ctx.senarioInfo.online = $event),\n        disabled: _ctx.disabled\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 线下 \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"checked\", \"disabled\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_n_form_item, {\n      value: _ctx.senarioInfo.desc,\n      \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.senarioInfo.desc = $event),\n      label: \"desc\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_n_input, {\n        type: \"textarea\",\n        placeholder: \"如：小红书、微信朋友圈、抖音或者线下店面等等\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"value\"]), _createVNode(_component_n_form_item, {\n      label: \"emotions\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"> \"), _createVNode(_component_n_h5, null, {\n        default: _withCtx(() => [_createTextVNode(\"期待传递的情绪\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_n_dynamic_tags, {\n        value: _ctx.senarioInfo.emotionTags,\n        \"onUpdate:value\": _cache[3] || (_cache[3] = $event => _ctx.senarioInfo.emotionTags = $event),\n        \"render-tag\": _ctx.renderEmotionTags\n      }, null, 8 /* PROPS */, [\"value\", \"render-tag\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_n_button, {\n      type: \"primary\",\n      onClick: _ctx.ceatePersona\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"提交\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onSubmit\"]);\n}","map":{"version":3,"names":["_createBlock","_component_n_form","onSubmit","_withModifiers","_ctx","createSenario","default","_withCtx","_createVNode","_component_n_form_item","label","_component_n_h5","_createTextVNode","_","_component_n_checkbox","checked","senarioInfo","online","_cache","$event","disabled","value","desc","_component_n_input","type","placeholder","_component_n_dynamic_tags","emotionTags","renderEmotionTags","_component_n_button","onClick","ceatePersona"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/CreateSenarioForm.vue"],"sourcesContent":["<template>\n<n-form @submit.prevent=\"createSenario\">\n\n    <n-form-item label=\"gender\">\n        <n-h5>主要营销场景在哪里？</n-h5>\n        <n-checkbox v-model:checked=\"senarioInfo.online\">\n           线上\n        </n-checkbox>\n        <n-checkbox v-model:checked=\"senarioInfo.online\" :disabled=\"disabled\">\n           线下\n        </n-checkbox>\n    </n-form-item>\n\n         <n-form-item v-model:value='senarioInfo.desc' label=\"desc\">\n         <n-input type=\"textarea\" placeholder=\"如：小红书、微信朋友圈、抖音或者线下店面等等\"/>\n         </n-form-item>\n         \n         <n-form-item  label=\"emotions\">>\n         <n-h5>期待传递的情绪</n-h5>\n         <n-dynamic-tags v-model:value=\"senarioInfo.emotionTags\" :render-tag=\"renderEmotionTags\" />\n         </n-form-item>\n         \n        <n-button type=\"primary\" @click=\"ceatePersona\">提交</n-button>\n    </n-form>\n</template>\n\n<script setup>\nimport {ref} from 'vue';\nimport {  NButton, NForm, NInput, NH5,  NTag} from 'naive-ui';\n\nconst senarioInfo = ref({\n    online:'',\n    desc:'',\n    emotionTags:'',\n\n    })\nconst emotionTagsRef = ref([\"喜悦\", \"幽默\"]);\nconst tags =  emotionTagsRef;\nconst renderEmotionTags = (tag, index) => {\n      return h{\n          NTag,\n          {\n            type: index < 3 ? \"success\" : \"error\",\n            disabled: index > 3,\n            closable: true,\n            onClose: () => {\n              emotionTagsRef.value.splice(index, 1);\n            }\n          },\n           ()=> tag\n        }\n}\n\n\nconst personaInfo = ref({\n    gender: '',\n    values: '',\n    needs : '',\n    others : '',\n    })\nconst createPersona = () =>{\n      console.log(personaInfo.value);\n      try{\n          /*\n          const resp =  await axios.get('http://localhost:8005/account/auth/',{\n            headers: {\n                'Authorization': `Bearer ${token}` // 设置请求头\n                }});\n         */ }catch (error) {\n        console.error('Failed to fetch user info:', error);\n        }\n      }\n\n</script>\n<script>\n  export default{\n      name:'CreateSenarioForm'\n      };\n</script>\n"],"mappings":";;;;;;;;;uBACAA,YAAA,CAsBaC,iBAAA;IAtBJC,QAAM,EADfC,cAAA,CACyBC,IAAA,CAAAC,aAAa;;IADtCC,OAAA,EAAAC,QAAA,CAGI,MAQc,CARdC,YAAA,CAQcC,sBAAA;MARDC,KAAK,EAAC;IAAQ;MAH/BJ,OAAA,EAAAC,QAAA,CAIQ,MAAuB,CAAvBC,YAAA,CAAuBG,eAAA;QAJ/BL,OAAA,EAAAC,QAAA,CAIc,MAAU,CAJxBK,gBAAA,CAIc,YAAU,E;QAJxBC,CAAA;UAKQL,YAAA,CAEaM,qBAAA;QAFOC,OAAO,EAAEX,IAAA,CAAAY,WAAW,CAACC,MAAM;QALvD,oBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKqCf,IAAA,CAAAY,WAAW,CAACC,MAAM,GAAAE,MAAA;;QALvDb,OAAA,EAAAC,QAAA,CAKyD,MAEjD,CAPRK,gBAAA,CAKyD,MAEjD,E;QAPRC,CAAA;sCAQQL,YAAA,CAEaM,qBAAA;QAFOC,OAAO,EAAEX,IAAA,CAAAY,WAAW,CAACC,MAAM;QARvD,oBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQqCf,IAAA,CAAAY,WAAW,CAACC,MAAM,GAAAE,MAAA;QAAGC,QAAQ,EAAEhB,IAAA,CAAAgB;;QARpEd,OAAA,EAAAC,QAAA,CAQ8E,MAEtE,CAVRK,gBAAA,CAQ8E,MAEtE,E;QAVRC,CAAA;;MAAAA,CAAA;QAaSL,YAAA,CAEcC,sBAAA;MAFOY,KAAK,EAAEjB,IAAA,CAAAY,WAAW,CAACM,IAAI;MAbrD,kBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaqCf,IAAA,CAAAY,WAAW,CAACM,IAAI,GAAAH,MAAA;MAAET,KAAK,EAAC;;MAb7DJ,OAAA,EAAAC,QAAA,CAcS,MAA+D,CAA/DC,YAAA,CAA+De,kBAAA;QAAtDC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC;;MAd9CZ,CAAA;kCAiBSL,YAAA,CAGcC,sBAAA;MAHAC,KAAK,EAAC;IAAU;MAjBvCJ,OAAA,EAAAC,QAAA,CAiBwC,MAC/B,CAlBTK,gBAAA,CAiBwC,IAC/B,GAAAJ,YAAA,CAAoBG,eAAA;QAlB7BL,OAAA,EAAAC,QAAA,CAkBe,MAAO,CAlBtBK,gBAAA,CAkBe,SAAO,E;QAlBtBC,CAAA;UAmBSL,YAAA,CAA0FkB,yBAAA;QAAlEL,KAAK,EAAEjB,IAAA,CAAAY,WAAW,CAACW,WAAW;QAnB/D,kBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBwCf,IAAA,CAAAY,WAAW,CAACW,WAAW,GAAAR,MAAA;QAAG,YAAU,EAAEf,IAAA,CAAAwB;;MAnB9Ef,CAAA;QAsBQL,YAAA,CAA4DqB,mBAAA;MAAlDL,IAAI,EAAC,SAAS;MAAEM,OAAK,EAAE1B,IAAA,CAAA2B;;MAtBzCzB,OAAA,EAAAC,QAAA,CAsBuD,MAAE,CAtBzDK,gBAAA,CAsBuD,IAAE,E;MAtBzDC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}