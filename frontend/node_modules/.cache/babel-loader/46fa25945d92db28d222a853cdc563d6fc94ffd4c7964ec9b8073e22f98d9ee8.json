{"ast":null,"code":"import { h, defineComponent, ref, inject } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NEmpty } from \"../../empty/index.mjs\";\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { transferInjectionKey } from \"./interface.mjs\";\nimport NTransferListItem from \"./TransferListItem.mjs\";\nexport default defineComponent({\n  name: 'TransferList',\n  props: {\n    virtualScroll: {\n      type: Boolean,\n      required: true\n    },\n    itemSize: {\n      type: Number,\n      required: true\n    },\n    options: {\n      type: Array,\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      required: true\n    },\n    source: Boolean\n  },\n  setup() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef\n    } = inject(transferInjectionKey);\n    const scrollerInstRef = ref(null);\n    const vlInstRef = ref(null);\n    function syncVLScroller() {\n      var _a;\n      (_a = scrollerInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function scrollContainer() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        listElRef\n      } = value;\n      return listElRef;\n    }\n    function scrollContent() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        itemsElRef\n      } = value;\n      return itemsElRef;\n    }\n    return {\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      scrollerInstRef,\n      vlInstRef,\n      syncVLScroller,\n      scrollContainer,\n      scrollContent\n    };\n  },\n  render() {\n    const {\n      mergedTheme,\n      options\n    } = this;\n    if (options.length === 0) {\n      return h(NEmpty, {\n        theme: mergedTheme.peers.Empty,\n        themeOverrides: mergedTheme.peerOverrides.Empty\n      });\n    }\n    const {\n      mergedClsPrefix,\n      virtualScroll,\n      source,\n      disabled,\n      syncVLScroller\n    } = this;\n    return h(NScrollbar, {\n      ref: \"scrollerInstRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      container: virtualScroll ? this.scrollContainer : undefined,\n      content: virtualScroll ? this.scrollContent : undefined\n    }, {\n      default: () => virtualScroll ? h(VirtualList, {\n        ref: \"vlInstRef\",\n        style: {\n          height: '100%'\n        },\n        class: `${mergedClsPrefix}-transfer-list-content`,\n        items: this.options,\n        itemSize: this.itemSize,\n        showScrollbar: false,\n        onResize: syncVLScroller,\n        onScroll: syncVLScroller,\n        keyField: \"value\"\n      }, {\n        default: ({\n          item\n        }) => {\n          const {\n            source,\n            disabled\n          } = this;\n          return h(NTransferListItem, {\n            source: source,\n            key: item.value,\n            value: item.value,\n            disabled: item.disabled || disabled,\n            label: item.label,\n            option: item\n          });\n        }\n      }) : h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-content`\n      }, options.map(option => h(NTransferListItem, {\n        source: source,\n        key: option.value,\n        value: option.value,\n        disabled: option.disabled || disabled,\n        label: option.label,\n        option: option\n      })))\n    });\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","inject","VirtualList","NEmpty","NScrollbar","transferInjectionKey","NTransferListItem","name","props","virtualScroll","type","Boolean","required","itemSize","Number","options","Array","disabled","source","setup","mergedThemeRef","mergedClsPrefixRef","scrollerInstRef","vlInstRef","syncVLScroller","_a","value","sync","scrollContainer","listElRef","scrollContent","itemsElRef","mergedTheme","mergedClsPrefix","render","length","theme","peers","Empty","themeOverrides","peerOverrides","Scrollbar","container","undefined","content","default","style","height","class","items","showScrollbar","onResize","onScroll","keyField","item","key","label","option","map"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/transfer/src/TransferList.mjs"],"sourcesContent":["import { h, defineComponent, ref, inject } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NEmpty } from \"../../empty/index.mjs\";\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { transferInjectionKey } from \"./interface.mjs\";\nimport NTransferListItem from \"./TransferListItem.mjs\";\nexport default defineComponent({\n  name: 'TransferList',\n  props: {\n    virtualScroll: {\n      type: Boolean,\n      required: true\n    },\n    itemSize: {\n      type: Number,\n      required: true\n    },\n    options: {\n      type: Array,\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      required: true\n    },\n    source: Boolean\n  },\n  setup() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef\n    } = inject(transferInjectionKey);\n    const scrollerInstRef = ref(null);\n    const vlInstRef = ref(null);\n    function syncVLScroller() {\n      var _a;\n      (_a = scrollerInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function scrollContainer() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        listElRef\n      } = value;\n      return listElRef;\n    }\n    function scrollContent() {\n      const {\n        value\n      } = vlInstRef;\n      if (!value) return null;\n      const {\n        itemsElRef\n      } = value;\n      return itemsElRef;\n    }\n    return {\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      scrollerInstRef,\n      vlInstRef,\n      syncVLScroller,\n      scrollContainer,\n      scrollContent\n    };\n  },\n  render() {\n    const {\n      mergedTheme,\n      options\n    } = this;\n    if (options.length === 0) {\n      return h(NEmpty, {\n        theme: mergedTheme.peers.Empty,\n        themeOverrides: mergedTheme.peerOverrides.Empty\n      });\n    }\n    const {\n      mergedClsPrefix,\n      virtualScroll,\n      source,\n      disabled,\n      syncVLScroller\n    } = this;\n    return h(NScrollbar, {\n      ref: \"scrollerInstRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      container: virtualScroll ? this.scrollContainer : undefined,\n      content: virtualScroll ? this.scrollContent : undefined\n    }, {\n      default: () => virtualScroll ? h(VirtualList, {\n        ref: \"vlInstRef\",\n        style: {\n          height: '100%'\n        },\n        class: `${mergedClsPrefix}-transfer-list-content`,\n        items: this.options,\n        itemSize: this.itemSize,\n        showScrollbar: false,\n        onResize: syncVLScroller,\n        onScroll: syncVLScroller,\n        keyField: \"value\"\n      }, {\n        default: ({\n          item\n        }) => {\n          const {\n            source,\n            disabled\n          } = this;\n          return h(NTransferListItem, {\n            source: source,\n            key: item.value,\n            value: item.value,\n            disabled: item.disabled || disabled,\n            label: item.label,\n            option: item\n          });\n        }\n      }) : h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-content`\n      }, options.map(option => h(NTransferListItem, {\n        source: source,\n        key: option.value,\n        value: option.value,\n        disabled: option.disabled || disabled,\n        label: option.label,\n        option: option\n      })))\n    });\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}