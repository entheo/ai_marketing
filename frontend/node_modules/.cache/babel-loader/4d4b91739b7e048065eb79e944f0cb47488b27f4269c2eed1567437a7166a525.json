{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"欢迎来到我们的网站\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"请登录以继续操作。\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"注册\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"注册\", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_login_form = _resolveComponent(\"login-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createCommentVNode(\" 登录表单 \"), _createVNode(_component_login_form), _createCommentVNode(\"\\n    <form @submit.prevent=\\\"handleLoginSubmit\\\">\\n      <input type=\\\"text\\\" v-model=\\\"loginUsername\\\" placeholder=\\\"用户名\\\" />\\n      <input type=\\\"password\\\" v-model=\\\"loginPassword\\\" placeholder=\\\"密码\\\" />\\n      <select v-model=\\\"keepLoggedInForDays\\\"> \\n        <option value=\\\"7\\\">保持登录7天</option>\\n      </select>\\n      <button type=\\\"submit\\\">登录</button>\\n    </form>\\n    \"), _createCommentVNode(\" 注册表单 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.handleRegisterSubmit && _ctx.handleRegisterSubmit(...args), [\"prevent\"])),\n    class: \"register-form\"\n  }, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.registerUsername = $event),\n    placeholder: \"用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.registerUsername]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.registerPassword = $event),\n    placeholder: \"密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.registerPassword]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.invitation = $event),\n    placeholder: \"邀请码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.invitation]]), _hoisted_4], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_createVNode","_component_login_form","onSubmit","_cache","_withModifiers","args","_ctx","handleRegisterSubmit","class","_hoisted_3","$event","registerUsername","placeholder","registerPassword","invitation","_hoisted_4"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <div>\n    <h1>欢迎来到我们的网站</h1>\n    <p>请登录以继续操作。</p>\n\n    <!-- 登录表单 -->\n    <login-form/>\n    \n    <!--\n    <form @submit.prevent=\"handleLoginSubmit\">\n      <input type=\"text\" v-model=\"loginUsername\" placeholder=\"用户名\" />\n      <input type=\"password\" v-model=\"loginPassword\" placeholder=\"密码\" />\n      <select v-model=\"keepLoggedInForDays\"> \n        <option value=\"7\">保持登录7天</option>\n      </select>\n      <button type=\"submit\">登录</button>\n    </form>\n    -->\n\n    <!-- 注册表单 -->\n    <form @submit.prevent=\"handleRegisterSubmit\" class=\"register-form\">\n        <h2>注册</h2>\n        <input type=\"text\" v-model=\"registerUsername\" placeholder=\"用户名\" />\n        <input type=\"password\" v-model=\"registerPassword\" placeholder=\"密码\" />\n        <input type=\"text\" v-model=\"invitation\" placeholder=\"邀请码\" />\n        <button type=\"submit\">注册</button>\n      </form>\n  \n  </div>\n</template>\n\n<script setup>\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport LoginForm from './LoginForm.vue';\n\n// 用于获取csrftoken的函数\nfunction getCsrfToken() {\n  return document.cookie.split('; ')\n    .find(row => row.startsWith('csrftoken'))\n    ?.split('=')[1];\n}\n\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    const authStore = useStore();\n    console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态\n    // 在组件加载时获取CSRF token\n    const csrfToken = ref(getCsrfToken());\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n    const handleLoginSubmit = async () => {\n      try{\n          const response = await axios.post('/account/login/', {\n            username: loginUsername.value,\n            password: loginPassword.value,\n            keep_logged_in_for_days: keepLoggedInForDays.value\n          },\n         {\n            withCredentials: true,\n            headers: {\n            'X-CSRFToken': csrfToken.value,\n          }\n        });\n\n         console.log(\"登录成功，用户名: \", loginUsername.value);\n         const token = response.data.token.access;\n         const user = response.data.username;\n         const csrf_token = response.data.csrf_token;\n         console.log('csrf_token:');\n         console.log(csrf_token);\n         localStorage.setItem('token', token);\n         await authStore.commit('auth_success', { token, user });\n         await router.push('/dashboard');\n          }\n      catch (err) {\n          console.log(err);\n          }\n        };\n       \n\n    const handleRegisterSubmit = async () => {\n      try{\n          const response = await axios.post('/account/register/', {\n            username: registerUsername.value,\n            password: registerPassword.value,\n            invitation_code: invitation.value\n          },\n          {\n          headers: {\n            'X-CSRFToken': csrfToken.value,\n            }\n          });\n          console.log(response);\n          console.log(\"注册成功，用户名: \", registerUsername.value);\n          await router.push('/login');\n          }\n     catch (err) {\n            console.log(err);\n           }\n       };\n\n    return {\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n      csrfToken, // 添加csrfToken到返回值中\n    };\n  },\n};\n</script>\n\n\n"],"mappings":";gCAGIA,mBAAA,CAAkB,YAAd,WAAS;gCACbA,mBAAA,CAAgB,WAAb,WAAS;gCAkBRA,mBAAA,CAAW,YAAP,IAAE;gCAINA,mBAAA,CAAiC;EAAzBC,IAAI,EAAC;AAAQ,GAAC,IAAE;;;uBAxB9BC,mBAAA,CA2BM,cA1BJC,UAAkB,EAClBC,UAAgB,EAEhBC,mBAAA,UAAa,EACbC,YAAA,CAAaC,qBAAA,GAEbF,mBAAA,gYASG,EAEHA,mBAAA,UAAa,EACbL,mBAAA,CAMS;IANFQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MArBjBC,cAAA,KAAAC,IAAA,KAqB2BC,IAAA,CAAAC,oBAAA,IAAAD,IAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;IAAEG,KAAK,EAAC;MAC/CC,UAAW,E,gBACXf,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,MAAM;IAvB1B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAuBoCJ,IAAA,CAAAK,gBAAgB,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAA9BN,IAAA,CAAAK,gBAAgB,E,mBAC5CjB,mBAAA,CAAqE;IAA9DC,IAAI,EAAC,UAAU;IAxB9B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAwBwCJ,IAAA,CAAAO,gBAAgB,GAAAH,MAAA;IAAEE,WAAW,EAAC;iDAA9BN,IAAA,CAAAO,gBAAgB,E,mBAChDnB,mBAAA,CAA4D;IAArDC,IAAI,EAAC,MAAM;IAzB1B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAyBoCJ,IAAA,CAAAQ,UAAU,GAAAJ,MAAA;IAAEE,WAAW,EAAC;iDAAxBN,IAAA,CAAAQ,UAAU,E,GACtCC,UAAiC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}