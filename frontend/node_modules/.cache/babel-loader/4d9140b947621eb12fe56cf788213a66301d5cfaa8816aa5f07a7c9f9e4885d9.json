{"ast":null,"code":"import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  render: Function,\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'Countdown',\n  props: countdownProps,\n  setup(props) {\n    let timerId = null;\n    let elapsed = 0;\n    let finished = false;\n    // in ms\n    const distanceRef = ref(0);\n    watchEffect(() => {\n      distanceRef.value = props.duration;\n    });\n    let pnow = -1;\n    function getDistance(time) {\n      return props.duration - elapsed + pnow - time;\n    }\n    function getTimeInfo(distance) {\n      const hours = Math.floor(distance / 3600000);\n      const minutes = Math.floor(distance % 3600000 / 60000);\n      const seconds = Math.floor(distance % 60000 / 1000);\n      const milliseconds = Math.floor(distance % 1000);\n      return {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      };\n    }\n    function getDisplayValue(info) {\n      const {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      } = info;\n      const {\n        precision\n      } = props;\n      switch (precision) {\n        case 0:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n        default:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n      }\n    }\n    const frame = () => {\n      var _a;\n      const {\n        precision\n      } = props;\n      const distance = getDistance(performance.now());\n      if (distance <= 0) {\n        distanceRef.value = 0;\n        stopTimer();\n        if (!finished) {\n          finished = true;\n          (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return;\n      }\n      let leftTime;\n      switch (precision) {\n        case 3:\n        case 2:\n          leftTime = distance % 34; // about 30 fps\n          break;\n        case 1:\n          leftTime = distance % 100;\n          break;\n        default:\n          leftTime = distance % 1000;\n      }\n      distanceRef.value = distance;\n      timerId = window.setTimeout(() => {\n        frame();\n      }, leftTime);\n    };\n    const stopTimer = () => {\n      if (timerId !== null) {\n        window.clearTimeout(timerId);\n        timerId = null;\n      }\n    };\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) {\n          pnow = performance.now();\n          frame();\n        } else {\n          const now = performance.now();\n          if (pnow !== -1) {\n            elapsed += now - pnow;\n          }\n          stopTimer();\n        }\n      });\n    });\n    onBeforeUnmount(() => {\n      stopTimer();\n    });\n    function reset() {\n      distanceRef.value = props.duration;\n      elapsed = 0;\n      pnow = performance.now();\n      if (props.active && finished) {\n        frame();\n      }\n      finished = false;\n    }\n    const countdownExposedMethod = {\n      reset\n    };\n    return Object.assign(countdownExposedMethod, {\n      distance: distanceRef,\n      getTimeInfo,\n      getDisplayValue\n    });\n  },\n  render() {\n    const {\n      render,\n      precision,\n      distance,\n      getTimeInfo,\n      getDisplayValue\n    } = this;\n    let timeInfo;\n    switch (precision) {\n      case 0:\n        timeInfo = getTimeInfo(distance + 999);\n        timeInfo.milliseconds = 0;\n        break;\n      case 1:\n        timeInfo = getTimeInfo(distance + 99);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n        break;\n      case 2:\n        timeInfo = getTimeInfo(distance + 9);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n        break;\n      case 3:\n        timeInfo = getTimeInfo(distance);\n    }\n    if (render) {\n      return render(timeInfo);\n    } else {\n      return getDisplayValue(timeInfo);\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","onMounted","onBeforeUnmount","watchEffect","ref","countdownProps","duration","type","Number","default","active","Boolean","precision","render","Function","onFinish","name","props","setup","timerId","elapsed","finished","distanceRef","value","pnow","getDistance","time","getTimeInfo","distance","hours","Math","floor","minutes","seconds","milliseconds","getDisplayValue","info","String","padStart","frame","_a","performance","now","stopTimer","call","leftTime","window","setTimeout","clearTimeout","reset","countdownExposedMethod","Object","assign","timeInfo"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/countdown/src/Countdown.mjs"],"sourcesContent":["import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  render: Function,\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'Countdown',\n  props: countdownProps,\n  setup(props) {\n    let timerId = null;\n    let elapsed = 0;\n    let finished = false;\n    // in ms\n    const distanceRef = ref(0);\n    watchEffect(() => {\n      distanceRef.value = props.duration;\n    });\n    let pnow = -1;\n    function getDistance(time) {\n      return props.duration - elapsed + pnow - time;\n    }\n    function getTimeInfo(distance) {\n      const hours = Math.floor(distance / 3600000);\n      const minutes = Math.floor(distance % 3600000 / 60000);\n      const seconds = Math.floor(distance % 60000 / 1000);\n      const milliseconds = Math.floor(distance % 1000);\n      return {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      };\n    }\n    function getDisplayValue(info) {\n      const {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      } = info;\n      const {\n        precision\n      } = props;\n      switch (precision) {\n        case 0:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n        default:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n      }\n    }\n    const frame = () => {\n      var _a;\n      const {\n        precision\n      } = props;\n      const distance = getDistance(performance.now());\n      if (distance <= 0) {\n        distanceRef.value = 0;\n        stopTimer();\n        if (!finished) {\n          finished = true;\n          (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return;\n      }\n      let leftTime;\n      switch (precision) {\n        case 3:\n        case 2:\n          leftTime = distance % 34; // about 30 fps\n          break;\n        case 1:\n          leftTime = distance % 100;\n          break;\n        default:\n          leftTime = distance % 1000;\n      }\n      distanceRef.value = distance;\n      timerId = window.setTimeout(() => {\n        frame();\n      }, leftTime);\n    };\n    const stopTimer = () => {\n      if (timerId !== null) {\n        window.clearTimeout(timerId);\n        timerId = null;\n      }\n    };\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) {\n          pnow = performance.now();\n          frame();\n        } else {\n          const now = performance.now();\n          if (pnow !== -1) {\n            elapsed += now - pnow;\n          }\n          stopTimer();\n        }\n      });\n    });\n    onBeforeUnmount(() => {\n      stopTimer();\n    });\n    function reset() {\n      distanceRef.value = props.duration;\n      elapsed = 0;\n      pnow = performance.now();\n      if (props.active && finished) {\n        frame();\n      }\n      finished = false;\n    }\n    const countdownExposedMethod = {\n      reset\n    };\n    return Object.assign(countdownExposedMethod, {\n      distance: distanceRef,\n      getTimeInfo,\n      getDisplayValue\n    });\n  },\n  render() {\n    const {\n      render,\n      precision,\n      distance,\n      getTimeInfo,\n      getDisplayValue\n    } = this;\n    let timeInfo;\n    switch (precision) {\n      case 0:\n        timeInfo = getTimeInfo(distance + 999);\n        timeInfo.milliseconds = 0;\n        break;\n      case 1:\n        timeInfo = getTimeInfo(distance + 99);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n        break;\n      case 2:\n        timeInfo = getTimeInfo(distance + 9);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n        break;\n      case 3:\n        timeInfo = getTimeInfo(distance);\n    }\n    if (render) {\n      return render(timeInfo);\n    } else {\n      return getDisplayValue(timeInfo);\n    }\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}