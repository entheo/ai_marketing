{"ast":null,"code":"import { inject, provide } from 'vue';\nimport { createInjectionKey, throwError } from \"../../_utils/index.mjs\";\nconst carouselMethodsInjectionKey = createInjectionKey('n-carousel-methods');\nexport const provideCarouselContext = contextValue => {\n  provide(carouselMethodsInjectionKey, contextValue);\n};\nexport const useCarouselContext = (location = 'unknown', component = 'component') => {\n  const CarouselContext = inject(carouselMethodsInjectionKey);\n  if (!CarouselContext) {\n    throwError(location, `\\`${component}\\` must be placed inside \\`n-carousel\\`.`);\n  }\n  return CarouselContext;\n};","map":{"version":3,"names":["inject","provide","createInjectionKey","throwError","carouselMethodsInjectionKey","provideCarouselContext","contextValue","useCarouselContext","location","component","CarouselContext"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/carousel/src/CarouselContext.mjs"],"sourcesContent":["import { inject, provide } from 'vue';\nimport { createInjectionKey, throwError } from \"../../_utils/index.mjs\";\nconst carouselMethodsInjectionKey = createInjectionKey('n-carousel-methods');\nexport const provideCarouselContext = contextValue => {\n  provide(carouselMethodsInjectionKey, contextValue);\n};\nexport const useCarouselContext = (location = 'unknown', component = 'component') => {\n  const CarouselContext = inject(carouselMethodsInjectionKey);\n  if (!CarouselContext) {\n    throwError(location, `\\`${component}\\` must be placed inside \\`n-carousel\\`.`);\n  }\n  return CarouselContext;\n};"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,KAAK;AACrC,SAASC,kBAAkB,EAAEC,UAAU,QAAQ,wBAAwB;AACvE,MAAMC,2BAA2B,GAAGF,kBAAkB,CAAC,oBAAoB,CAAC;AAC5E,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,IAAI;EACpDL,OAAO,CAACG,2BAA2B,EAAEE,YAAY,CAAC;AACpD,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,QAAQ,GAAG,SAAS,EAAEC,SAAS,GAAG,WAAW,KAAK;EACnF,MAAMC,eAAe,GAAGV,MAAM,CAACI,2BAA2B,CAAC;EAC3D,IAAI,CAACM,eAAe,EAAE;IACpBP,UAAU,CAACK,QAAQ,EAAG,KAAIC,SAAU,0CAAyC,CAAC;EAChF;EACA,OAAOC,eAAe;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}