{"ast":null,"code":"import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from \"../interface.mjs\";\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n  active: Boolean,\n  dateFormat: String,\n  timerPickerFormat: {\n    type: String,\n    value: TIME_FORMAT\n  },\n  value: {\n    type: [Array, Number],\n    default: null\n  },\n  shortcuts: Object,\n  defaultTime: [Number, String, Array],\n  onClear: Function,\n  onConfirm: Function,\n  onClose: Function,\n  onTabOut: Function,\n  onUpdateValue: {\n    type: Function,\n    required: true\n  },\n  themeClass: String,\n  onRender: Function,\n  panel: Boolean,\n  onNextMonth: Function,\n  onPrevMonth: Function,\n  onNextYear: Function,\n  onPrevYear: Function\n};\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction usePanelCommon(props) {\n  const {\n    dateLocaleRef,\n    timePickerSizeRef,\n    timePickerPropsRef,\n    localeRef,\n    mergedClsPrefixRef,\n    mergedThemeRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const dateFnsOptionsRef = computed(() => {\n    return {\n      locale: dateLocaleRef.value.locale\n    };\n  });\n  const selfRef = ref(null);\n  const keyboardState = useKeyboard();\n  function doClear() {\n    const {\n      onClear\n    } = props;\n    if (onClear) onClear();\n  }\n  function doConfirm() {\n    const {\n      onConfirm,\n      value\n    } = props;\n    if (onConfirm) onConfirm(value);\n  }\n  function doUpdateValue(value, doUpdate) {\n    const {\n      onUpdateValue\n    } = props;\n    onUpdateValue(value, doUpdate);\n  }\n  function doClose(disableUpdateOnClose = false) {\n    const {\n      onClose\n    } = props;\n    if (onClose) onClose(disableUpdateOnClose);\n  }\n  function doTabOut() {\n    const {\n      onTabOut\n    } = props;\n    if (onTabOut) onTabOut();\n  }\n  function handleClearClick() {\n    doUpdateValue(null, true);\n    doClose(true);\n    doClear();\n  }\n  function handleFocusDetectorFocus() {\n    doTabOut();\n  }\n  function disableTransitionOneTick() {\n    if (props.active || props.panel) {\n      void nextTick(() => {\n        const {\n          value: selfEl\n        } = selfRef;\n        if (!selfEl) return;\n        const dateEls = selfEl.querySelectorAll('[data-n-date]');\n        dateEls.forEach(el => {\n          el.classList.add('transition-disabled');\n        });\n        void selfEl.offsetWidth;\n        dateEls.forEach(el => {\n          el.classList.remove('transition-disabled');\n        });\n      });\n    }\n  }\n  function handlePanelKeyDown(e) {\n    if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n      e.preventDefault();\n      doTabOut();\n    }\n  }\n  function handlePanelFocus(e) {\n    const {\n      value: el\n    } = selfRef;\n    if (keyboardState.tab && e.target === el && (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n      doTabOut();\n    }\n  }\n  let cachedValue = null;\n  let cached = false;\n  function cachePendingValue() {\n    cachedValue = props.value;\n    cached = true;\n  }\n  function clearPendingValue() {\n    cached = false;\n  }\n  function restorePendingValue() {\n    if (cached) {\n      doUpdateValue(cachedValue, false);\n      cached = false;\n    }\n  }\n  function getShortcutValue(shortcut) {\n    if (typeof shortcut === 'function') {\n      return shortcut();\n    }\n    return shortcut;\n  }\n  const showMonthYearPanel = ref(false);\n  function handleOpenQuickSelectMonthPanel() {\n    showMonthYearPanel.value = !showMonthYearPanel.value;\n  }\n  return {\n    mergedTheme: mergedThemeRef,\n    mergedClsPrefix: mergedClsPrefixRef,\n    dateFnsOptions: dateFnsOptionsRef,\n    timePickerSize: timePickerSizeRef,\n    timePickerProps: timePickerPropsRef,\n    selfRef,\n    locale: localeRef,\n    doConfirm,\n    doClose,\n    doUpdateValue,\n    doTabOut,\n    handleClearClick,\n    handleFocusDetectorFocus,\n    disableTransitionOneTick,\n    handlePanelKeyDown,\n    handlePanelFocus,\n    cachePendingValue,\n    clearPendingValue,\n    restorePendingValue,\n    getShortcutValue,\n    handleShortcutMouseleave: restorePendingValue,\n    showMonthYearPanel,\n    handleOpenQuickSelectMonthPanel\n  };\n}\nexport { usePanelCommon, usePanelCommonProps };","map":{"version":3,"names":["computed","inject","ref","nextTick","useKeyboard","datePickerInjectionKey","TIME_FORMAT","usePanelCommonProps","active","Boolean","dateFormat","String","timerPickerFormat","type","value","Array","Number","default","shortcuts","Object","defaultTime","onClear","Function","onConfirm","onClose","onTabOut","onUpdateValue","required","themeClass","onRender","panel","onNextMonth","onPrevMonth","onNextYear","onPrevYear","usePanelCommon","props","dateLocaleRef","timePickerSizeRef","timePickerPropsRef","localeRef","mergedClsPrefixRef","mergedThemeRef","dateFnsOptionsRef","locale","selfRef","keyboardState","doClear","doConfirm","doUpdateValue","doUpdate","doClose","disableUpdateOnClose","doTabOut","handleClearClick","handleFocusDetectorFocus","disableTransitionOneTick","selfEl","dateEls","querySelectorAll","forEach","el","classList","add","offsetWidth","remove","handlePanelKeyDown","e","key","target","shift","preventDefault","handlePanelFocus","tab","contains","relatedTarget","cachedValue","cached","cachePendingValue","clearPendingValue","restorePendingValue","getShortcutValue","shortcut","showMonthYearPanel","handleOpenQuickSelectMonthPanel","mergedTheme","mergedClsPrefix","dateFnsOptions","timePickerSize","timePickerProps","handleShortcutMouseleave"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/date-picker/src/panel/use-panel-common.mjs"],"sourcesContent":["import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from \"../interface.mjs\";\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n  active: Boolean,\n  dateFormat: String,\n  timerPickerFormat: {\n    type: String,\n    value: TIME_FORMAT\n  },\n  value: {\n    type: [Array, Number],\n    default: null\n  },\n  shortcuts: Object,\n  defaultTime: [Number, String, Array],\n  onClear: Function,\n  onConfirm: Function,\n  onClose: Function,\n  onTabOut: Function,\n  onUpdateValue: {\n    type: Function,\n    required: true\n  },\n  themeClass: String,\n  onRender: Function,\n  panel: Boolean,\n  onNextMonth: Function,\n  onPrevMonth: Function,\n  onNextYear: Function,\n  onPrevYear: Function\n};\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction usePanelCommon(props) {\n  const {\n    dateLocaleRef,\n    timePickerSizeRef,\n    timePickerPropsRef,\n    localeRef,\n    mergedClsPrefixRef,\n    mergedThemeRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const dateFnsOptionsRef = computed(() => {\n    return {\n      locale: dateLocaleRef.value.locale\n    };\n  });\n  const selfRef = ref(null);\n  const keyboardState = useKeyboard();\n  function doClear() {\n    const {\n      onClear\n    } = props;\n    if (onClear) onClear();\n  }\n  function doConfirm() {\n    const {\n      onConfirm,\n      value\n    } = props;\n    if (onConfirm) onConfirm(value);\n  }\n  function doUpdateValue(value, doUpdate) {\n    const {\n      onUpdateValue\n    } = props;\n    onUpdateValue(value, doUpdate);\n  }\n  function doClose(disableUpdateOnClose = false) {\n    const {\n      onClose\n    } = props;\n    if (onClose) onClose(disableUpdateOnClose);\n  }\n  function doTabOut() {\n    const {\n      onTabOut\n    } = props;\n    if (onTabOut) onTabOut();\n  }\n  function handleClearClick() {\n    doUpdateValue(null, true);\n    doClose(true);\n    doClear();\n  }\n  function handleFocusDetectorFocus() {\n    doTabOut();\n  }\n  function disableTransitionOneTick() {\n    if (props.active || props.panel) {\n      void nextTick(() => {\n        const {\n          value: selfEl\n        } = selfRef;\n        if (!selfEl) return;\n        const dateEls = selfEl.querySelectorAll('[data-n-date]');\n        dateEls.forEach(el => {\n          el.classList.add('transition-disabled');\n        });\n        void selfEl.offsetWidth;\n        dateEls.forEach(el => {\n          el.classList.remove('transition-disabled');\n        });\n      });\n    }\n  }\n  function handlePanelKeyDown(e) {\n    if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n      e.preventDefault();\n      doTabOut();\n    }\n  }\n  function handlePanelFocus(e) {\n    const {\n      value: el\n    } = selfRef;\n    if (keyboardState.tab && e.target === el && (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n      doTabOut();\n    }\n  }\n  let cachedValue = null;\n  let cached = false;\n  function cachePendingValue() {\n    cachedValue = props.value;\n    cached = true;\n  }\n  function clearPendingValue() {\n    cached = false;\n  }\n  function restorePendingValue() {\n    if (cached) {\n      doUpdateValue(cachedValue, false);\n      cached = false;\n    }\n  }\n  function getShortcutValue(shortcut) {\n    if (typeof shortcut === 'function') {\n      return shortcut();\n    }\n    return shortcut;\n  }\n  const showMonthYearPanel = ref(false);\n  function handleOpenQuickSelectMonthPanel() {\n    showMonthYearPanel.value = !showMonthYearPanel.value;\n  }\n  return {\n    mergedTheme: mergedThemeRef,\n    mergedClsPrefix: mergedClsPrefixRef,\n    dateFnsOptions: dateFnsOptionsRef,\n    timePickerSize: timePickerSizeRef,\n    timePickerProps: timePickerPropsRef,\n    selfRef,\n    locale: localeRef,\n    doConfirm,\n    doClose,\n    doUpdateValue,\n    doTabOut,\n    handleClearClick,\n    handleFocusDetectorFocus,\n    disableTransitionOneTick,\n    handlePanelKeyDown,\n    handlePanelFocus,\n    cachePendingValue,\n    clearPendingValue,\n    restorePendingValue,\n    getShortcutValue,\n    handleShortcutMouseleave: restorePendingValue,\n    showMonthYearPanel,\n    handleOpenQuickSelectMonthPanel\n  };\n}\nexport { usePanelCommon, usePanelCommonProps };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}