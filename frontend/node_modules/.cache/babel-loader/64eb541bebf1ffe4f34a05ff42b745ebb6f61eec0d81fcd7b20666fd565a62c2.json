{"ast":null,"code":"import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { transferInjectionKey } from \"./interface.mjs\";\nimport { getTitleAttribute } from \"../../_utils/index.mjs\";\nexport default defineComponent({\n  name: 'NTransferListItem',\n  props: {\n    source: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const {\n      source\n    } = props;\n    const {\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      srcCheckedValuesRef,\n      tgtCheckedValuesRef,\n      handleSrcCheckboxClick,\n      handleTgtCheckboxClick\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(transferInjectionKey);\n    const checkedRef = source ? useMemo(() => srcCheckedValuesRef.value.includes(props.value)) : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n    const handleClick = source ? () => {\n      if (!props.disabled) {\n        handleSrcCheckboxClick(!checkedRef.value, props.value);\n      }\n    } : () => {\n      if (!props.disabled) {\n        handleTgtCheckboxClick(!checkedRef.value, props.value);\n      }\n    };\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      checked: checkedRef,\n      handleClick\n    };\n  },\n  render() {\n    const {\n      disabled,\n      mergedTheme,\n      mergedClsPrefix,\n      label,\n      checked,\n      source\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-legacy-transfer-list-item`, disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`, source ? `${mergedClsPrefix}-legacy-transfer-list-item--source` : `${mergedClsPrefix}-legacy-transfer-list-item--target`],\n      onClick: this.handleClick\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox`\n    }, h(NCheckbox, {\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      disabled: disabled,\n      checked: checked\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__label`,\n      title: getTitleAttribute(label)\n    }, label));\n  }\n});","map":{"version":3,"names":["h","inject","defineComponent","useMemo","NCheckbox","transferInjectionKey","getTitleAttribute","name","props","source","type","Boolean","default","label","String","required","value","Number","disabled","setup","mergedClsPrefixRef","mergedThemeRef","srcCheckedValuesRef","tgtCheckedValuesRef","handleSrcCheckboxClick","handleTgtCheckboxClick","checkedRef","includes","handleClick","mergedClsPrefix","mergedTheme","checked","render","class","onClick","theme","peers","Checkbox","themeOverrides","peerOverrides","title"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/legacy-transfer/src/TransferListItem.mjs"],"sourcesContent":["import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { transferInjectionKey } from \"./interface.mjs\";\nimport { getTitleAttribute } from \"../../_utils/index.mjs\";\nexport default defineComponent({\n  name: 'NTransferListItem',\n  props: {\n    source: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const {\n      source\n    } = props;\n    const {\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      srcCheckedValuesRef,\n      tgtCheckedValuesRef,\n      handleSrcCheckboxClick,\n      handleTgtCheckboxClick\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(transferInjectionKey);\n    const checkedRef = source ? useMemo(() => srcCheckedValuesRef.value.includes(props.value)) : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n    const handleClick = source ? () => {\n      if (!props.disabled) {\n        handleSrcCheckboxClick(!checkedRef.value, props.value);\n      }\n    } : () => {\n      if (!props.disabled) {\n        handleTgtCheckboxClick(!checkedRef.value, props.value);\n      }\n    };\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      checked: checkedRef,\n      handleClick\n    };\n  },\n  render() {\n    const {\n      disabled,\n      mergedTheme,\n      mergedClsPrefix,\n      label,\n      checked,\n      source\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-legacy-transfer-list-item`, disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`, source ? `${mergedClsPrefix}-legacy-transfer-list-item--source` : `${mergedClsPrefix}-legacy-transfer-list-item--target`],\n      onClick: this.handleClick\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox`\n    }, h(NCheckbox, {\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      disabled: disabled,\n      checked: checked\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__label`,\n      title: getTitleAttribute(label)\n    }, label));\n  }\n});"],"mappings":"AAAA,SAASA,CAAC,EAAEC,MAAM,EAAEC,eAAe,QAAQ,KAAK;AAChD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,eAAeJ,eAAe,CAAC;EAC7BK,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLN,IAAI,EAAE,CAACI,MAAM,EAAEG,MAAM,CAAC;MACtBF,QAAQ,EAAE;IACZ,CAAC;IACDG,QAAQ,EAAE;MACRR,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,KAAKA,CAACX,KAAK,EAAE;IACX,MAAM;MACJC;IACF,CAAC,GAAGD,KAAK;IACT,MAAM;MACJY,kBAAkB;MAClBC,cAAc;MACdC,mBAAmB;MACnBC,mBAAmB;MACnBC,sBAAsB;MACtBC;MACA;IACF,CAAC,GAAGxB,MAAM,CAACI,oBAAoB,CAAC;IAChC,MAAMqB,UAAU,GAAGjB,MAAM,GAAGN,OAAO,CAAC,MAAMmB,mBAAmB,CAACN,KAAK,CAACW,QAAQ,CAACnB,KAAK,CAACQ,KAAK,CAAC,CAAC,GAAGb,OAAO,CAAC,MAAMoB,mBAAmB,CAACP,KAAK,CAACW,QAAQ,CAACnB,KAAK,CAACQ,KAAK,CAAC,CAAC;IAC3J,MAAMY,WAAW,GAAGnB,MAAM,GAAG,MAAM;MACjC,IAAI,CAACD,KAAK,CAACU,QAAQ,EAAE;QACnBM,sBAAsB,CAAC,CAACE,UAAU,CAACV,KAAK,EAAER,KAAK,CAACQ,KAAK,CAAC;MACxD;IACF,CAAC,GAAG,MAAM;MACR,IAAI,CAACR,KAAK,CAACU,QAAQ,EAAE;QACnBO,sBAAsB,CAAC,CAACC,UAAU,CAACV,KAAK,EAAER,KAAK,CAACQ,KAAK,CAAC;MACxD;IACF,CAAC;IACD,OAAO;MACLa,eAAe,EAAET,kBAAkB;MACnCU,WAAW,EAAET,cAAc;MAC3BU,OAAO,EAAEL,UAAU;MACnBE;IACF,CAAC;EACH,CAAC;EACDI,MAAMA,CAAA,EAAG;IACP,MAAM;MACJd,QAAQ;MACRY,WAAW;MACXD,eAAe;MACfhB,KAAK;MACLkB,OAAO;MACPtB;IACF,CAAC,GAAG,IAAI;IACR,OAAOT,CAAC,CAAC,KAAK,EAAE;MACdiC,KAAK,EAAE,CAAE,GAAEJ,eAAgB,4BAA2B,EAAEX,QAAQ,IAAK,GAAEW,eAAgB,sCAAqC,EAAEpB,MAAM,GAAI,GAAEoB,eAAgB,oCAAmC,GAAI,GAAEA,eAAgB,oCAAmC,CAAC;MACvPK,OAAO,EAAE,IAAI,CAACN;IAChB,CAAC,EAAE5B,CAAC,CAAC,KAAK,EAAE;MACViC,KAAK,EAAG,GAAEJ,eAAgB;IAC5B,CAAC,EAAE7B,CAAC,CAACI,SAAS,EAAE;MACd+B,KAAK,EAAEL,WAAW,CAACM,KAAK,CAACC,QAAQ;MACjCC,cAAc,EAAER,WAAW,CAACS,aAAa,CAACF,QAAQ;MAClDnB,QAAQ,EAAEA,QAAQ;MAClBa,OAAO,EAAEA;IACX,CAAC,CAAC,CAAC,EAAE/B,CAAC,CAAC,KAAK,EAAE;MACZiC,KAAK,EAAG,GAAEJ,eAAgB,mCAAkC;MAC5DW,KAAK,EAAElC,iBAAiB,CAACO,KAAK;IAChC,CAAC,EAAEA,KAAK,CAAC,CAAC;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}