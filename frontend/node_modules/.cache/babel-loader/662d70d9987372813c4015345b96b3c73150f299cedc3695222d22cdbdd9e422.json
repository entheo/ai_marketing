{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { treeInjectionKey } from \"./interface.mjs\";\nexport default defineComponent({\n  name: 'NTreeNodeCheckbox',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    indent: {\n      type: Number,\n      required: true\n    },\n    right: Boolean,\n    focusable: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    indeterminate: Boolean,\n    onCheck: Function\n  },\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NTree = inject(treeInjectionKey);\n    function doCheck(value) {\n      const {\n        onCheck\n      } = props;\n      if (onCheck) {\n        onCheck(value);\n      }\n    }\n    function handleUpdateValue(value) {\n      doCheck(value);\n    }\n    return {\n      handleUpdateValue,\n      mergedTheme: NTree.mergedThemeRef\n    };\n  },\n  render() {\n    const {\n      clsPrefix,\n      mergedTheme,\n      checked,\n      indeterminate,\n      disabled,\n      focusable,\n      indent,\n      handleUpdateValue\n    } = this;\n    return h(\"span\", {\n      class: [`${clsPrefix}-tree-node-checkbox`, this.right && `${clsPrefix}-tree-node-checkbox--right`],\n      style: {\n        width: `${indent}px`\n      },\n      \"data-checkbox\": true\n    }, h(NCheckbox, {\n      focusable: focusable,\n      disabled: disabled,\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      checked: checked,\n      indeterminate: indeterminate,\n      onUpdateChecked: handleUpdateValue\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","NCheckbox","treeInjectionKey","name","props","clsPrefix","type","String","required","indent","Number","right","Boolean","focusable","disabled","checked","indeterminate","onCheck","Function","setup","NTree","doCheck","value","handleUpdateValue","mergedTheme","mergedThemeRef","render","class","style","width","theme","peers","Checkbox","themeOverrides","peerOverrides","onUpdateChecked"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/tree/src/TreeNodeCheckbox.mjs"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from \"../../checkbox/index.mjs\";\nimport { treeInjectionKey } from \"./interface.mjs\";\nexport default defineComponent({\n  name: 'NTreeNodeCheckbox',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    indent: {\n      type: Number,\n      required: true\n    },\n    right: Boolean,\n    focusable: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    indeterminate: Boolean,\n    onCheck: Function\n  },\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NTree = inject(treeInjectionKey);\n    function doCheck(value) {\n      const {\n        onCheck\n      } = props;\n      if (onCheck) {\n        onCheck(value);\n      }\n    }\n    function handleUpdateValue(value) {\n      doCheck(value);\n    }\n    return {\n      handleUpdateValue,\n      mergedTheme: NTree.mergedThemeRef\n    };\n  },\n  render() {\n    const {\n      clsPrefix,\n      mergedTheme,\n      checked,\n      indeterminate,\n      disabled,\n      focusable,\n      indent,\n      handleUpdateValue\n    } = this;\n    return h(\"span\", {\n      class: [`${clsPrefix}-tree-node-checkbox`, this.right && `${clsPrefix}-tree-node-checkbox--right`],\n      style: {\n        width: `${indent}px`\n      },\n      \"data-checkbox\": true\n    }, h(NCheckbox, {\n      focusable: focusable,\n      disabled: disabled,\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      checked: checked,\n      indeterminate: indeterminate,\n      onUpdateChecked: handleUpdateValue\n    }));\n  }\n});"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,QAAQ,KAAK;AAChD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,eAAeH,eAAe,CAAC;EAC7BI,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDG,KAAK,EAAEC,OAAO;IACdC,SAAS,EAAED,OAAO;IAClBE,QAAQ,EAAEF,OAAO;IACjBG,OAAO,EAAEH,OAAO;IAChBI,aAAa,EAAEJ,OAAO;IACtBK,OAAO,EAAEC;EACX,CAAC;EACDC,KAAKA,CAACf,KAAK,EAAE;IACX;IACA,MAAMgB,KAAK,GAAGpB,MAAM,CAACE,gBAAgB,CAAC;IACtC,SAASmB,OAAOA,CAACC,KAAK,EAAE;MACtB,MAAM;QACJL;MACF,CAAC,GAAGb,KAAK;MACT,IAAIa,OAAO,EAAE;QACXA,OAAO,CAACK,KAAK,CAAC;MAChB;IACF;IACA,SAASC,iBAAiBA,CAACD,KAAK,EAAE;MAChCD,OAAO,CAACC,KAAK,CAAC;IAChB;IACA,OAAO;MACLC,iBAAiB;MACjBC,WAAW,EAAEJ,KAAK,CAACK;IACrB,CAAC;EACH,CAAC;EACDC,MAAMA,CAAA,EAAG;IACP,MAAM;MACJrB,SAAS;MACTmB,WAAW;MACXT,OAAO;MACPC,aAAa;MACbF,QAAQ;MACRD,SAAS;MACTJ,MAAM;MACNc;IACF,CAAC,GAAG,IAAI;IACR,OAAOzB,CAAC,CAAC,MAAM,EAAE;MACf6B,KAAK,EAAE,CAAE,GAAEtB,SAAU,qBAAoB,EAAE,IAAI,CAACM,KAAK,IAAK,GAAEN,SAAU,4BAA2B,CAAC;MAClGuB,KAAK,EAAE;QACLC,KAAK,EAAG,GAAEpB,MAAO;MACnB,CAAC;MACD,eAAe,EAAE;IACnB,CAAC,EAAEX,CAAC,CAACG,SAAS,EAAE;MACdY,SAAS,EAAEA,SAAS;MACpBC,QAAQ,EAAEA,QAAQ;MAClBgB,KAAK,EAAEN,WAAW,CAACO,KAAK,CAACC,QAAQ;MACjCC,cAAc,EAAET,WAAW,CAACU,aAAa,CAACF,QAAQ;MAClDjB,OAAO,EAAEA,OAAO;MAChBC,aAAa,EAAEA,aAAa;MAC5BmB,eAAe,EAAEZ;IACnB,CAAC,CAAC,CAAC;EACL;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}