{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_n_radio_button = _resolveComponent(\"n-radio-button\");\n  const _component_n_radio_group = _resolveComponent(\"n-radio-group\");\n  const _component_n_form_item = _resolveComponent(\"n-form-item\");\n  const _component_n_input = _resolveComponent(\"n-input\");\n  const _component_n_dynamic_tags = _resolveComponent(\"n-dynamic-tags\");\n  const _component_n_button = _resolveComponent(\"n-button\");\n  const _component_n_form = _resolveComponent(\"n-form\");\n  return _openBlock(), _createBlock(_component_n_form, {\n    \"label-placement\": \"left\",\n    \"require-mark-placement\": \"right-hanging\",\n    \"label-width\": \"190\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_n_form_item, {\n      label: \"计划将文案用在哪里？\",\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_n_radio_group, {\n        value: _ctx.senarioInfo.places,\n        \"onUpdate:value\": [_cache[0] || (_cache[0] = $event => _ctx.senarioInfo.places = $event), _ctx.getPlace],\n        size: \"large\",\n        name: \"radiobuttongroup1\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.places, place => {\n          return _openBlock(), _createBlock(_component_n_radio_button, {\n            key: place.value,\n            value: place.value,\n            label: place.label\n          }, null, 8 /* PROPS */, [\"value\", \"label\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"value\", \"onUpdate:value\"])]),\n      _: 1 /* STABLE */\n    }), _withDirectives(_createVNode(_component_n_form_item, {\n      label: \"补充描述使用场景:\"\n    }, {\n      default: _withCtx(() => [_withDirectives(_createVNode(_component_n_input, {\n        value: _ctx.senarioInfo.places,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.senarioInfo.places = $event),\n        placeholder: \"\",\n        ref: \"inputInstRef\"\n      }, null, 8 /* PROPS */, [\"value\"]), [[_vShow, _ctx.otherPlace]])]),\n      _: 1 /* STABLE */\n    }, 512 /* NEED_PATCH */), [[_vShow, _ctx.otherPlace]]), _createVNode(_component_n_form_item, {\n      class: \"tags\",\n      label: \"传递情绪与感受是？\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_n_dynamic_tags, {\n        value: _ctx.senarioInfo.emotionTags,\n        \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.senarioInfo.emotionTags = $event),\n        \"render-tag\": _ctx.renderEmotionTags\n      }, null, 8 /* PROPS */, [\"value\", \"render-tag\"])]),\n      _: 1 /* STABLE */\n    }), _withDirectives(_createVNode(_component_n_button, {\n      type: \"primary\",\n      onClick: _ctx.createSenario\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"保存\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), [[_vShow, false]])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_n_form","size","default","_withCtx","_createVNode","_component_n_form_item","label","_component_n_radio_group","value","_ctx","senarioInfo","places","$event","getPlace","name","_createElementBlock","_Fragment","_renderList","place","_component_n_radio_button","key","_","_component_n_input","_cache","placeholder","ref","otherPlace","class","_component_n_dynamic_tags","emotionTags","renderEmotionTags","_component_n_button","type","onClick","createSenario","_createTextVNode"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/CreateSenarioForm.vue"],"sourcesContent":["<template>\n    <n-form label-placement=\"left\" require-mark-placement=\"right-hanging\" label-width=\"190\" size=\"large\">\n\n        <n-form-item label=\"计划将文案用在哪里？\" size=\"large\">\n            <n-radio-group \n                v-model:value=\"senarioInfo.places\" \n                size=\"large\"\n                name=\"radiobuttongroup1\"\n                @update:value=\"getPlace\">\n        \n                <n-radio-button\n                    v-for=\"place in places\"\n                    :key=\"place.value\"\n                    :value=\"place.value\"\n                    :label=\"place.label\"/> \n            </n-radio-group>\n        </n-form-item>\n\n        <n-form-item label=\"补充描述使用场景:\" v-show=\"otherPlace\">        \n                <n-input \n                v-show=\"otherPlace\" \n                v-model:value='senarioInfo.places' placeholder=\"\"\n                ref=\"inputInstRef\"/>\n            \n        </n-form-item>\n         \n         <n-form-item class=\"tags\" label=\"传递情绪与感受是？\">\n         <n-dynamic-tags v-model:value=\"senarioInfo.emotionTags\" :render-tag=\"renderEmotionTags\" />\n         </n-form-item>\n         \n        <n-button v-show=\"false\" type=\"primary\" @click=\"createSenario\">保存</n-button>\n    </n-form>\n</template>\n\n<script setup>\nimport {ref,h, defineEmits,defineExpose} from 'vue';\nimport {NRadioGroup,NRadioButton,NButton, NForm, NInput, NFormItem,  NTag,NDynamicTags} from 'naive-ui';\nimport {useStore} from 'vuex';\n\n//组件挂载前加载数据\nconst store = useStore();\nonBeforeMount(()=>{\n    const store = useStore();\n    preData.value = store.getters.temp_campaign_data;\n    console.log('预加载数据：',preData.value);\n    handleSenarioInfo();\n    });\nconst preData = ref(null);\nconst senarioInfo = ref({});\nconst handleSenarioInfo=()=>{\n    console.log(typeof(preData.value));\n    if(preData.value && JSON.stringify(preData.value)!=='{}' ){\n       senarioInfo.value.places = preData.value.senarioData.places;\n       senarioInfo.value.emotionTags = preData.value.senarioData.emotionTags;\n    };\n\n//定义表单\nconst inputInstRef=ref(null);\nconst otherPlace=ref(false);\nconst places = [\n    {\n        value:\"微信朋友圈\",\n        label:\"微信朋友圈\",\n        },\n    {\n        value:\"微信群\",\n        label:\"微信群\",\n        },\n    {\n        value:\"小红书\",\n        label:\"小红书\",\n        },\n    {\n        value:\"电商/商品详情页\",\n        label:\"电商/商品详情页\",\n        },\n\n    {\n        value:\"其它...\",\n        label:\"其它\",\n        },\n];\nconst getPlace = (message)=>{\n    switch(message){\n        case '微信朋友圈':\n        senarioInfo.value.emotionTags=['亲密感','真诚','轻松'];\n        break;\n\n        case '微信群':\n        senarioInfo.value.emotionTags=['归属感','参与感','价值感'];\n        break;\n\n        case '小红书':\n        senarioInfo.value.emotionTags=['探索欲','真实感','认同感'];\n        break;\n\n        case '电商/商品详情页':\n        senarioInfo.value.emotionTags=['信任','诱惑','紧迫感']\n        \n        break;\n        \n        case '其它...':\n        senarioInfo.value.places='';\n        senarioInfo.value.emotionTags=['惊喜'];\n        otherPlace.value=true;\n        inputInstRef.value?.focus();\n        }\n    /*\n    if(message===\"其它...\"){\n        otherPlace.value=true;\n        console.log(inputInstRef.value?.focus());\n        inputInstRef.value?.focus();\n        }\n    else{\n        otherPlace.value=false;\n        }\n    console.log(message)\n    */\n    };\n\nconst emotionTagsRef = ref([\"喜悦\", \"真诚\"]);\nconst senarioInfo = ref({\n    places:'',\n    emotionTags: emotionTagsRef,\n\n    })\nconst renderEmotionTags = (tag, index) => {\n      return h(\n          NTag,\n          {\n            type: index < 3 ? \"success\" : \"error\",\n            disabled: index > 3,\n            closable: true,\n            onClose: () => {\n              emotionTagsRef.value.splice(index, 1);\n            }\n          },\n           ()=> tag\n        )\n}\nconst emit = defineEmits(['senarioInfoCreated']);\nconst createSenario = () =>{\n      console.log('to create senario');\n      console.log(senarioInfo.value);\n      emit('senarioInfoCreated',senarioInfo.value);\n      try{\n          /*\n          const resp =  await axios.get('http://localhost:8005/account/auth/',{\n            headers: {\n                'Authorization': `Bearer ${token}` // 设置请求头\n                }});\n         */ }catch (error) {\n        console.error('Failed to fetch user info:', error);\n        }\n      }\ndefineExpose({createSenario});\n</script>\n<script>\n  export default{\n      name:'CreateSenarioForm'\n      };\n</script>\n\n<style>\n.n-space{\n    margin:0}\n.tags .n-form-item-blank .n-space{\n    margin:0;\n    }\n</style>\n"],"mappings":";;;;;;;;;uBACIA,YAAA,CA8BSC,iBAAA;IA9BD,iBAAe,EAAC,MAAM;IAAC,wBAAsB,EAAC,eAAe;IAAC,aAAW,EAAC,KAAK;IAACC,IAAI,EAAC;;IADjGC,OAAA,EAAAC,QAAA,CAGQ,MAac,CAbdC,YAAA,CAacC,sBAAA;MAbDC,KAAK,EAAC,YAAY;MAACL,IAAI,EAAC;;MAH7CC,OAAA,EAAAC,QAAA,CAIY,MAWgB,CAXhBC,YAAA,CAWgBG,wBAAA;QAVJC,KAAK,EAAEC,IAAA,CAAAC,WAAW,CAACC,MAAM;QALjD,mB,oCAK+BF,IAAA,CAAAC,WAAW,CAACC,MAAM,GAAAC,MAAA,GAGlBH,IAAA,CAAAI,QAAQ,C;QAFvBZ,IAAI,EAAC,OAAO;QACZa,IAAI,EAAC;;QAPrBZ,OAAA,EAAAC,QAAA,CAWoB,MAAuB,E,kBAD3BY,mBAAA,CAI0BC,SAAA,QAd1CC,WAAA,CAWoCR,IAAA,CAAAE,MAAM,EAAfO,KAAK;+BADhBnB,YAAA,CAI0BoB,yBAAA;YAFrBC,GAAG,EAAEF,KAAK,CAACV,KAAK;YAChBA,KAAK,EAAEU,KAAK,CAACV,KAAK;YAClBF,KAAK,EAAEY,KAAK,CAACZ;;;QAdlCe,CAAA;;MAAAA,CAAA;wBAkBQjB,YAAA,CAMcC,sBAAA;MANDC,KAAK,EAAC;IAAW;MAlBtCJ,OAAA,EAAAC,QAAA,CAmBgB,MAGoB,C,gBAHpBC,YAAA,CAGoBkB,kBAAA;QADZd,KAAK,EAAEC,IAAA,CAAAC,WAAW,CAACC,MAAM;QArBjD,kBAAAY,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAqB+BH,IAAA,CAAAC,WAAW,CAACC,MAAM,GAAAC,MAAA;QAAEY,WAAW,EAAC,EAAE;QACjDC,GAAG,EAAC;oDAFIhB,IAAA,CAAAiB,UAAU,E;MApBlCL,CAAA;wCAkB+CZ,IAAA,CAAAiB,UAAU,E,GAQhDtB,YAAA,CAEcC,sBAAA;MAFDsB,KAAK,EAAC,MAAM;MAACrB,KAAK,EAAC;;MA1BzCJ,OAAA,EAAAC,QAAA,CA2BS,MAA0F,CAA1FC,YAAA,CAA0FwB,yBAAA;QAAlEpB,KAAK,EAAEC,IAAA,CAAAC,WAAW,CAACmB,WAAW;QA3B/D,kBAAAN,MAAA,QAAAA,MAAA,MAAAX,MAAA,IA2BwCH,IAAA,CAAAC,WAAW,CAACmB,WAAW,GAAAjB,MAAA;QAAG,YAAU,EAAEH,IAAA,CAAAqB;;MA3B9ET,CAAA;wBA8BQjB,YAAA,CAA4E2B,mBAAA;MAAnDC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAExB,IAAA,CAAAyB;;MA9BxDhC,OAAA,EAAAC,QAAA,CA8BuE,MAAE,CA9BzEgC,gBAAA,CA8BuE,IAAE,E;MA9BzEd,CAAA;8CA8B0B,KAAK,E;IA9B/BA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}