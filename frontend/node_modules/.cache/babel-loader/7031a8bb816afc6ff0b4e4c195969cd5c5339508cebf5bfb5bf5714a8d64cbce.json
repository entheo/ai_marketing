{"ast":null,"code":"import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { NIconSwitchTransition } from \"../../_internal/index.mjs\";\nimport { call, createKey, warnOnce, resolveWrappedSlot } from \"../../_utils/index.mjs\";\nimport { checkboxLight } from \"../styles/index.mjs\";\nimport CheckMark from \"./CheckMark.mjs\";\nimport LineMark from \"./LineMark.mjs\";\nimport { checkboxGroupInjectionKey } from \"./CheckboxGroup.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: String,\n  checked: {\n    type: [Boolean, String, Number],\n    default: undefined\n  },\n  defaultChecked: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  value: [String, Number],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  indeterminate: Boolean,\n  label: String,\n  focusable: {\n    type: Boolean,\n    default: true\n  },\n  checkedValue: {\n    type: [Boolean, String, Number],\n    default: true\n  },\n  uncheckedValue: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  'onUpdate:checked': [Function, Array],\n  onUpdateChecked: [Function, Array],\n  // private\n  privateInsideTable: Boolean,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Checkbox',\n  props: checkboxProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange) {\n          warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n        }\n      });\n    }\n    const selfRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const formItem = useFormItem(props, {\n      mergedSize(NFormItem) {\n        const {\n          size\n        } = props;\n        if (size !== undefined) return size;\n        if (NCheckboxGroup) {\n          const {\n            value: mergedSize\n          } = NCheckboxGroup.mergedSizeRef;\n          if (mergedSize !== undefined) {\n            return mergedSize;\n          }\n        }\n        if (NFormItem) {\n          const {\n            mergedSize\n          } = NFormItem;\n          if (mergedSize !== undefined) return mergedSize.value;\n        }\n        return 'medium';\n      },\n      mergedDisabled(NFormItem) {\n        const {\n          disabled\n        } = props;\n        if (disabled !== undefined) return disabled;\n        if (NCheckboxGroup) {\n          if (NCheckboxGroup.disabledRef.value) return true;\n          const {\n            maxRef: {\n              value: max\n            },\n            checkedCountRef\n          } = NCheckboxGroup;\n          if (max !== undefined && checkedCountRef.value >= max && !renderedCheckedRef.value) {\n            return true;\n          }\n          const {\n            minRef: {\n              value: min\n            }\n          } = NCheckboxGroup;\n          if (min !== undefined && checkedCountRef.value <= min && renderedCheckedRef.value) {\n            return true;\n          }\n        }\n        if (NFormItem) {\n          return NFormItem.disabled.value;\n        }\n        return false;\n      }\n    });\n    const {\n      mergedDisabledRef,\n      mergedSizeRef\n    } = formItem;\n    const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n    const uncontrolledCheckedRef = ref(props.defaultChecked);\n    const controlledCheckedRef = toRef(props, 'checked');\n    const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n    const renderedCheckedRef = useMemo(() => {\n      if (NCheckboxGroup) {\n        const groupValueSet = NCheckboxGroup.valueSetRef.value;\n        if (groupValueSet && props.value !== undefined) {\n          return groupValueSet.has(props.value);\n        }\n        return false;\n      } else {\n        return mergedCheckedRef.value === props.checkedValue;\n      }\n    });\n    const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n    function toggle(e) {\n      if (NCheckboxGroup && props.value !== undefined) {\n        NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n      } else {\n        const {\n          onChange,\n          'onUpdate:checked': _onUpdateCheck,\n          onUpdateChecked\n        } = props;\n        const {\n          nTriggerFormInput,\n          nTriggerFormChange\n        } = formItem;\n        const nextChecked = renderedCheckedRef.value ? props.uncheckedValue : props.checkedValue;\n        if (_onUpdateCheck) {\n          call(_onUpdateCheck, nextChecked, e);\n        }\n        if (onUpdateChecked) {\n          call(onUpdateChecked, nextChecked, e);\n        }\n        if (onChange) call(onChange, nextChecked, e); // deprecated\n        nTriggerFormInput();\n        nTriggerFormChange();\n        uncontrolledCheckedRef.value = nextChecked;\n      }\n    }\n    function handleClick(e) {\n      if (!mergedDisabledRef.value) {\n        toggle(e);\n      }\n    }\n    function handleKeyUp(e) {\n      if (mergedDisabledRef.value) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          toggle(e);\n      }\n    }\n    function handleKeyDown(e) {\n      switch (e.key) {\n        case ' ':\n          e.preventDefault();\n      }\n    }\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          borderRadius,\n          color,\n          colorChecked,\n          colorDisabled,\n          colorTableHeader,\n          colorTableHeaderModal,\n          colorTableHeaderPopover,\n          checkMarkColor,\n          checkMarkColorDisabled,\n          border,\n          borderFocus,\n          borderDisabled,\n          borderChecked,\n          boxShadowFocus,\n          textColor,\n          textColorDisabled,\n          checkMarkColorDisabledChecked,\n          colorDisabledChecked,\n          borderDisabledChecked,\n          labelPadding,\n          labelLineHeight,\n          labelFontWeight,\n          [createKey('fontSize', mergedSize)]: fontSize,\n          [createKey('size', mergedSize)]: size\n        }\n      } = themeRef.value;\n      return {\n        '--n-label-line-height': labelLineHeight,\n        '--n-label-font-weight': labelFontWeight,\n        '--n-size': size,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-border-checked': borderChecked,\n        '--n-border-focus': borderFocus,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-disabled-checked': borderDisabledChecked,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-color': color,\n        '--n-color-checked': colorChecked,\n        '--n-color-table': colorTableHeader,\n        '--n-color-table-modal': colorTableHeaderModal,\n        '--n-color-table-popover': colorTableHeaderPopover,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-disabled-checked': colorDisabledChecked,\n        '--n-text-color': textColor,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-check-mark-color': checkMarkColor,\n        '--n-check-mark-color-disabled': checkMarkColorDisabled,\n        '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n        '--n-font-size': fontSize,\n        '--n-label-padding': labelPadding\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props) : undefined;\n    return Object.assign(formItem, exposedMethods, {\n      rtlEnabled: rtlEnabledRef,\n      selfRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedDisabled: mergedDisabledRef,\n      renderedChecked: renderedCheckedRef,\n      mergedTheme: themeRef,\n      labelId: createId(),\n      handleClick,\n      handleKeyUp,\n      handleKeyDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      renderedChecked,\n      mergedDisabled,\n      indeterminate,\n      privateInsideTable,\n      cssVars,\n      labelId,\n      label,\n      mergedClsPrefix,\n      focusable,\n      handleKeyUp,\n      handleKeyDown,\n      handleClick\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    const labelNode = resolveWrappedSlot($slots.default, children => {\n      if (label || children) {\n        return h(\"span\", {\n          class: `${mergedClsPrefix}-checkbox__label`,\n          id: labelId\n        }, label || children);\n      }\n      return null;\n    });\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-checkbox`, this.themeClass, this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`, renderedChecked && `${mergedClsPrefix}-checkbox--checked`, mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`, indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`, privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`, labelNode && `${mergedClsPrefix}-checkbox--show-label`],\n      tabindex: mergedDisabled || !focusable ? undefined : 0,\n      role: \"checkbox\",\n      \"aria-checked\": indeterminate ? 'mixed' : renderedChecked,\n      \"aria-labelledby\": labelId,\n      style: cssVars,\n      onKeyup: handleKeyUp,\n      onKeydown: handleKeyDown,\n      onClick: handleClick,\n      onMousedown: () => {\n        on('selectstart', window, e => {\n          e.preventDefault();\n        }, {\n          once: true\n        });\n      }\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box-wrapper`\n    }, \"\\u00A0\", h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box`\n    }, h(NIconSwitchTransition, null, {\n      default: () => this.indeterminate ? h(\"div\", {\n        key: \"indeterminate\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, LineMark) : h(\"div\", {\n        key: \"check\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, CheckMark)\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box__border`\n    }))), labelNode);\n  }\n});","map":{"version":3,"names":["h","defineComponent","computed","inject","ref","toRef","watchEffect","useMergedState","useMemo","createId","on","useConfig","useFormItem","useTheme","useThemeClass","NIconSwitchTransition","call","createKey","warnOnce","resolveWrappedSlot","checkboxLight","CheckMark","LineMark","checkboxGroupInjectionKey","style","useRtl","checkboxProps","Object","assign","props","size","String","checked","type","Boolean","Number","default","undefined","defaultChecked","value","disabled","indeterminate","label","focusable","checkedValue","uncheckedValue","Function","Array","onUpdateChecked","privateInsideTable","onChange","name","setup","process","env","NODE_ENV","selfRef","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","formItem","mergedSize","NFormItem","NCheckboxGroup","mergedSizeRef","mergedDisabled","disabledRef","maxRef","max","checkedCountRef","renderedCheckedRef","minRef","min","mergedDisabledRef","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","groupValueSet","valueSetRef","has","themeRef","toggle","e","toggleCheckbox","_onUpdateCheck","nTriggerFormInput","nTriggerFormChange","nextChecked","handleClick","handleKeyUp","key","handleKeyDown","preventDefault","exposedMethods","focus","_a","blur","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","color","colorChecked","colorDisabled","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","border","borderFocus","borderDisabled","borderChecked","boxShadowFocus","textColor","textColorDisabled","checkMarkColorDisabledChecked","colorDisabledChecked","borderDisabledChecked","labelPadding","labelLineHeight","labelFontWeight","fontSize","themeClassHandle","rtlEnabled","mergedClsPrefix","renderedChecked","mergedTheme","labelId","cssVars","themeClass","onRender","render","$slots","labelNode","children","class","id","tabindex","role","onKeyup","onKeydown","onClick","onMousedown","window","once"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/checkbox/src/Checkbox.mjs"],"sourcesContent":["import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { NIconSwitchTransition } from \"../../_internal/index.mjs\";\nimport { call, createKey, warnOnce, resolveWrappedSlot } from \"../../_utils/index.mjs\";\nimport { checkboxLight } from \"../styles/index.mjs\";\nimport CheckMark from \"./CheckMark.mjs\";\nimport LineMark from \"./LineMark.mjs\";\nimport { checkboxGroupInjectionKey } from \"./CheckboxGroup.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: String,\n  checked: {\n    type: [Boolean, String, Number],\n    default: undefined\n  },\n  defaultChecked: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  value: [String, Number],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  indeterminate: Boolean,\n  label: String,\n  focusable: {\n    type: Boolean,\n    default: true\n  },\n  checkedValue: {\n    type: [Boolean, String, Number],\n    default: true\n  },\n  uncheckedValue: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  'onUpdate:checked': [Function, Array],\n  onUpdateChecked: [Function, Array],\n  // private\n  privateInsideTable: Boolean,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Checkbox',\n  props: checkboxProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange) {\n          warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n        }\n      });\n    }\n    const selfRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const formItem = useFormItem(props, {\n      mergedSize(NFormItem) {\n        const {\n          size\n        } = props;\n        if (size !== undefined) return size;\n        if (NCheckboxGroup) {\n          const {\n            value: mergedSize\n          } = NCheckboxGroup.mergedSizeRef;\n          if (mergedSize !== undefined) {\n            return mergedSize;\n          }\n        }\n        if (NFormItem) {\n          const {\n            mergedSize\n          } = NFormItem;\n          if (mergedSize !== undefined) return mergedSize.value;\n        }\n        return 'medium';\n      },\n      mergedDisabled(NFormItem) {\n        const {\n          disabled\n        } = props;\n        if (disabled !== undefined) return disabled;\n        if (NCheckboxGroup) {\n          if (NCheckboxGroup.disabledRef.value) return true;\n          const {\n            maxRef: {\n              value: max\n            },\n            checkedCountRef\n          } = NCheckboxGroup;\n          if (max !== undefined && checkedCountRef.value >= max && !renderedCheckedRef.value) {\n            return true;\n          }\n          const {\n            minRef: {\n              value: min\n            }\n          } = NCheckboxGroup;\n          if (min !== undefined && checkedCountRef.value <= min && renderedCheckedRef.value) {\n            return true;\n          }\n        }\n        if (NFormItem) {\n          return NFormItem.disabled.value;\n        }\n        return false;\n      }\n    });\n    const {\n      mergedDisabledRef,\n      mergedSizeRef\n    } = formItem;\n    const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n    const uncontrolledCheckedRef = ref(props.defaultChecked);\n    const controlledCheckedRef = toRef(props, 'checked');\n    const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n    const renderedCheckedRef = useMemo(() => {\n      if (NCheckboxGroup) {\n        const groupValueSet = NCheckboxGroup.valueSetRef.value;\n        if (groupValueSet && props.value !== undefined) {\n          return groupValueSet.has(props.value);\n        }\n        return false;\n      } else {\n        return mergedCheckedRef.value === props.checkedValue;\n      }\n    });\n    const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n    function toggle(e) {\n      if (NCheckboxGroup && props.value !== undefined) {\n        NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n      } else {\n        const {\n          onChange,\n          'onUpdate:checked': _onUpdateCheck,\n          onUpdateChecked\n        } = props;\n        const {\n          nTriggerFormInput,\n          nTriggerFormChange\n        } = formItem;\n        const nextChecked = renderedCheckedRef.value ? props.uncheckedValue : props.checkedValue;\n        if (_onUpdateCheck) {\n          call(_onUpdateCheck, nextChecked, e);\n        }\n        if (onUpdateChecked) {\n          call(onUpdateChecked, nextChecked, e);\n        }\n        if (onChange) call(onChange, nextChecked, e); // deprecated\n        nTriggerFormInput();\n        nTriggerFormChange();\n        uncontrolledCheckedRef.value = nextChecked;\n      }\n    }\n    function handleClick(e) {\n      if (!mergedDisabledRef.value) {\n        toggle(e);\n      }\n    }\n    function handleKeyUp(e) {\n      if (mergedDisabledRef.value) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          toggle(e);\n      }\n    }\n    function handleKeyDown(e) {\n      switch (e.key) {\n        case ' ':\n          e.preventDefault();\n      }\n    }\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          borderRadius,\n          color,\n          colorChecked,\n          colorDisabled,\n          colorTableHeader,\n          colorTableHeaderModal,\n          colorTableHeaderPopover,\n          checkMarkColor,\n          checkMarkColorDisabled,\n          border,\n          borderFocus,\n          borderDisabled,\n          borderChecked,\n          boxShadowFocus,\n          textColor,\n          textColorDisabled,\n          checkMarkColorDisabledChecked,\n          colorDisabledChecked,\n          borderDisabledChecked,\n          labelPadding,\n          labelLineHeight,\n          labelFontWeight,\n          [createKey('fontSize', mergedSize)]: fontSize,\n          [createKey('size', mergedSize)]: size\n        }\n      } = themeRef.value;\n      return {\n        '--n-label-line-height': labelLineHeight,\n        '--n-label-font-weight': labelFontWeight,\n        '--n-size': size,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-border-checked': borderChecked,\n        '--n-border-focus': borderFocus,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-disabled-checked': borderDisabledChecked,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-color': color,\n        '--n-color-checked': colorChecked,\n        '--n-color-table': colorTableHeader,\n        '--n-color-table-modal': colorTableHeaderModal,\n        '--n-color-table-popover': colorTableHeaderPopover,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-disabled-checked': colorDisabledChecked,\n        '--n-text-color': textColor,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-check-mark-color': checkMarkColor,\n        '--n-check-mark-color-disabled': checkMarkColorDisabled,\n        '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n        '--n-font-size': fontSize,\n        '--n-label-padding': labelPadding\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props) : undefined;\n    return Object.assign(formItem, exposedMethods, {\n      rtlEnabled: rtlEnabledRef,\n      selfRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedDisabled: mergedDisabledRef,\n      renderedChecked: renderedCheckedRef,\n      mergedTheme: themeRef,\n      labelId: createId(),\n      handleClick,\n      handleKeyUp,\n      handleKeyDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      renderedChecked,\n      mergedDisabled,\n      indeterminate,\n      privateInsideTable,\n      cssVars,\n      labelId,\n      label,\n      mergedClsPrefix,\n      focusable,\n      handleKeyUp,\n      handleKeyDown,\n      handleClick\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    const labelNode = resolveWrappedSlot($slots.default, children => {\n      if (label || children) {\n        return h(\"span\", {\n          class: `${mergedClsPrefix}-checkbox__label`,\n          id: labelId\n        }, label || children);\n      }\n      return null;\n    });\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-checkbox`, this.themeClass, this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`, renderedChecked && `${mergedClsPrefix}-checkbox--checked`, mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`, indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`, privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`, labelNode && `${mergedClsPrefix}-checkbox--show-label`],\n      tabindex: mergedDisabled || !focusable ? undefined : 0,\n      role: \"checkbox\",\n      \"aria-checked\": indeterminate ? 'mixed' : renderedChecked,\n      \"aria-labelledby\": labelId,\n      style: cssVars,\n      onKeyup: handleKeyUp,\n      onKeydown: handleKeyDown,\n      onClick: handleClick,\n      onMousedown: () => {\n        on('selectstart', window, e => {\n          e.preventDefault();\n        }, {\n          once: true\n        });\n      }\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box-wrapper`\n    }, \"\\u00A0\", h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box`\n    }, h(NIconSwitchTransition, null, {\n      default: () => this.indeterminate ? h(\"div\", {\n        key: \"indeterminate\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, LineMark) : h(\"div\", {\n        key: \"check\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, CheckMark)\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box__border`\n    }))), labelNode);\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}