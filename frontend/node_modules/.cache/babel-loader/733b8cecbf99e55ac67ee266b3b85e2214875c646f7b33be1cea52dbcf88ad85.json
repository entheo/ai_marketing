{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\n\n// 用于获取csrftoken的函数\nfunction getCsrfToken() {\n  return document.cookie.split('; ').find(row => row.startsWith('csrftoken'))?.split('=')[1];\n}\nexport default {\n  name: 'HomePage',\n  setup() {\n    const authStore = useStore();\n    console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态\n    // 在组件加载时获取CSRF token\n    const csrfToken = ref(getCsrfToken());\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n    const router = useRouter();\n    const handleLoginSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:8005/account/login/', {\n          username: loginUsername.value,\n          password: loginPassword.value,\n          keep_logged_in_for_days: keepLoggedInForDays.value\n        }, {\n          withCredentials: true,\n          headers: {\n            'X-CSRFToken': csrfToken.value\n          }\n        });\n        console.log(\"登录成功，用户名: \", loginUsername.value);\n        await authStore.dispatch('logIn', response.data);\n        await router.push('/dashboard');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const handleRegisterSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:8005/account/register/', {\n          username: registerUsername.value,\n          password: registerPassword.value,\n          invitation_code: invitation.value\n        }, {\n          headers: {\n            'X-CSRFToken': csrfToken.value\n          }\n        });\n        console.log(\"注册成功，用户名: \", registerUsername.value);\n        await router.push('/login');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    return {\n      response,\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n      csrfToken // 添加csrfToken到返回值中\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","useRouter","useStore","getCsrfToken","document","cookie","split","find","row","startsWith","name","setup","authStore","console","log","getters","isLoggedIn","csrfToken","loginUsername","loginPassword","keepLoggedInForDays","registerUsername","registerPassword","invitation","router","handleLoginSubmit","response","post","username","value","password","keep_logged_in_for_days","withCredentials","headers","dispatch","data","push","err","handleRegisterSubmit","invitation_code"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <div>\n    <h1>欢迎来到我们的网站</h1>\n    <p>请登录以继续操作。</p>\n    <!-- 登录表单 -->\n    <form @submit.prevent=\"handleLoginSubmit\">\n      <input type=\"text\" v-model=\"loginUsername\" placeholder=\"用户名\" />\n      <input type=\"password\" v-model=\"loginPassword\" placeholder=\"密码\" />\n      <select v-model=\"keepLoggedInForDays\"> \n        <option value=\"7\">保持登录7天</option>\n      </select>\n      <button type=\"submit\">登录</button>\n    </form>\n\n\n    <!-- 注册表单 -->\n    <form @submit.prevent=\"handleRegisterSubmit\" class=\"register-form\">\n        <h2>注册</h2>\n        <input type=\"text\" v-model=\"registerUsername\" placeholder=\"用户名\" />\n        <input type=\"password\" v-model=\"registerPassword\" placeholder=\"密码\" />\n        <input type=\"text\" v-model=\"invitation\" placeholder=\"邀请码\" />\n        <button type=\"submit\">注册</button>\n      </form>\n  \n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\n\n// 用于获取csrftoken的函数\nfunction getCsrfToken() {\n  return document.cookie.split('; ')\n    .find(row => row.startsWith('csrftoken'))\n    ?.split('=')[1];\n}\n\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    const authStore = useStore();\n    console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态\n    // 在组件加载时获取CSRF token\n    const csrfToken = ref(getCsrfToken());\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n    const handleLoginSubmit = async () => {\n      try{\n          const response = await axios.post('http://localhost:8005/account/login/', {\n            username: loginUsername.value,\n            password: loginPassword.value,\n            keep_logged_in_for_days: keepLoggedInForDays.value\n          },\n         {\n            withCredentials: true,\n            headers: {\n            'X-CSRFToken': csrfToken.value,\n          }\n        });\n\n          console.log(\"登录成功，用户名: \", loginUsername.value);\n          await authStore.dispatch('logIn', response.data); \n          await router.push('/dashboard');\n          }\n      catch (err) {\n          console.log(err);\n          }\n        };\n       \n\n    const handleRegisterSubmit = async () => {\n      try{\n          const response = await axios.post('http://localhost:8005/account/register/', {\n            username: registerUsername.value,\n            password: registerPassword.value,\n            invitation_code: invitation.value\n          },\n          {\n          headers: {\n            'X-CSRFToken': csrfToken.value,\n            }\n          });\n          console.log(\"注册成功，用户名: \", registerUsername.value);\n          await router.push('/login');\n          } catch (err) {\n            console.log(err);\n           }\n         };\n\n    return {\n      response,\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n      csrfToken, // 添加csrfToken到返回值中\n    };\n  },\n};\n</script>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}