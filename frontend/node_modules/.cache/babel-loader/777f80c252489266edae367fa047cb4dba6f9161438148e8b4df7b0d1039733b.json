{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useNotification, NFormItem, NFormItemRow, NForm, NButton, NInput } from 'naive-ui';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n//注册表单操作\n\nexport default {\n  __name: 'RegisterForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const router = useRouter();\n    const registeredNextPath = ref('/dashboard');\n\n    //注册方法\n    const notification = useNotification();\n    const register = async () => {\n      if (formValidated.value === true) {\n        try {\n          const response = await axios.post('/account/register/', {\n            username: modelRef.value.userName,\n            password: modelRef.value.password,\n            invitation_code: modelRef.value.invitationCode\n          }, {\n            headers: {\n              //'X-CSRFToken': csrfToken.value,\n            }\n          });\n          console.log(response);\n          if (response.status == 400 && response.data.invitation_code) {\n            notification.error({\n              content: response.data.invitation_code,\n              duration: 2500\n            });\n          }\n          await router.push(registeredNextPath.value);\n        } catch (err) {\n          console.log('注册失败:', err);\n        }\n      }\n    };\n\n    //密码验证\n\n    const formRef = ref(null);\n    const rPasswordFormItemRef = ref(null);\n\n    // 响应式表单数据\n    const modelRef = ref({\n      userName: null,\n      password: null,\n      reenteredPassword: null,\n      invitationCode: null\n    });\n\n    //表单验证,通过后进行注册\n    const formValidated = ref(false);\n    const formValidateCheck = async e => {\n      e.preventDefault();\n      formRef.value?.validate(errors => {\n        if (!errors) {\n          console.log('验证成功');\n          formValidated.value = true;\n          register();\n        } else {\n          console.log('验证失败');\n        }\n      });\n    };\n\n    //表单验证规则\n    const rules = {\n      userName: [{\n        required: true,\n        validator(rule, value) {\n          if (!value) {\n            return new Error(\"请填写用户名\");\n          } else if (value.length < 5 || value.length > 10) {\n            return new Error('字数须在5~10之间');\n          }\n          return true;\n        },\n        triggr: [\"input\", \"blur\"]\n      }],\n      password: [{\n        required: true,\n        validator(rule, value) {\n          if (value.length < 6) {\n            return new Error(\"须至少6位\");\n          }\n        },\n        message: \"请输入密码\"\n      }],\n      reenteredPassword: [{\n        required: true,\n        message: \"请再次输入密码\",\n        trigger: [\"password-input\", \"blur\"]\n      }, {\n        validator: validatePasswordSame,\n        message: \"两次密码输入不一致\",\n        trigger: [\"blur\", \"password-input\"]\n      }],\n      invitationCode: [{\n        required: true,\n        message: \"请输入邀请码\"\n      }]\n    };\n    function validatePasswordSame(rule, value) {\n      try {\n        return value === modelRef.value.password;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    const handlePasswordInput = () => {\n      if (modelRef.value.reenteredPassword) {\n        console.log(modelRef.value.reenteredPassword);\n        rPasswordFormItemRef.value?.validate({\n          trigger: \"password-input\"\n        });\n      }\n    };\n    __expose({\n      register\n    });\n    const __returned__ = {\n      router,\n      registeredNextPath,\n      notification,\n      register,\n      formRef,\n      rPasswordFormItemRef,\n      modelRef,\n      formValidated,\n      formValidateCheck,\n      rules,\n      validatePasswordSame,\n      handlePasswordInput,\n      get useNotification() {\n        return useNotification;\n      },\n      get NFormItem() {\n        return NFormItem;\n      },\n      get NFormItemRow() {\n        return NFormItemRow;\n      },\n      get NForm() {\n        return NForm;\n      },\n      get NButton() {\n        return NButton;\n      },\n      get NInput() {\n        return NInput;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useNotification","NFormItem","NFormItemRow","NForm","NButton","NInput","ref","useRouter","axios","router","registeredNextPath","notification","register","formValidated","value","response","post","username","modelRef","userName","password","invitation_code","invitationCode","headers","console","log","status","data","error","content","duration","push","err","formRef","rPasswordFormItemRef","reenteredPassword","formValidateCheck","e","preventDefault","validate","errors","rules","required","validator","rule","Error","length","triggr","message","trigger","validatePasswordSame","handlePasswordInput","__expose"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/RegisterForm.vue"],"sourcesContent":["<template>\n    <n-form ref=\"formRef\" :rules=\"rules\"  :model=\"modelRef\">\n        <n-form-item-row path=\"userName\" label=\"用户名\">\n            <n-input v-model:value=\"modelRef.userName\" minlength=\"5\" maxlength=\"10\" placeholder=\"5~10位字符\" />\n        </n-form-item-row>\n        \n        <!--\n        <n-form-item-row label=\"密码\" :feedback=\"validateInfos.password>\n            <n-input v-model:value=\"registerPassword\" maxlength=\"15\" placeholder=\"最多15位字符\"/>\n        </n-form-item-row>\n          \n        <n-form-item-row label=\"重复密码\">\n            //<n-input passively-activated @input=\"checkRePassword\" v-model:value=\"rePassword\" placeholder=\"\"/>\n            <n-input\n                v-model:value=\"rePassword\"\n                :disabled=\"!model.password\"\n                type=\"password\"\n                @keydown.enter.prevent\n                placeholder=\"\"/>\n        </n-form-item-row>\n         -->\n         \n         \n         <!--验证模块-->\n\n        <n-form-item path=\"password\" label=\"密码\">\n          <n-input\n            v-model:value=\"modelRef.password\"\n            type=\"password\"\n            @input=\"handlePasswordInput\"\n            @keydown.enter.prevent\n            minlength=\"6\"\n            placeholder=\"至少6个字符\"\n            show-password-on=\"click\"\n            />\n        </n-form-item>\n    \n        <n-form-item\n          ref=\"rPasswordFormItemRef\"\n          first\n          path=\"reenteredPassword\"\n          label=\"重复密码\">\n\n          <n-input\n            v-model:value=\"modelRef.reenteredPassword\"\n            :disabled=\"!modelRef.password\"\n            type=\"password\"\n            @keydown.enter.prevent\n            placeholder=\"\"\n            clearable/>\n        </n-form-item>\n\n\n        <n-form-item-row path=\"invitationCode\" label=\"邀请码\">\n            <n-input v-model:value=\"modelRef.invitationCode\" placeholder=\"\"/>\n        </n-form-item-row>\n        \n    </n-form>\n    <n-button @click=\"formValidateCheck\" \n      :disabled=\"modelRef.userName === null\"\n      type=\"primary\" block secondary strong>\n          注册\n    </n-button>\n\n</template>\n<script setup>\nimport {useNotification,NFormItem,NFormItemRow,NForm,NButton,NInput} from 'naive-ui';\nimport {ref,defineExpose} from 'vue';\nimport {useRouter} from 'vue-router';\nimport axios from 'axios';\n\n//注册表单操作\n\n\n\nconst router=useRouter();\nconst registeredNextPath = ref('/dashboard');\n\n//注册方法\nconst notification =useNotification()\nconst register=async()=>{\n    if(formValidated.value===true){\n    try{\n      const response = await axios.post('/account/register/',\n      {\n        username:modelRef.value.userName,\n        password:modelRef.value.password,\n        invitation_code:modelRef.value.invitationCode,\n        },\n      {\n            headers:{\n                //'X-CSRFToken': csrfToken.value,\n                }\n      });\n      console.log(response);\n      if(response.status==400 && response.data.invitation_code){\n          notification.error({\n              content:response.data.invitation_code,\n              duration:2500,\n              })}\n      await router.push(registeredNextPath.value);\n    }\n    catch(err){\n        console.log('注册失败:',err)}\n    \n }}\n\n//密码验证\n\nconst formRef = ref(null);\nconst rPasswordFormItemRef = ref(null);\n\n// 响应式表单数据\nconst modelRef = ref({\n  userName:null,\n  password: null,\n  reenteredPassword: null,\n  invitationCode:null,\n});\n\n//表单验证,通过后进行注册\nconst formValidated=ref(false);\nconst formValidateCheck = async(e)=>{\n    e.preventDefault();\n    formRef.value?.validate((errors)=>{\n        if(!errors){\n            console.log('验证成功');\n            formValidated.value=true;\n            register();\n            }else{\n                console.log('验证失败');\n                }\n            });\n    };\n\n//表单验证规则\nconst rules = {\n  userName:[\n    {\n        required:true,\n        validator(rule,value){\n            if(!value){\n                return new Error(\"请填写用户名\");\n                }else if (value.length<5 || value.length>10){\n                    return new Error('字数须在5~10之间')}\n                    return true;\n            },\n            triggr:[\"input\",\"blur\"]\n        }\n  ],\n  password: [\n    {\n      required: true,\n      validator(rule,value){\n          if(value.length<6){\n              return new Error(\"须至少6位\")}\n          },\n      message: \"请输入密码\",\n    },\n  ],\n  reenteredPassword: [\n    {\n      required: true,\n      message: \"请再次输入密码\",\n      trigger: [\"password-input\", \"blur\"]\n    },\n    \n    {\n      validator: validatePasswordSame,\n      message: \"两次密码输入不一致\",\n      trigger: [\"blur\", \"password-input\"]\n    }\n  ],\n  invitationCode:[\n    {\n        required:true,\n        message:\"请输入邀请码\",\n        }\n  ]\n};\n\n\nfunction validatePasswordSame(rule, value) {\n  try{\n  return value === modelRef.value.password;\n  }catch(error){\n      console.error(error)} \n  \n  }\n\nconst handlePasswordInput=()=> {\n  if(modelRef.value.reenteredPassword){\n    console.log(modelRef.value.reenteredPassword);\n    rPasswordFormItemRef.value?.validate({ trigger: \"password-input\" });\n}}\n\n\ndefineExpose({register});\n</script>\n\n<style>\n.n-input{\n    text-align:left}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}