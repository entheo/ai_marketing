{"ast":null,"code":"import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from \"../styles/index.mjs\";\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { call, createKey, useAdjustedTo } from \"../../_utils/index.mjs\";\nimport { NButton } from \"../../button/index.mjs\";\nimport HueSlider from \"./HueSlider.mjs\";\nimport AlphaSlider from \"./AlphaSlider.mjs\";\nimport Pallete from \"./Pallete.mjs\";\nimport ColorInput from \"./ColorInput.mjs\";\nimport ColorPickerTrigger from \"./ColorPickerTrigger.mjs\";\nimport { deriveDefaultValue, getModeFromValue } from \"./utils.mjs\";\nimport ColorPickerSwatches from \"./ColorPickerSwatches.mjs\";\nimport ColorPreview from \"./ColorPreview.mjs\";\nimport { colorPickerInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  defaultShow: Boolean,\n  defaultValue: String,\n  modes: {\n    type: Array,\n    // no hsva by default since browser doesn't support it\n    default: () => ['rgb', 'hex', 'hsl']\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  to: useAdjustedTo.propTo,\n  showAlpha: {\n    type: Boolean,\n    default: true\n  },\n  showPreview: Boolean,\n  swatches: Array,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: {\n    type: Array,\n    default: null\n  },\n  internalActions: Array,\n  size: String,\n  renderLabel: Function,\n  onComplete: Function,\n  onConfirm: Function,\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'ColorPicker',\n  props: colorPickerProps,\n  setup(props, {\n    slots\n  }) {\n    const selfRef = ref(null);\n    let upcomingValue = null;\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const {\n      localeRef\n    } = useLocale('global');\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n    provide(colorPickerInjectionKey, {\n      themeRef,\n      renderLabelRef: toRef(props, 'renderLabel'),\n      colorPickerSlots: slots\n    });\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    const {\n      defaultValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultValue === undefined ? deriveDefaultValue(props.modes, props.showAlpha) : defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const undoStackRef = ref([mergedValueRef.value]);\n    const valueIndexRef = ref(0);\n    const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n    const {\n      modes\n    } = props;\n    const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n    function handleUpdateDisplayedMode() {\n      const {\n        modes\n      } = props;\n      const {\n        value: displayedMode\n      } = displayedModeRef;\n      const currentModeIndex = modes.findIndex(mode => mode === displayedMode);\n      if (~currentModeIndex) {\n        displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n      } else {\n        displayedModeRef.value = 'rgb';\n      }\n    }\n    let _h,\n      // avoid conflict with render function's h\n      s, l, v, r, g, b, a;\n    const hsvaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsv':\n          return hsva(mergedValue);\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2hsv(_h, s, l), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsv(r, g, b), a];\n      }\n    });\n    const rgbaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgba(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2rgb(_h, s, v), a];\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2rgb(_h, s, l), a];\n      }\n    });\n    const hslaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsl':\n          return hsla(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2hsl(_h, s, v), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsl(r, g, b), a];\n      }\n    });\n    const mergedValueArrRef = computed(() => {\n      switch (displayedModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgbaRef.value;\n        case 'hsv':\n          return hsvaRef.value;\n        case 'hsl':\n          return hslaRef.value;\n      }\n    });\n    const displayedHueRef = ref(0);\n    const displayedAlphaRef = ref(1);\n    const displayedSvRef = ref([0, 0]);\n    function handleUpdateSv(s, v) {\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      const hue = displayedHueRef.value;\n      const alpha = hsvaArr ? hsvaArr[3] : 1;\n      displayedSvRef.value = [s, v];\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateHue(hue) {\n      displayedHueRef.value = hue;\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      if (!hsvaArr) {\n        return;\n      }\n      const [, s, v, a] = hsvaArr;\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), a]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateAlpha(alpha) {\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, v] = hsvaRef.value;\n          doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n          break;\n        case 'rgb':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hex':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, l] = hslaRef.value;\n          doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n          break;\n      }\n      displayedAlphaRef.value = alpha;\n    }\n    function doUpdateValue(value, updateSource) {\n      if (updateSource === 'cursor') {\n        upcomingValue = value;\n      } else {\n        upcomingValue = null;\n      }\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      nTriggerFormChange();\n      nTriggerFormInput();\n      uncontrolledValueRef.value = value;\n    }\n    function handleInputUpdateValue(value) {\n      doUpdateValue(value, 'input');\n      void nextTick(handleComplete);\n    }\n    function handleComplete(pushStack = true) {\n      const {\n        value\n      } = mergedValueRef;\n      // no value & only hue changes will complete with no value\n      if (value) {\n        const {\n          nTriggerFormChange,\n          nTriggerFormInput\n        } = formItem;\n        const {\n          onComplete\n        } = props;\n        if (onComplete) {\n          ;\n          onComplete(value);\n        }\n        const {\n          value: undoStack\n        } = undoStackRef;\n        const {\n          value: valueIndex\n        } = valueIndexRef;\n        if (pushStack) {\n          undoStack.splice(valueIndex + 1, undoStack.length, value);\n          valueIndexRef.value = valueIndex + 1;\n        }\n        nTriggerFormChange();\n        nTriggerFormInput();\n      }\n    }\n    function undo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex - 1 < 0) return;\n      doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex - 1;\n    }\n    function redo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length) return;\n      doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex + 1;\n    }\n    function handleClear() {\n      doUpdateValue(null, 'input');\n      doUpdateShow(false);\n    }\n    function handleConfirm() {\n      const {\n        value\n      } = mergedValueRef;\n      const {\n        onConfirm\n      } = props;\n      if (onConfirm) {\n        ;\n        onConfirm(value);\n      }\n      doUpdateShow(false);\n    }\n    const undoableRef = computed(() => valueIndexRef.value >= 1);\n    const redoableRef = computed(() => {\n      const {\n        value: undoStack\n      } = undoStackRef;\n      return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n    });\n    watch(mergedShowRef, value => {\n      if (!value) {\n        undoStackRef.value = [mergedValueRef.value];\n        valueIndexRef.value = 0;\n      }\n    });\n    watchEffect(() => {\n      if (upcomingValue && upcomingValue === mergedValueRef.value) {\n        // let it works in uncontrolled mode\n      } else {\n        const {\n          value\n        } = hsvaRef;\n        if (value) {\n          displayedHueRef.value = value[0];\n          displayedAlphaRef.value = value[3];\n          displayedSvRef.value = [value[1], value[2]];\n        }\n      }\n      upcomingValue = null;\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          textColor,\n          color,\n          panelFontSize,\n          boxShadow,\n          border,\n          borderRadius,\n          dividerColor,\n          [createKey('height', mergedSize)]: height,\n          [createKey('fontSize', mergedSize)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-color': color,\n        '--n-panel-font-size': panelFontSize,\n        '--n-font-size': fontSize,\n        '--n-box-shadow': boxShadow,\n        '--n-border': border,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-divider-color': dividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('color-picker', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n    function renderPanel() {\n      var _a;\n      const {\n        value: rgba\n      } = rgbaRef;\n      const {\n        value: displayedHue\n      } = displayedHueRef;\n      const {\n        internalActions,\n        modes,\n        actions\n      } = props;\n      const {\n        value: mergedTheme\n      } = themeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-color-picker-panel`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        onDragstart: e => {\n          e.preventDefault();\n        },\n        style: inlineThemeDisabled ? undefined : cssVarsRef.value\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-control`\n      }, h(Pallete, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        displayedHue: displayedHue,\n        displayedSv: displayedSvRef.value,\n        onUpdateSV: handleUpdateSv,\n        onComplete: handleComplete\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview__sliders`\n      }, h(HueSlider, {\n        clsPrefix: mergedClsPrefix,\n        hue: displayedHue,\n        onUpdateHue: handleUpdateHue,\n        onComplete: handleComplete\n      }), props.showAlpha ? h(AlphaSlider, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        alpha: displayedAlphaRef.value,\n        onUpdateAlpha: handleUpdateAlpha,\n        onComplete: handleComplete\n      }) : null), props.showPreview ? h(ColorPreview, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        color: rgbaRef.value && toHexString(rgbaRef.value),\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      }) : null), h(ColorInput, {\n        clsPrefix: mergedClsPrefix,\n        showAlpha: props.showAlpha,\n        mode: displayedModeRef.value,\n        modes: modes,\n        onUpdateMode: handleUpdateDisplayedMode,\n        value: mergedValueRef.value,\n        valueArr: mergedValueArrRef.value,\n        onUpdateValue: handleInputUpdateValue\n      }), ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && h(ColorPickerSwatches, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        swatches: props.swatches,\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      })), (actions === null || actions === void 0 ? void 0 : actions.length) ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, actions.includes('confirm') && h(NButton, {\n        size: \"small\",\n        onClick: handleConfirm,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.confirm\n      }), actions.includes('clear') && h(NButton, {\n        size: \"small\",\n        onClick: handleClear,\n        disabled: !mergedValueRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.clear\n      })) : null, slots.action ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, {\n        default: slots.action\n      }) : internalActions ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, internalActions.includes('undo') && h(NButton, {\n        size: \"small\",\n        onClick: undo,\n        disabled: !undoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.undo\n      }), internalActions.includes('redo') && h(NButton, {\n        size: \"small\",\n        onClick: redo,\n        disabled: !redoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.redo\n      })) : null);\n    }\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      selfRef,\n      hsla: hslaRef,\n      rgba: rgbaRef,\n      mergedShow: mergedShowRef,\n      mergedDisabled: mergedDisabledRef,\n      isMounted: useIsMounted(),\n      adjustedTo: useAdjustedTo(props),\n      mergedValue: mergedValueRef,\n      handleTriggerClick() {\n        doUpdateShow(true);\n      },\n      handleClickOutside(e) {\n        var _a;\n        if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n          return;\n        }\n        doUpdateShow(false);\n      },\n      renderPanel,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [this.themeClass, `${mergedClsPrefix}-color-picker`],\n      ref: \"selfRef\",\n      style: this.cssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(ColorPickerTrigger, {\n          clsPrefix: mergedClsPrefix,\n          value: this.mergedValue,\n          hsla: this.hsla,\n          disabled: this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, {\n          label: $slots.label\n        })\n      }), h(VFollower, {\n        placement: this.placement,\n        show: this.mergedShow,\n        containerClass: this.namespace,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => this.mergedShow ? withDirectives(this.renderPanel(), [[clickoutside, this.handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","computed","toRef","watchEffect","withDirectives","Transition","provide","watch","nextTick","hsv2rgb","rgb2hsv","rgba","hsva","hsla","hsl2hsv","hsv2hsl","rgb2hsl","hsl2rgb","toRgbaString","toHsvaString","toHslaString","toHexaString","toHsvString","toRgbString","toHexString","toHslString","getPreciseEventTarget","useIsMounted","useMergedState","VBinder","VFollower","VTarget","clickoutside","colorPickerLight","useFormItem","useConfig","useTheme","useLocale","useThemeClass","call","createKey","useAdjustedTo","NButton","HueSlider","AlphaSlider","Pallete","ColorInput","ColorPickerTrigger","deriveDefaultValue","getModeFromValue","ColorPickerSwatches","ColorPreview","colorPickerInjectionKey","style","colorPickerProps","Object","assign","props","value","String","show","type","Boolean","default","undefined","defaultShow","defaultValue","modes","Array","placement","to","propTo","showAlpha","showPreview","swatches","disabled","actions","internalActions","size","renderLabel","Function","onComplete","onConfirm","onUpdateShow","onUpdateValue","name","setup","slots","selfRef","upcomingValue","formItem","mergedSizeRef","mergedDisabledRef","localeRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","renderLabelRef","colorPickerSlots","uncontrolledShowRef","mergedShowRef","doUpdateShow","_onUpdateShow","uncontrolledValueRef","mergedValueRef","undoStackRef","valueIndexRef","valueModeRef","displayedModeRef","handleUpdateDisplayedMode","displayedMode","currentModeIndex","findIndex","mode","length","_h","s","l","v","r","g","b","a","hsvaRef","mergedValue","rgbaRef","hslaRef","mergedValueArrRef","displayedHueRef","displayedAlphaRef","displayedSvRef","handleUpdateSv","hsvaArr","hue","alpha","doUpdateValue","handleUpdateHue","handleUpdateAlpha","updateSource","nTriggerFormChange","nTriggerFormInput","_onUpdateValue","handleInputUpdateValue","handleComplete","pushStack","undoStack","valueIndex","splice","undo","redo","handleClear","handleConfirm","undoableRef","redoableRef","cssVarsRef","mergedSize","common","cubicBezierEaseInOut","self","textColor","color","panelFontSize","boxShadow","border","borderRadius","dividerColor","height","fontSize","themeClassHandle","renderPanel","_a","displayedHue","mergedTheme","mergedClsPrefix","class","themeClass","onDragstart","e","preventDefault","clsPrefix","displayedSv","onUpdateSV","onUpdateHue","onUpdateAlpha","onUpdateColor","onUpdateMode","valueArr","includes","onClick","theme","peers","Button","themeOverrides","peerOverrides","confirm","clear","action","namespace","mergedShow","mergedDisabled","isMounted","adjustedTo","handleTriggerClick","handleClickOutside","contains","cssVars","onRender","render","$slots","label","containerClass","teleportDisabled","tdkey","appear","capture"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/color-picker/src/ColorPicker.mjs"],"sourcesContent":["import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from \"../styles/index.mjs\";\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { call, createKey, useAdjustedTo } from \"../../_utils/index.mjs\";\nimport { NButton } from \"../../button/index.mjs\";\nimport HueSlider from \"./HueSlider.mjs\";\nimport AlphaSlider from \"./AlphaSlider.mjs\";\nimport Pallete from \"./Pallete.mjs\";\nimport ColorInput from \"./ColorInput.mjs\";\nimport ColorPickerTrigger from \"./ColorPickerTrigger.mjs\";\nimport { deriveDefaultValue, getModeFromValue } from \"./utils.mjs\";\nimport ColorPickerSwatches from \"./ColorPickerSwatches.mjs\";\nimport ColorPreview from \"./ColorPreview.mjs\";\nimport { colorPickerInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  defaultShow: Boolean,\n  defaultValue: String,\n  modes: {\n    type: Array,\n    // no hsva by default since browser doesn't support it\n    default: () => ['rgb', 'hex', 'hsl']\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  to: useAdjustedTo.propTo,\n  showAlpha: {\n    type: Boolean,\n    default: true\n  },\n  showPreview: Boolean,\n  swatches: Array,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: {\n    type: Array,\n    default: null\n  },\n  internalActions: Array,\n  size: String,\n  renderLabel: Function,\n  onComplete: Function,\n  onConfirm: Function,\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'ColorPicker',\n  props: colorPickerProps,\n  setup(props, {\n    slots\n  }) {\n    const selfRef = ref(null);\n    let upcomingValue = null;\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const {\n      localeRef\n    } = useLocale('global');\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n    provide(colorPickerInjectionKey, {\n      themeRef,\n      renderLabelRef: toRef(props, 'renderLabel'),\n      colorPickerSlots: slots\n    });\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    const {\n      defaultValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultValue === undefined ? deriveDefaultValue(props.modes, props.showAlpha) : defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const undoStackRef = ref([mergedValueRef.value]);\n    const valueIndexRef = ref(0);\n    const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n    const {\n      modes\n    } = props;\n    const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n    function handleUpdateDisplayedMode() {\n      const {\n        modes\n      } = props;\n      const {\n        value: displayedMode\n      } = displayedModeRef;\n      const currentModeIndex = modes.findIndex(mode => mode === displayedMode);\n      if (~currentModeIndex) {\n        displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n      } else {\n        displayedModeRef.value = 'rgb';\n      }\n    }\n    let _h,\n      // avoid conflict with render function's h\n      s, l, v, r, g, b, a;\n    const hsvaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsv':\n          return hsva(mergedValue);\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2hsv(_h, s, l), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsv(r, g, b), a];\n      }\n    });\n    const rgbaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgba(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2rgb(_h, s, v), a];\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2rgb(_h, s, l), a];\n      }\n    });\n    const hslaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsl':\n          return hsla(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2hsl(_h, s, v), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsl(r, g, b), a];\n      }\n    });\n    const mergedValueArrRef = computed(() => {\n      switch (displayedModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgbaRef.value;\n        case 'hsv':\n          return hsvaRef.value;\n        case 'hsl':\n          return hslaRef.value;\n      }\n    });\n    const displayedHueRef = ref(0);\n    const displayedAlphaRef = ref(1);\n    const displayedSvRef = ref([0, 0]);\n    function handleUpdateSv(s, v) {\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      const hue = displayedHueRef.value;\n      const alpha = hsvaArr ? hsvaArr[3] : 1;\n      displayedSvRef.value = [s, v];\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateHue(hue) {\n      displayedHueRef.value = hue;\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      if (!hsvaArr) {\n        return;\n      }\n      const [, s, v, a] = hsvaArr;\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), a]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateAlpha(alpha) {\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, v] = hsvaRef.value;\n          doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n          break;\n        case 'rgb':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hex':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, l] = hslaRef.value;\n          doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n          break;\n      }\n      displayedAlphaRef.value = alpha;\n    }\n    function doUpdateValue(value, updateSource) {\n      if (updateSource === 'cursor') {\n        upcomingValue = value;\n      } else {\n        upcomingValue = null;\n      }\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      nTriggerFormChange();\n      nTriggerFormInput();\n      uncontrolledValueRef.value = value;\n    }\n    function handleInputUpdateValue(value) {\n      doUpdateValue(value, 'input');\n      void nextTick(handleComplete);\n    }\n    function handleComplete(pushStack = true) {\n      const {\n        value\n      } = mergedValueRef;\n      // no value & only hue changes will complete with no value\n      if (value) {\n        const {\n          nTriggerFormChange,\n          nTriggerFormInput\n        } = formItem;\n        const {\n          onComplete\n        } = props;\n        if (onComplete) {\n          ;\n          onComplete(value);\n        }\n        const {\n          value: undoStack\n        } = undoStackRef;\n        const {\n          value: valueIndex\n        } = valueIndexRef;\n        if (pushStack) {\n          undoStack.splice(valueIndex + 1, undoStack.length, value);\n          valueIndexRef.value = valueIndex + 1;\n        }\n        nTriggerFormChange();\n        nTriggerFormInput();\n      }\n    }\n    function undo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex - 1 < 0) return;\n      doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex - 1;\n    }\n    function redo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length) return;\n      doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex + 1;\n    }\n    function handleClear() {\n      doUpdateValue(null, 'input');\n      doUpdateShow(false);\n    }\n    function handleConfirm() {\n      const {\n        value\n      } = mergedValueRef;\n      const {\n        onConfirm\n      } = props;\n      if (onConfirm) {\n        ;\n        onConfirm(value);\n      }\n      doUpdateShow(false);\n    }\n    const undoableRef = computed(() => valueIndexRef.value >= 1);\n    const redoableRef = computed(() => {\n      const {\n        value: undoStack\n      } = undoStackRef;\n      return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n    });\n    watch(mergedShowRef, value => {\n      if (!value) {\n        undoStackRef.value = [mergedValueRef.value];\n        valueIndexRef.value = 0;\n      }\n    });\n    watchEffect(() => {\n      if (upcomingValue && upcomingValue === mergedValueRef.value) {\n        // let it works in uncontrolled mode\n      } else {\n        const {\n          value\n        } = hsvaRef;\n        if (value) {\n          displayedHueRef.value = value[0];\n          displayedAlphaRef.value = value[3];\n          displayedSvRef.value = [value[1], value[2]];\n        }\n      }\n      upcomingValue = null;\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          textColor,\n          color,\n          panelFontSize,\n          boxShadow,\n          border,\n          borderRadius,\n          dividerColor,\n          [createKey('height', mergedSize)]: height,\n          [createKey('fontSize', mergedSize)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-color': color,\n        '--n-panel-font-size': panelFontSize,\n        '--n-font-size': fontSize,\n        '--n-box-shadow': boxShadow,\n        '--n-border': border,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-divider-color': dividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('color-picker', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n    function renderPanel() {\n      var _a;\n      const {\n        value: rgba\n      } = rgbaRef;\n      const {\n        value: displayedHue\n      } = displayedHueRef;\n      const {\n        internalActions,\n        modes,\n        actions\n      } = props;\n      const {\n        value: mergedTheme\n      } = themeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-color-picker-panel`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        onDragstart: e => {\n          e.preventDefault();\n        },\n        style: inlineThemeDisabled ? undefined : cssVarsRef.value\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-control`\n      }, h(Pallete, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        displayedHue: displayedHue,\n        displayedSv: displayedSvRef.value,\n        onUpdateSV: handleUpdateSv,\n        onComplete: handleComplete\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview__sliders`\n      }, h(HueSlider, {\n        clsPrefix: mergedClsPrefix,\n        hue: displayedHue,\n        onUpdateHue: handleUpdateHue,\n        onComplete: handleComplete\n      }), props.showAlpha ? h(AlphaSlider, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        alpha: displayedAlphaRef.value,\n        onUpdateAlpha: handleUpdateAlpha,\n        onComplete: handleComplete\n      }) : null), props.showPreview ? h(ColorPreview, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        color: rgbaRef.value && toHexString(rgbaRef.value),\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      }) : null), h(ColorInput, {\n        clsPrefix: mergedClsPrefix,\n        showAlpha: props.showAlpha,\n        mode: displayedModeRef.value,\n        modes: modes,\n        onUpdateMode: handleUpdateDisplayedMode,\n        value: mergedValueRef.value,\n        valueArr: mergedValueArrRef.value,\n        onUpdateValue: handleInputUpdateValue\n      }), ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && h(ColorPickerSwatches, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        swatches: props.swatches,\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      })), (actions === null || actions === void 0 ? void 0 : actions.length) ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, actions.includes('confirm') && h(NButton, {\n        size: \"small\",\n        onClick: handleConfirm,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.confirm\n      }), actions.includes('clear') && h(NButton, {\n        size: \"small\",\n        onClick: handleClear,\n        disabled: !mergedValueRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.clear\n      })) : null, slots.action ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, {\n        default: slots.action\n      }) : internalActions ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, internalActions.includes('undo') && h(NButton, {\n        size: \"small\",\n        onClick: undo,\n        disabled: !undoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.undo\n      }), internalActions.includes('redo') && h(NButton, {\n        size: \"small\",\n        onClick: redo,\n        disabled: !redoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.redo\n      })) : null);\n    }\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      selfRef,\n      hsla: hslaRef,\n      rgba: rgbaRef,\n      mergedShow: mergedShowRef,\n      mergedDisabled: mergedDisabledRef,\n      isMounted: useIsMounted(),\n      adjustedTo: useAdjustedTo(props),\n      mergedValue: mergedValueRef,\n      handleTriggerClick() {\n        doUpdateShow(true);\n      },\n      handleClickOutside(e) {\n        var _a;\n        if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n          return;\n        }\n        doUpdateShow(false);\n      },\n      renderPanel,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [this.themeClass, `${mergedClsPrefix}-color-picker`],\n      ref: \"selfRef\",\n      style: this.cssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(ColorPickerTrigger, {\n          clsPrefix: mergedClsPrefix,\n          value: this.mergedValue,\n          hsla: this.hsla,\n          disabled: this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, {\n          label: $slots.label\n        })\n      }), h(VFollower, {\n        placement: this.placement,\n        show: this.mergedShow,\n        containerClass: this.namespace,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => this.mergedShow ? withDirectives(this.renderPanel(), [[clickoutside, this.handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}