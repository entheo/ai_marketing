{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, defineComponent, h, nextTick, onBeforeUnmount, onMounted, provide, ref, toRef, watch } from 'vue';\nimport { throttle } from 'lodash-es';\nimport { unwrapElement } from 'seemly';\nimport { onFontsReady } from 'vooks';\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { keysOf } from \"../../_utils/index.mjs\";\nimport { anchorInjectionKey } from \"./Link.mjs\";\nimport { getOffset } from \"./utils.mjs\";\nexport const baseAnchorProps = {\n  type: {\n    type: String,\n    default: 'rail'\n  },\n  showRail: {\n    type: Boolean,\n    default: true\n  },\n  showBackground: {\n    type: Boolean,\n    default: true\n  },\n  bound: {\n    type: Number,\n    default: 12\n  },\n  internalScrollable: Boolean,\n  ignoreGap: Boolean,\n  offsetTarget: [String, Object, Function]\n};\nexport const baseAnchorPropKeys = keysOf(baseAnchorProps);\nexport default defineComponent({\n  name: 'BaseAnchor',\n  props: Object.assign(Object.assign({}, baseAnchorProps), {\n    mergedClsPrefix: {\n      type: String,\n      required: true\n    }\n  }),\n  setup(props) {\n    const collectedLinkHrefs = [];\n    const titleEls = [];\n    const activeHrefRef = ref(null);\n    const slotRef = ref(null);\n    const barRef = ref(null);\n    const selfRef = ref(null);\n    const isBlockTypeRef = computed(() => {\n      return props.type === 'block';\n    });\n    const mergedShowRailRef = computed(() => {\n      return !isBlockTypeRef.value && props.showRail;\n    });\n    function disableTransitionOneTick() {\n      const {\n        value: barEl\n      } = barRef;\n      const {\n        value: slotEl\n      } = slotRef;\n      if (barEl) {\n        barEl.style.transition = 'none';\n      }\n      if (slotEl) {\n        slotEl.style.transition = 'none';\n      }\n      if (titleEls) {\n        titleEls.forEach(titleEl => {\n          titleEl.style.transition = 'none';\n        });\n      }\n      void nextTick(() => {\n        const {\n          value: nextBarEl\n        } = barRef;\n        const {\n          value: nextSlotEl\n        } = slotRef;\n        if (nextBarEl) {\n          void nextBarEl.offsetWidth;\n          nextBarEl.style.transition = '';\n        }\n        if (nextSlotEl) {\n          void nextSlotEl.offsetWidth;\n          nextSlotEl.style.transition = '';\n        }\n        if (titleEls) {\n          titleEls.forEach(titleEl => {\n            void titleEl.offsetWidth;\n            titleEl.style.transition = '';\n          });\n        }\n      });\n    }\n    function updateBarPosition(linkTitleEl, transition = true) {\n      const {\n        value: barEl\n      } = barRef;\n      const {\n        value: slotEl\n      } = slotRef;\n      const {\n        value: selfEl\n      } = selfRef;\n      if (!selfEl || !barEl) return;\n      if (!transition) {\n        barEl.style.transition = 'none';\n        if (slotEl) slotEl.style.transition = 'none';\n      }\n      const {\n        offsetHeight,\n        offsetWidth\n      } = linkTitleEl;\n      const {\n        top: linkTitleClientTop,\n        left: linkTitleClientLeft\n      } = linkTitleEl.getBoundingClientRect();\n      const {\n        top: anchorClientTop,\n        left: anchorClientLeft\n      } = selfEl.getBoundingClientRect();\n      const offsetTop = linkTitleClientTop - anchorClientTop;\n      const offsetLeft = linkTitleClientLeft - anchorClientLeft;\n      barEl.style.top = `${offsetTop}px`;\n      barEl.style.height = `${offsetHeight}px`;\n      if (slotEl) {\n        slotEl.style.top = `${offsetTop}px`;\n        slotEl.style.height = `${offsetHeight}px`;\n        slotEl.style.maxWidth = `${offsetWidth + offsetLeft}px`;\n      }\n      void barEl.offsetHeight;\n      if (slotEl) void slotEl.offsetHeight;\n      if (!transition) {\n        barEl.style.transition = '';\n        if (slotEl) slotEl.style.transition = '';\n      }\n    }\n    function setActiveHref(href, transition = true) {\n      const idMatchResult = /^#([^#]+)$/.exec(href);\n      if (!idMatchResult) return;\n      const linkEl = document.getElementById(idMatchResult[1]);\n      if (!linkEl) return;\n      activeHrefRef.value = href;\n      linkEl.scrollIntoView();\n      if (!transition) {\n        disableTransitionOneTick();\n      }\n      handleScroll();\n    }\n    const handleScroll = throttle(() => {\n      _handleScroll(true);\n    }, 128);\n    function _handleScroll(transition = true) {\n      var _a;\n      const links = [];\n      const offsetTarget = unwrapElement((_a = props.offsetTarget) !== null && _a !== void 0 ? _a : document);\n      collectedLinkHrefs.forEach(href => {\n        const idMatchResult = /#([^#]+)$/.exec(href);\n        if (!idMatchResult) return;\n        const linkEl = document.getElementById(idMatchResult[1]);\n        if (linkEl && offsetTarget) {\n          const {\n            top,\n            height\n          } = getOffset(linkEl, offsetTarget);\n          links.push({\n            top,\n            height,\n            href\n          });\n        }\n      });\n      links.sort((a, b) => {\n        // ascend top\n        if (a.top > b.top) {\n          return 1;\n          // descend height\n        } else if (a.top === b.top && a.height < b.height) {\n          return -1;\n        }\n        return -1;\n      });\n      const currentActiveHref = activeHrefRef.value;\n      const {\n        bound,\n        ignoreGap\n      } = props;\n      const activeLink = links.reduce((prevLink, link) => {\n        if (link.top + link.height < 0) {\n          if (ignoreGap) {\n            return link;\n          } else {\n            return prevLink;\n          }\n        }\n        if (link.top <= bound) {\n          if (prevLink === null) {\n            return link;\n          } else if (link.top === prevLink.top) {\n            if (link.href === currentActiveHref) {\n              return link;\n            } else return prevLink;\n          } else if (link.top > prevLink.top) {\n            return link;\n          } else {\n            return prevLink;\n          }\n        }\n        return prevLink;\n      }, null);\n      if (!transition) disableTransitionOneTick();\n      if (activeLink) {\n        activeHrefRef.value = activeLink.href;\n      } else {\n        activeHrefRef.value = null;\n      }\n    }\n    provide(anchorInjectionKey, {\n      activeHref: activeHrefRef,\n      mergedClsPrefix: toRef(props, 'mergedClsPrefix'),\n      updateBarPosition,\n      setActiveHref,\n      collectedLinkHrefs,\n      titleEls\n    });\n    onMounted(() => {\n      document.addEventListener('scroll', handleScroll, true);\n      setActiveHref(window.location.hash);\n      _handleScroll(false);\n    });\n    onFontsReady(() => {\n      setActiveHref(window.location.hash);\n      _handleScroll(false);\n    });\n    onBeforeUnmount(() => {\n      document.removeEventListener('scroll', handleScroll, true);\n    });\n    watch(activeHrefRef, value => {\n      if (value === null) {\n        const {\n          value: slotEl\n        } = slotRef;\n        if (slotEl && !isBlockTypeRef.value) {\n          slotEl.style.maxWidth = '0';\n        }\n      }\n    });\n    return {\n      selfRef,\n      barRef,\n      slotRef,\n      setActiveHref,\n      activeHref: activeHrefRef,\n      isBlockType: isBlockTypeRef,\n      mergedShowRail: mergedShowRailRef\n    };\n  },\n  render() {\n    var _a;\n    const {\n      mergedClsPrefix,\n      mergedShowRail,\n      isBlockType,\n      $slots\n    } = this;\n    const Anchor = h(\"div\", {\n      class: [`${mergedClsPrefix}-anchor`, isBlockType && `${mergedClsPrefix}-anchor--block`, mergedShowRail && `${mergedClsPrefix}-anchor--show-rail`],\n      ref: \"selfRef\"\n    }, mergedShowRail && this.showBackground ? h(\"div\", {\n      ref: \"slotRef\",\n      class: `${mergedClsPrefix}-anchor-link-background`\n    }) : null, mergedShowRail ? h(\"div\", {\n      class: `${mergedClsPrefix}-anchor-rail`\n    }, h(\"div\", {\n      ref: \"barRef\",\n      class: [`${mergedClsPrefix}-anchor-rail__bar`, this.activeHref !== null && `${mergedClsPrefix}-anchor-rail__bar--active`]\n    })) : null, (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots));\n    return this.internalScrollable ? h(NScrollbar, null, {\n      default: () => Anchor\n    }) : Anchor;\n  }\n});","map":{"version":3,"names":["computed","defineComponent","h","nextTick","onBeforeUnmount","onMounted","provide","ref","toRef","watch","throttle","unwrapElement","onFontsReady","NScrollbar","keysOf","anchorInjectionKey","getOffset","baseAnchorProps","type","String","default","showRail","Boolean","showBackground","bound","Number","internalScrollable","ignoreGap","offsetTarget","Object","Function","baseAnchorPropKeys","name","props","assign","mergedClsPrefix","required","setup","collectedLinkHrefs","titleEls","activeHrefRef","slotRef","barRef","selfRef","isBlockTypeRef","mergedShowRailRef","value","disableTransitionOneTick","barEl","slotEl","style","transition","forEach","titleEl","nextBarEl","nextSlotEl","offsetWidth","updateBarPosition","linkTitleEl","selfEl","offsetHeight","top","linkTitleClientTop","left","linkTitleClientLeft","getBoundingClientRect","anchorClientTop","anchorClientLeft","offsetTop","offsetLeft","height","maxWidth","setActiveHref","href","idMatchResult","exec","linkEl","document","getElementById","scrollIntoView","handleScroll","_handleScroll","_a","links","push","sort","a","b","currentActiveHref","activeLink","reduce","prevLink","link","activeHref","addEventListener","window","location","hash","removeEventListener","isBlockType","mergedShowRail","render","$slots","Anchor","class","call"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/anchor/src/BaseAnchor.mjs"],"sourcesContent":["import { computed, defineComponent, h, nextTick, onBeforeUnmount, onMounted, provide, ref, toRef, watch } from 'vue';\nimport { throttle } from 'lodash-es';\nimport { unwrapElement } from 'seemly';\nimport { onFontsReady } from 'vooks';\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { keysOf } from \"../../_utils/index.mjs\";\nimport { anchorInjectionKey } from \"./Link.mjs\";\nimport { getOffset } from \"./utils.mjs\";\nexport const baseAnchorProps = {\n  type: {\n    type: String,\n    default: 'rail'\n  },\n  showRail: {\n    type: Boolean,\n    default: true\n  },\n  showBackground: {\n    type: Boolean,\n    default: true\n  },\n  bound: {\n    type: Number,\n    default: 12\n  },\n  internalScrollable: Boolean,\n  ignoreGap: Boolean,\n  offsetTarget: [String, Object, Function]\n};\nexport const baseAnchorPropKeys = keysOf(baseAnchorProps);\nexport default defineComponent({\n  name: 'BaseAnchor',\n  props: Object.assign(Object.assign({}, baseAnchorProps), {\n    mergedClsPrefix: {\n      type: String,\n      required: true\n    }\n  }),\n  setup(props) {\n    const collectedLinkHrefs = [];\n    const titleEls = [];\n    const activeHrefRef = ref(null);\n    const slotRef = ref(null);\n    const barRef = ref(null);\n    const selfRef = ref(null);\n    const isBlockTypeRef = computed(() => {\n      return props.type === 'block';\n    });\n    const mergedShowRailRef = computed(() => {\n      return !isBlockTypeRef.value && props.showRail;\n    });\n    function disableTransitionOneTick() {\n      const {\n        value: barEl\n      } = barRef;\n      const {\n        value: slotEl\n      } = slotRef;\n      if (barEl) {\n        barEl.style.transition = 'none';\n      }\n      if (slotEl) {\n        slotEl.style.transition = 'none';\n      }\n      if (titleEls) {\n        titleEls.forEach(titleEl => {\n          titleEl.style.transition = 'none';\n        });\n      }\n      void nextTick(() => {\n        const {\n          value: nextBarEl\n        } = barRef;\n        const {\n          value: nextSlotEl\n        } = slotRef;\n        if (nextBarEl) {\n          void nextBarEl.offsetWidth;\n          nextBarEl.style.transition = '';\n        }\n        if (nextSlotEl) {\n          void nextSlotEl.offsetWidth;\n          nextSlotEl.style.transition = '';\n        }\n        if (titleEls) {\n          titleEls.forEach(titleEl => {\n            void titleEl.offsetWidth;\n            titleEl.style.transition = '';\n          });\n        }\n      });\n    }\n    function updateBarPosition(linkTitleEl, transition = true) {\n      const {\n        value: barEl\n      } = barRef;\n      const {\n        value: slotEl\n      } = slotRef;\n      const {\n        value: selfEl\n      } = selfRef;\n      if (!selfEl || !barEl) return;\n      if (!transition) {\n        barEl.style.transition = 'none';\n        if (slotEl) slotEl.style.transition = 'none';\n      }\n      const {\n        offsetHeight,\n        offsetWidth\n      } = linkTitleEl;\n      const {\n        top: linkTitleClientTop,\n        left: linkTitleClientLeft\n      } = linkTitleEl.getBoundingClientRect();\n      const {\n        top: anchorClientTop,\n        left: anchorClientLeft\n      } = selfEl.getBoundingClientRect();\n      const offsetTop = linkTitleClientTop - anchorClientTop;\n      const offsetLeft = linkTitleClientLeft - anchorClientLeft;\n      barEl.style.top = `${offsetTop}px`;\n      barEl.style.height = `${offsetHeight}px`;\n      if (slotEl) {\n        slotEl.style.top = `${offsetTop}px`;\n        slotEl.style.height = `${offsetHeight}px`;\n        slotEl.style.maxWidth = `${offsetWidth + offsetLeft}px`;\n      }\n      void barEl.offsetHeight;\n      if (slotEl) void slotEl.offsetHeight;\n      if (!transition) {\n        barEl.style.transition = '';\n        if (slotEl) slotEl.style.transition = '';\n      }\n    }\n    function setActiveHref(href, transition = true) {\n      const idMatchResult = /^#([^#]+)$/.exec(href);\n      if (!idMatchResult) return;\n      const linkEl = document.getElementById(idMatchResult[1]);\n      if (!linkEl) return;\n      activeHrefRef.value = href;\n      linkEl.scrollIntoView();\n      if (!transition) {\n        disableTransitionOneTick();\n      }\n      handleScroll();\n    }\n    const handleScroll = throttle(() => {\n      _handleScroll(true);\n    }, 128);\n    function _handleScroll(transition = true) {\n      var _a;\n      const links = [];\n      const offsetTarget = unwrapElement((_a = props.offsetTarget) !== null && _a !== void 0 ? _a : document);\n      collectedLinkHrefs.forEach(href => {\n        const idMatchResult = /#([^#]+)$/.exec(href);\n        if (!idMatchResult) return;\n        const linkEl = document.getElementById(idMatchResult[1]);\n        if (linkEl && offsetTarget) {\n          const {\n            top,\n            height\n          } = getOffset(linkEl, offsetTarget);\n          links.push({\n            top,\n            height,\n            href\n          });\n        }\n      });\n      links.sort((a, b) => {\n        // ascend top\n        if (a.top > b.top) {\n          return 1;\n          // descend height\n        } else if (a.top === b.top && a.height < b.height) {\n          return -1;\n        }\n        return -1;\n      });\n      const currentActiveHref = activeHrefRef.value;\n      const {\n        bound,\n        ignoreGap\n      } = props;\n      const activeLink = links.reduce((prevLink, link) => {\n        if (link.top + link.height < 0) {\n          if (ignoreGap) {\n            return link;\n          } else {\n            return prevLink;\n          }\n        }\n        if (link.top <= bound) {\n          if (prevLink === null) {\n            return link;\n          } else if (link.top === prevLink.top) {\n            if (link.href === currentActiveHref) {\n              return link;\n            } else return prevLink;\n          } else if (link.top > prevLink.top) {\n            return link;\n          } else {\n            return prevLink;\n          }\n        }\n        return prevLink;\n      }, null);\n      if (!transition) disableTransitionOneTick();\n      if (activeLink) {\n        activeHrefRef.value = activeLink.href;\n      } else {\n        activeHrefRef.value = null;\n      }\n    }\n    provide(anchorInjectionKey, {\n      activeHref: activeHrefRef,\n      mergedClsPrefix: toRef(props, 'mergedClsPrefix'),\n      updateBarPosition,\n      setActiveHref,\n      collectedLinkHrefs,\n      titleEls\n    });\n    onMounted(() => {\n      document.addEventListener('scroll', handleScroll, true);\n      setActiveHref(window.location.hash);\n      _handleScroll(false);\n    });\n    onFontsReady(() => {\n      setActiveHref(window.location.hash);\n      _handleScroll(false);\n    });\n    onBeforeUnmount(() => {\n      document.removeEventListener('scroll', handleScroll, true);\n    });\n    watch(activeHrefRef, value => {\n      if (value === null) {\n        const {\n          value: slotEl\n        } = slotRef;\n        if (slotEl && !isBlockTypeRef.value) {\n          slotEl.style.maxWidth = '0';\n        }\n      }\n    });\n    return {\n      selfRef,\n      barRef,\n      slotRef,\n      setActiveHref,\n      activeHref: activeHrefRef,\n      isBlockType: isBlockTypeRef,\n      mergedShowRail: mergedShowRailRef\n    };\n  },\n  render() {\n    var _a;\n    const {\n      mergedClsPrefix,\n      mergedShowRail,\n      isBlockType,\n      $slots\n    } = this;\n    const Anchor = h(\"div\", {\n      class: [`${mergedClsPrefix}-anchor`, isBlockType && `${mergedClsPrefix}-anchor--block`, mergedShowRail && `${mergedClsPrefix}-anchor--show-rail`],\n      ref: \"selfRef\"\n    }, mergedShowRail && this.showBackground ? h(\"div\", {\n      ref: \"slotRef\",\n      class: `${mergedClsPrefix}-anchor-link-background`\n    }) : null, mergedShowRail ? h(\"div\", {\n      class: `${mergedClsPrefix}-anchor-rail`\n    }, h(\"div\", {\n      ref: \"barRef\",\n      class: [`${mergedClsPrefix}-anchor-rail__bar`, this.activeHref !== null && `${mergedClsPrefix}-anchor-rail__bar--active`]\n    })) : null, (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots));\n    return this.internalScrollable ? h(NScrollbar, null, {\n      default: () => Anchor\n    }) : Anchor;\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}