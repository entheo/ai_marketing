{"ast":null,"code":"import { onBeforeMount, ref, h } from 'vue';\nimport { NRadioGroup, NRadioButton, NButton, NForm, NInput, NFormItem, NTag, NDynamicTags } from 'naive-ui';\nimport { useStore } from 'vuex';\n\n//组件挂载前加载数据\n\nconst __default__ = {\n  name: 'CreateSenarioForm'\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: {\n    labelWidth: {\n      default: '190'\n    },\n    labelPlacement: {\n      default: 'left'\n    }\n  },\n  emits: ['senarioInfoCreated'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const store = useStore();\n    onBeforeMount(() => {\n      preData.value = store.getters.temp_campaign_data;\n      console.log('预加载数据：', preData.value);\n      handleSenarioInfo();\n    });\n    const preData = ref(null);\n    const handleSenarioInfo = () => {\n      console.log(typeof preData.value);\n      if (preData.value && JSON.stringify(preData.value) !== '{}') {\n        senarioInfo.value.places = preData.value.senarioData.places;\n        senarioInfo.value.emotionTags = preData.value.senarioData.emotionTags;\n      }\n    };\n\n    //定义表单\n    const inputInstRef = ref(null);\n    const otherPlace = ref(false);\n    const otherPlaceData = ref(null);\n    const places = [{\n      value: \"微信朋友圈\",\n      label: \"微信朋友圈\"\n    }, {\n      value: \"微信群内\",\n      label: \"微信群内\"\n    }, {\n      value: \"小红书\",\n      label: \"小红书\"\n    }, {\n      value: \"电商/商品详情页\",\n      label: \"电商/商品详情页\"\n    }, {\n      value: \"其它...\",\n      label: \"其它\"\n    }];\n    const getPlace = message => {\n      switch (message) {\n        case '微信朋友圈':\n          senarioInfo.value.emotionTags = ['亲密感', '真诚', '轻松'];\n          break;\n        case '微信群内':\n          senarioInfo.value.emotionTags = ['归属感', '参与感', '价值感'];\n          break;\n        case '小红书':\n          senarioInfo.value.emotionTags = ['探索欲', '真实感', '认同感'];\n          break;\n        case '电商/商品详情页':\n          senarioInfo.value.emotionTags = ['信任', '诱惑', '紧迫感'];\n          break;\n        case '其它...':\n          senarioInfo.value.places = '';\n          senarioInfo.value.emotionTags = ['惊喜'];\n          otherPlace.value = true;\n          inputInstRef.value?.focus();\n      }\n      /*\n      if(message===\"其它...\"){\n          otherPlace.value=true;\n          console.log(inputInstRef.value?.focus());\n          inputInstRef.value?.focus();\n          }\n      else{\n          otherPlace.value=false;\n          }\n      console.log(message)\n      */\n    };\n    const emotionTagsRef = ref([\"喜悦\", \"真诚\"]);\n    const senarioInfo = ref({\n      places: '',\n      emotionTags: emotionTagsRef\n    });\n    const renderEmotionTags = (tag, index) => {\n      return h(NTag, {\n        type: index < 3 ? \"success\" : \"error\",\n        disabled: index > 3,\n        closable: true,\n        onClose: () => {\n          emotionTagsRef.value.splice(index, 1);\n        }\n      }, () => tag);\n    };\n    const emit = __emit;\n    const createSenario = () => {\n      console.log('to create senario');\n      console.log(senarioInfo.value);\n      if (otherPlaceData.value && JSON.stringify(otherPlaceData.value) !== '') {\n        senarioInfo.value.places = otherPlaceData.value;\n      }\n      emit('senarioInfoCreated', senarioInfo.value);\n      try {\n        /*\n        const resp =  await axios.get('http://localhost:8005/account/auth/',{\n          headers: {\n              'Authorization': `Bearer ${token}` // 设置请求头\n              }});\n        */} catch (error) {\n        console.error('Failed to fetch user info:', error);\n      }\n    };\n    __expose({\n      createSenario,\n      senarioInfo,\n      otherPlaceData,\n      otherPlace,\n      places\n    });\n    const __returned__ = {\n      store,\n      preData,\n      handleSenarioInfo,\n      inputInstRef,\n      otherPlace,\n      otherPlaceData,\n      places,\n      getPlace,\n      emotionTagsRef,\n      senarioInfo,\n      renderEmotionTags,\n      emit,\n      createSenario,\n      onBeforeMount,\n      ref,\n      h,\n      get NRadioGroup() {\n        return NRadioGroup;\n      },\n      get NRadioButton() {\n        return NRadioButton;\n      },\n      get NButton() {\n        return NButton;\n      },\n      get NForm() {\n        return NForm;\n      },\n      get NInput() {\n        return NInput;\n      },\n      get NFormItem() {\n        return NFormItem;\n      },\n      get NTag() {\n        return NTag;\n      },\n      get NDynamicTags() {\n        return NDynamicTags;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["onBeforeMount","ref","h","NRadioGroup","NRadioButton","NButton","NForm","NInput","NFormItem","NTag","NDynamicTags","useStore","__default__","name","store","preData","value","getters","temp_campaign_data","console","log","handleSenarioInfo","JSON","stringify","senarioInfo","places","senarioData","emotionTags","inputInstRef","otherPlace","otherPlaceData","label","getPlace","message","focus","emotionTagsRef","renderEmotionTags","tag","index","type","disabled","closable","onClose","splice","emit","__emit","createSenario","error","__expose"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/CreateSenarioForm.vue"],"sourcesContent":["<template>\n    <n-form :label-placement=\"labelPlacement\" require-mark-placement=\"right-hanging\" :label-width=\"labelWidth\" size=\"large\">\n\n        <n-form-item label=\"计划将文案用在哪里？\" size=\"large\">\n            <n-radio-group \n                class=\"radio-group-wrap\"\n                style=\"--n-button-border-color:none;--n-button-border-color-active: none;--n-height:auto\"\n                v-model:value=\"senarioInfo.places\" \n                size=\"large\"\n                name=\"radiobuttongroup1\"\n                @update:value=\"getPlace\">\n        \n                <n-radio-button class=\"bordered-button\"\n                    v-for=\"place in places\"\n                    :key=\"place.value\"\n                    :value=\"place.value\"\n                    :label=\"place.label\"/> \n            </n-radio-group>\n        </n-form-item>\n        \n        <n-form-item label=\"补充描述使用场景:\" v-show=\"otherPlace\">        \n                <n-input \n                v-show=\"otherPlace\" \n                v-model:value='otherPlaceData' placeholder=\"\"\n                clearable\n                ref=\"inputInstRef\"/>\n            \n        </n-form-item>\n         \n         <n-form-item class=\"tags\" label=\"传递情绪与感受是？\">\n         <n-dynamic-tags v-model:value=\"senarioInfo.emotionTags\" :render-tag=\"renderEmotionTags\" />\n         </n-form-item>\n         \n        <n-button v-show=\"false\" type=\"primary\" @click=\"createSenario\">保存</n-button>\n    </n-form>\n</template>\n\n<script setup>\nimport {onBeforeMount,ref,h, defineEmits,defineExpose,defineProps} from 'vue';\nimport {NRadioGroup,NRadioButton,NButton, NForm, NInput, NFormItem,  NTag,NDynamicTags} from 'naive-ui';\nimport {useStore} from 'vuex';\n\n//组件挂载前加载数据\nconst store = useStore();\nonBeforeMount(()=>{\n    preData.value = store.getters.temp_campaign_data;\n    console.log('预加载数据：',preData.value);\n    handleSenarioInfo();\n    });\nconst preData = ref(null);\nconst handleSenarioInfo=()=>{\n    console.log(typeof(preData.value));\n    if(preData.value && JSON.stringify(preData.value)!=='{}' ){\n       senarioInfo.value.places = preData.value.senarioData.places;\n       senarioInfo.value.emotionTags = preData.value.senarioData.emotionTags;\n    }};\n\n//定义表单\nconst inputInstRef=ref(null);\nconst otherPlace=ref(false);\nconst otherPlaceData=ref(null);\nconst places = [\n    {\n        value:\"微信朋友圈\",\n        label:\"微信朋友圈\",\n        },\n    {\n        value:\"微信群内\",\n        label:\"微信群内\",\n        },\n    {\n        value:\"小红书\",\n        label:\"小红书\",\n        },\n    {\n        value:\"电商/商品详情页\",\n        label:\"电商/商品详情页\",\n        },\n\n    {\n        value:\"其它...\",\n        label:\"其它\",\n        },\n];\nconst getPlace = (message)=>{\n    switch(message){\n        case '微信朋友圈':\n        senarioInfo.value.emotionTags=['亲密感','真诚','轻松'];\n        break;\n\n        case '微信群内':\n        senarioInfo.value.emotionTags=['归属感','参与感','价值感'];\n        break;\n\n        case '小红书':\n        senarioInfo.value.emotionTags=['探索欲','真实感','认同感'];\n        break;\n\n        case '电商/商品详情页':\n        senarioInfo.value.emotionTags=['信任','诱惑','紧迫感']\n        \n        break;\n        \n        case '其它...':\n        senarioInfo.value.places='';\n        senarioInfo.value.emotionTags=['惊喜'];\n        otherPlace.value=true;\n        inputInstRef.value?.focus();\n        }\n    /*\n    if(message===\"其它...\"){\n        otherPlace.value=true;\n        console.log(inputInstRef.value?.focus());\n        inputInstRef.value?.focus();\n        }\n    else{\n        otherPlace.value=false;\n        }\n    console.log(message)\n    */\n    };\n\nconst emotionTagsRef = ref([\"喜悦\", \"真诚\"]);\nconst senarioInfo = ref({\n    places:'',\n    emotionTags: emotionTagsRef,\n\n    })\nconst renderEmotionTags = (tag, index) => {\n      return h(\n          NTag,\n          {\n            type: index < 3 ? \"success\" : \"error\",\n            disabled: index > 3,\n            closable: true,\n            onClose: () => {\n              emotionTagsRef.value.splice(index, 1);\n            }\n          },\n           ()=> tag\n        )\n}\nconst emit = defineEmits(['senarioInfoCreated']);\nconst createSenario = () =>{\n      console.log('to create senario');\n      console.log(senarioInfo.value);\n      if(otherPlaceData.value && JSON.stringify(otherPlaceData.value)!==''){\n          senarioInfo.value.places=otherPlaceData.value}\n      emit('senarioInfoCreated',senarioInfo.value);\n      try{\n          /*\n          const resp =  await axios.get('http://localhost:8005/account/auth/',{\n            headers: {\n                'Authorization': `Bearer ${token}` // 设置请求头\n                }});\n         */ }catch (error) {\n        console.error('Failed to fetch user info:', error);\n        }\n      };\n\ndefineExpose({createSenario,senarioInfo,otherPlaceData,otherPlace,places});\ndefineProps({\n    labelWidth:{default:'190'},\n    labelPlacement:{default:'left'},\n\n    });\n</script>\n\n<script>\n  export default{\n      name:'CreateSenarioForm'\n      };\n</script>\n\n<style scoped>\n.n-space{\n    margin:0}\n.tags .n-form-item-blank .n-space{\n    margin:0;\n    }\n.radio-group-wrap {\n  display: flex;\n  flex-wrap: wrap; \n}\n.radio-group-wrap .bordered-button{\n    border:1px solid;\n    border-color:rgb(224, 224, 230);\n    margin-right:10px;\n    margin-bottom:10px;\n    height:38px;\n    line-height:2.5}\n\n.n-card__content {\n    padding:0px 14px 0px 0px}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}