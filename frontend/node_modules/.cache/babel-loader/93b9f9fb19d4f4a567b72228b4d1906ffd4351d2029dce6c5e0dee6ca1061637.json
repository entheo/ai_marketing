{"ast":null,"code":"import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from \"./common.mjs\";\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n  if (!rtlStateRef) return undefined;\n  const ssrAdapter = useSsrAdapter();\n  const componentRtlStateRef = computed(() => {\n    const {\n      value: rtlState\n    } = rtlStateRef;\n    if (!rtlState) {\n      return undefined;\n    }\n    const componentRtlState = rtlState[mountId];\n    if (!componentRtlState) {\n      return undefined;\n    }\n    return componentRtlState;\n  });\n  const mountStyle = () => {\n    watchEffect(() => {\n      const {\n        value: clsPrefix\n      } = clsPrefixRef;\n      const id = `${clsPrefix}${mountId}Rtl`;\n      // if it already exists, we only need to watch clsPrefix, although in most\n      // of time it's unnecessary... However we can at least listen less\n      // handlers, which is great.\n      if (exists(id, ssrAdapter)) return;\n      const {\n        value: componentRtlState\n      } = componentRtlStateRef;\n      if (!componentRtlState) return;\n      componentRtlState.style.mount({\n        id,\n        head: true,\n        anchorMetaName: cssrAnchorMetaName,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        ssr: ssrAdapter\n      });\n    });\n  };\n  if (ssrAdapter) {\n    mountStyle();\n  } else {\n    onBeforeMount(mountStyle);\n  }\n  return componentRtlStateRef;\n}","map":{"version":3,"names":["onBeforeMount","watchEffect","computed","exists","useSsrAdapter","cssrAnchorMetaName","useRtl","mountId","rtlStateRef","clsPrefixRef","undefined","ssrAdapter","componentRtlStateRef","value","rtlState","componentRtlState","mountStyle","clsPrefix","id","style","mount","head","anchorMetaName","props","bPrefix","ssr"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/_mixins/use-rtl.mjs"],"sourcesContent":["import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from \"./common.mjs\";\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n  if (!rtlStateRef) return undefined;\n  const ssrAdapter = useSsrAdapter();\n  const componentRtlStateRef = computed(() => {\n    const {\n      value: rtlState\n    } = rtlStateRef;\n    if (!rtlState) {\n      return undefined;\n    }\n    const componentRtlState = rtlState[mountId];\n    if (!componentRtlState) {\n      return undefined;\n    }\n    return componentRtlState;\n  });\n  const mountStyle = () => {\n    watchEffect(() => {\n      const {\n        value: clsPrefix\n      } = clsPrefixRef;\n      const id = `${clsPrefix}${mountId}Rtl`;\n      // if it already exists, we only need to watch clsPrefix, although in most\n      // of time it's unnecessary... However we can at least listen less\n      // handlers, which is great.\n      if (exists(id, ssrAdapter)) return;\n      const {\n        value: componentRtlState\n      } = componentRtlStateRef;\n      if (!componentRtlState) return;\n      componentRtlState.style.mount({\n        id,\n        head: true,\n        anchorMetaName: cssrAnchorMetaName,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        ssr: ssrAdapter\n      });\n    });\n  };\n  if (ssrAdapter) {\n    mountStyle();\n  } else {\n    onBeforeMount(mountStyle);\n  }\n  return componentRtlStateRef;\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAK;AAC1D,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,kBAAkB,QAAQ,cAAc;AACjD,OAAO,SAASC,MAAMA,CAACC,OAAO,EAAEC,WAAW,EAAEC,YAAY,EAAE;EACzD,IAAI,CAACD,WAAW,EAAE,OAAOE,SAAS;EAClC,MAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,MAAMQ,oBAAoB,GAAGV,QAAQ,CAAC,MAAM;IAC1C,MAAM;MACJW,KAAK,EAAEC;IACT,CAAC,GAAGN,WAAW;IACf,IAAI,CAACM,QAAQ,EAAE;MACb,OAAOJ,SAAS;IAClB;IACA,MAAMK,iBAAiB,GAAGD,QAAQ,CAACP,OAAO,CAAC;IAC3C,IAAI,CAACQ,iBAAiB,EAAE;MACtB,OAAOL,SAAS;IAClB;IACA,OAAOK,iBAAiB;EAC1B,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBf,WAAW,CAAC,MAAM;MAChB,MAAM;QACJY,KAAK,EAAEI;MACT,CAAC,GAAGR,YAAY;MAChB,MAAMS,EAAE,GAAI,GAAED,SAAU,GAAEV,OAAQ,KAAI;MACtC;MACA;MACA;MACA,IAAIJ,MAAM,CAACe,EAAE,EAAEP,UAAU,CAAC,EAAE;MAC5B,MAAM;QACJE,KAAK,EAAEE;MACT,CAAC,GAAGH,oBAAoB;MACxB,IAAI,CAACG,iBAAiB,EAAE;MACxBA,iBAAiB,CAACI,KAAK,CAACC,KAAK,CAAC;QAC5BF,EAAE;QACFG,IAAI,EAAE,IAAI;QACVC,cAAc,EAAEjB,kBAAkB;QAClCkB,KAAK,EAAE;UACLC,OAAO,EAAEP,SAAS,GAAI,IAAGA,SAAU,GAAE,GAAGP;QAC1C,CAAC;QACDe,GAAG,EAAEd;MACP,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,IAAIA,UAAU,EAAE;IACdK,UAAU,CAAC,CAAC;EACd,CAAC,MAAM;IACLhB,aAAa,CAACgB,UAAU,CAAC;EAC3B;EACA,OAAOJ,oBAAoB;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}