{"ast":null,"code":"import { h, defineComponent, ref, toRef, watch, computed, watchEffect, nextTick } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from \"../../_internal/icons/index.mjs\";\nimport { NInput } from \"../../input/index.mjs\";\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { NxButton } from \"../../button/index.mjs\";\nimport { useTheme, useFormItem, useLocale, useConfig } from \"../../_mixins/index.mjs\";\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from \"../../_utils/index.mjs\";\nimport { inputNumberLight } from \"../styles/index.mjs\";\nimport { parse, validator, format, parseNumber, isWipValue } from \"./utils.mjs\";\nimport style from \"./styles/input-number.cssr.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  buttonPlacement: {\n    type: String,\n    default: 'right'\n  },\n  inputProps: Object,\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  parse: Function,\n  format: Function,\n  precision: Number,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // dom ref\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null);\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n    const getPrecision = value => {\n      const fraction = String(value).split('.')[1];\n      return fraction ? fraction.length : 0;\n    };\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(value => {\n        if (value === undefined) return 0;\n        return getPrecision(value);\n      });\n      return Math.max(...precisions);\n    };\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n    const deriveValueFromDisplayedValue = ({\n      offset,\n      doUpdateIfValid,\n      fixPrecision,\n      isInputing\n    }) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n      const parsedValue = (props.parse || parse)(displayedValue);\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n      if (validator(parsedValue)) {\n        const currentPrecision = getPrecision(parsedValue);\n        const {\n          precision\n        } = props;\n        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {\n          return false;\n        }\n        let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMax;\n          }\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMin;\n          }\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n      return false;\n    };\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (validator(mergedValue)) {\n        const {\n          format: formatProp,\n          precision\n        } = props;\n        if (formatProp) {\n          displayedValueRef.value = formatProp(mergedValue);\n        } else {\n          if (mergedValue === null || precision === undefined ||\n          // precision overflow\n          getPrecision(mergedValue) > precision) {\n            displayedValueRef.value = format(mergedValue, undefined);\n          } else {\n            displayedValueRef.value = format(mergedValue, precision);\n          }\n        }\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n    deriveDisplayedValueFromValue();\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: -mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: +mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      var _a, _b;\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n      const value = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: true,\n        isInputing: false,\n        fixPrecision: true\n      });\n      // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        }\n        // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n      // User may change value in blur callback, we make sure it will be\n      // displayed. Sometimes mergedValue won't be viewed as changed\n      void nextTick(() => {\n        deriveDisplayedValueFromValue();\n      });\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: -mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n    function handleMinusMousedown() {\n      clearMinusHoldTimeout();\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearMinusHoldTimeout, {\n        once: true\n      });\n    }\n    let firstAddMousedownId = null;\n    function handleAddMousedown() {\n      clearAddHoldTimeout();\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearAddHoldTimeout, {\n        once: true\n      });\n    }\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n    function handleKeyDown(e) {\n      var _a, _b;\n      if (e.key === 'Enter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.key === 'ArrowUp') {\n        if (!addableRef.value) return;\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (!minusableRef.value) return;\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {\n        deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: true,\n          fixPrecision: false\n        });\n      }\n    }\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      select: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots\n    } = this;\n    const renderMinusButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.minusable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleMinusClick,\n        onMousedown: this.handleMinusMousedown,\n        ref: \"minusButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['minus-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })])\n      });\n    };\n    const renderAddButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.addable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleAddClick,\n        onMousedown: this.handleAddMousedown,\n        ref: \"addButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['add-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      });\n    };\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      inputProps: this.inputProps,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a;\n        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), resolveWrappedSlot($slots.prefix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-prefix`\n            }, children);\n          }\n          return null;\n        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      },\n      suffix: () => {\n        var _a;\n        return this.showButton ? [resolveWrappedSlot($slots.suffix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-suffix`\n            }, children);\n          }\n          return null;\n        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      }\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","toRef","watch","computed","watchEffect","nextTick","rgba","useMemo","useMergedState","on","RemoveIcon","AddIcon","NInput","NBaseIcon","NxButton","useTheme","useFormItem","useLocale","useConfig","warnOnce","call","resolveSlot","resolveWrappedSlot","inputNumberLight","parse","validator","format","parseNumber","isWipValue","style","useRtl","HOLDING_CHANGE_THRESHOLD","HOLDING_CHANGE_INTERVAL","inputNumberProps","Object","assign","props","autofocus","Boolean","loading","type","default","undefined","placeholder","String","defaultValue","Number","value","step","min","max","size","disabled","Function","bordered","showButton","buttonPlacement","inputProps","readonly","clearable","keyboard","updateValueOnInput","precision","status","Array","onUpdateValue","onFocus","onBlur","onClear","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","mergedRtlRef","themeRef","localeRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","inputInstRef","minusButtonInstRef","addButtonInstRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","displayedValueRef","getPrecision","fraction","split","length","getMaxPrecision","currentValue","precisions","map","Math","mergedPlaceholderRef","mergedStepRef","parsedNumber","abs","mergedMinRef","mergedMaxRef","doUpdateValue","mergedValue","deriveDisplayedValueFromValue","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","deriveValueFromDisplayedValue","offset","doUpdateIfValid","fixPrecision","isInputing","displayedValue","parsedValue","currentPrecision","nextValue","parseFloat","toFixed","mergedMax","mergedMin","formatProp","displayedValueInvalidRef","derivedValue","minusableRef","mergedStep","derivedNextValue","addableRef","doFocus","e","nTriggerFormFocus","doBlur","_a","_b","target","wrapperElRef","inputElRef","nTriggerFormBlur","doClear","doAdd","addable","clearAddHoldTimeout","createValidValue","doMinus","minusable","clearMinusHoldTimeout","handleFocus","handleBlur","handleClear","handleMouseDown","_c","$el","contains","preventDefault","activate","minusHoldStateIntervalId","addHoldStateIntervalId","firstMinusMousedownId","window","clearTimeout","clearInterval","firstAddMousedownId","handleMinusMousedown","setTimeout","setInterval","document","once","handleAddMousedown","handleAddClick","handleMinusClick","handleKeyDown","key","deactivate","ArrowUp","ArrowDown","handleUpdateDisplayedValue","exposedMethods","focus","blur","select","rtlEnabledRef","rtlEnabled","mergedClsPrefix","mergedBordered","uncontrolledValue","mergedPlaceholder","displayedValueInvalid","mergedSize","mergedDisabled","mergedStatus","mergedTheme","inputThemeOverrides","paddingSmall","paddingMedium","paddingLarge","buttonThemeOverrides","self","iconColorDisabled","r","g","b","a","textColorTextDisabled","opacityDisabled","render","$slots","renderMinusButton","text","focusable","theme","peers","Button","themeOverrides","peerOverrides","builtinThemeOverrides","onClick","onMousedown","icon","clsPrefix","renderAddButton","class","Input","textDecoration","onKeydown","internalLoadingBeforeSuffix","prefix","children","suffix"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/input-number/src/InputNumber.mjs"],"sourcesContent":["import { h, defineComponent, ref, toRef, watch, computed, watchEffect, nextTick } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from \"../../_internal/icons/index.mjs\";\nimport { NInput } from \"../../input/index.mjs\";\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { NxButton } from \"../../button/index.mjs\";\nimport { useTheme, useFormItem, useLocale, useConfig } from \"../../_mixins/index.mjs\";\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from \"../../_utils/index.mjs\";\nimport { inputNumberLight } from \"../styles/index.mjs\";\nimport { parse, validator, format, parseNumber, isWipValue } from \"./utils.mjs\";\nimport style from \"./styles/input-number.cssr.mjs\";\nimport { useRtl } from \"../../_mixins/use-rtl.mjs\";\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  buttonPlacement: {\n    type: String,\n    default: 'right'\n  },\n  inputProps: Object,\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  parse: Function,\n  format: Function,\n  precision: Number,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    // dom ref\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null);\n    // value\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n    const getPrecision = value => {\n      const fraction = String(value).split('.')[1];\n      return fraction ? fraction.length : 0;\n    };\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(value => {\n        if (value === undefined) return 0;\n        return getPrecision(value);\n      });\n      return Math.max(...precisions);\n    };\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n    const deriveValueFromDisplayedValue = ({\n      offset,\n      doUpdateIfValid,\n      fixPrecision,\n      isInputing\n    }) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n      const parsedValue = (props.parse || parse)(displayedValue);\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n      if (validator(parsedValue)) {\n        const currentPrecision = getPrecision(parsedValue);\n        const {\n          precision\n        } = props;\n        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {\n          return false;\n        }\n        let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMax;\n          }\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false;\n            // if doUpdateIfValid=true, we try to make it a valid value\n            nextValue = mergedMin;\n          }\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n      return false;\n    };\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (validator(mergedValue)) {\n        const {\n          format: formatProp,\n          precision\n        } = props;\n        if (formatProp) {\n          displayedValueRef.value = formatProp(mergedValue);\n        } else {\n          if (mergedValue === null || precision === undefined ||\n          // precision overflow\n          getPrecision(mergedValue) > precision) {\n            displayedValueRef.value = format(mergedValue, undefined);\n          } else {\n            displayedValueRef.value = format(mergedValue, precision);\n          }\n        }\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n    deriveDisplayedValueFromValue();\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: -mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: +mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      var _a, _b;\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n      const value = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: true,\n        isInputing: false,\n        fixPrecision: true\n      });\n      // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        }\n        // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n      // User may change value in blur callback, we make sure it will be\n      // displayed. Sometimes mergedValue won't be viewed as changed\n      void nextTick(() => {\n        deriveDisplayedValueFromValue();\n      });\n    }\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: -mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n    function handleMinusMousedown() {\n      clearMinusHoldTimeout();\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearMinusHoldTimeout, {\n        once: true\n      });\n    }\n    let firstAddMousedownId = null;\n    function handleAddMousedown() {\n      clearAddHoldTimeout();\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearAddHoldTimeout, {\n        once: true\n      });\n    }\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n    function handleKeyDown(e) {\n      var _a, _b;\n      if (e.key === 'Enter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.key === 'ArrowUp') {\n        if (!addableRef.value) return;\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (!minusableRef.value) return;\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {\n        deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: true,\n          fixPrecision: false\n        });\n      }\n    }\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      select: () => {\n        var _a;\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots\n    } = this;\n    const renderMinusButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.minusable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleMinusClick,\n        onMousedown: this.handleMinusMousedown,\n        ref: \"minusButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['minus-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })])\n      });\n    };\n    const renderAddButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.addable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleAddClick,\n        onMousedown: this.handleAddMousedown,\n        ref: \"addButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['add-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      });\n    };\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      inputProps: this.inputProps,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a;\n        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), resolveWrappedSlot($slots.prefix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-prefix`\n            }, children);\n          }\n          return null;\n        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      },\n      suffix: () => {\n        var _a;\n        return this.showButton ? [resolveWrappedSlot($slots.suffix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-suffix`\n            }, children);\n          }\n          return null;\n        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      }\n    }));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}