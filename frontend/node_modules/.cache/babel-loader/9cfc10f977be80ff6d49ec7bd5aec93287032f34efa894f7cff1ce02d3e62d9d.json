{"ast":null,"code":"import { h, ref, computed, defineComponent, inject, watchEffect, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from \"../../_utils/env/is-native-lazy-load.mjs\";\nimport { observeIntersection } from \"../../image/src/utils.mjs\";\nimport { tagInjectionKey } from \"../../tag/src/Tag.mjs\";\nimport { useConfig, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { createKey, color2Class, resolveWrappedSlot, resolveSlot } from \"../../_utils/index.mjs\";\nimport { avatarLight } from \"../styles/index.mjs\";\nimport { avatarGroupInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: [String, Number],\n  src: String,\n  circle: {\n    type: Boolean,\n    default: undefined\n  },\n  objectFit: String,\n  round: {\n    type: Boolean,\n    default: undefined\n  },\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  onError: Function,\n  fallbackSrc: String,\n  intersectionObserverOptions: Object,\n  lazy: Boolean,\n  onLoad: Function,\n  renderPlaceholder: Function,\n  renderFallback: Function,\n  imgProps: Object,\n  /** @deprecated */\n  color: String\n});\nexport default defineComponent({\n  name: 'Avatar',\n  props: avatarProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const hasLoadErrorRef = ref(false);\n    let memoedTextHtml = null;\n    const textRef = ref(null);\n    const selfRef = ref(null);\n    const fitTextTransform = () => {\n      const {\n        value: textEl\n      } = textRef;\n      if (textEl) {\n        if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n          memoedTextHtml = textEl.innerHTML;\n          const {\n            value: selfEl\n          } = selfRef;\n          if (selfEl) {\n            const {\n              offsetWidth: elWidth,\n              offsetHeight: elHeight\n            } = selfEl;\n            const {\n              offsetWidth: textWidth,\n              offsetHeight: textHeight\n            } = textEl;\n            const radix = 0.9;\n            const ratio = Math.min(elWidth / textWidth * radix, elHeight / textHeight * radix, 1);\n            textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n          }\n        }\n      }\n    };\n    const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n    const mergedSizeRef = computed(() => {\n      const {\n        size\n      } = props;\n      if (size) return size;\n      const {\n        size: avatarGroupSize\n      } = NAvatarGroup || {};\n      if (avatarGroupSize) return avatarGroupSize;\n      return 'medium';\n    });\n    const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n    const TagInjection = inject(tagInjectionKey, null);\n    const mergedRoundRef = computed(() => {\n      if (NAvatarGroup) return true;\n      const {\n        round,\n        circle\n      } = props;\n      if (round !== undefined || circle !== undefined) return round || circle;\n      if (TagInjection) {\n        return TagInjection.roundRef.value;\n      }\n      return false;\n    });\n    const mergedBorderedRef = computed(() => {\n      if (NAvatarGroup) return true;\n      return props.bordered || false;\n    });\n    const cssVarsRef = computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color: propColor\n      } = props;\n      const {\n        self: {\n          borderRadius,\n          fontSize,\n          color,\n          border,\n          colorModal,\n          colorPopover\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      let height;\n      if (typeof size === 'number') {\n        height = `${size}px`;\n      } else {\n        height = themeRef.value.self[createKey('height', size)];\n      }\n      return {\n        '--n-font-size': fontSize,\n        '--n-border': bordered ? border : 'none',\n        '--n-border-radius': round ? '50%' : borderRadius,\n        '--n-color': propColor || color,\n        '--n-color-modal': propColor || colorModal,\n        '--n-color-popover': propColor || colorPopover,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('avatar', computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color\n      } = props;\n      let hash = '';\n      if (size) {\n        if (typeof size === 'number') {\n          hash += `a${size}`;\n        } else {\n          hash += size[0];\n        }\n      }\n      if (round) {\n        hash += 'b';\n      }\n      if (bordered) {\n        hash += 'c';\n      }\n      if (color) {\n        hash += color2Class(color);\n      }\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    const shouldStartLoadingRef = ref(!props.lazy);\n    onMounted(() => {\n      // Use IntersectionObserver if lazy and intersectionObserverOptions is set\n      if (props.lazy && props.intersectionObserverOptions) {\n        let unobserve;\n        const stopWatchHandle = watchEffect(() => {\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n          unobserve = undefined;\n          if (props.lazy) {\n            unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n          }\n        });\n        onBeforeUnmount(() => {\n          stopWatchHandle();\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n        });\n      }\n    });\n    watch(() => {\n      var _a;\n      return props.src || ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n    }, () => {\n      hasLoadErrorRef.value = false;\n    });\n    const loadedRef = ref(!props.lazy);\n    return {\n      textRef,\n      selfRef,\n      mergedRoundRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      fitTextTransform,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      hasLoadError: hasLoadErrorRef,\n      shouldStartLoading: shouldStartLoadingRef,\n      loaded: loadedRef,\n      mergedOnError: e => {\n        if (!shouldStartLoadingRef.value) return;\n        hasLoadErrorRef.value = true;\n        const {\n          onError,\n          imgProps: {\n            onError: imgPropsOnError\n          } = {}\n        } = props;\n        onError === null || onError === void 0 ? void 0 : onError(e);\n        imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n      },\n      mergedOnLoad: e => {\n        const {\n          onLoad,\n          imgProps: {\n            onLoad: imgPropsOnLoad\n          } = {}\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n        loadedRef.value = true;\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    const {\n      $slots,\n      src,\n      mergedClsPrefix,\n      lazy,\n      onRender,\n      loaded,\n      hasLoadError,\n      imgProps = {}\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    let img;\n    const placeholderNode = !loaded && !hasLoadError && (this.renderPlaceholder ? this.renderPlaceholder() : (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n    if (this.hasLoadError) {\n      img = this.renderFallback ? this.renderFallback() : resolveSlot($slots.fallback, () => [h(\"img\", {\n        src: this.fallbackSrc,\n        style: {\n          objectFit: this.objectFit\n        }\n      })]);\n    } else {\n      img = resolveWrappedSlot($slots.default, children => {\n        if (children) {\n          return h(VResizeObserver, {\n            onResize: this.fitTextTransform\n          }, {\n            default: () => h(\"span\", {\n              ref: \"textRef\",\n              class: `${mergedClsPrefix}-avatar__text`\n            }, children)\n          });\n        } else if (src || imgProps.src) {\n          const loadSrc = this.src || imgProps.src;\n          return h('img', Object.assign(Object.assign({}, imgProps), {\n            loading:\n            // If interseciton observer options is set, do not use native lazy\n            isImageSupportNativeLazy && !this.intersectionObserverOptions && lazy ? 'lazy' : 'eager',\n            src: lazy && this.intersectionObserverOptions ? this.shouldStartLoading ? loadSrc : undefined : loadSrc,\n            'data-image-src': loadSrc,\n            onLoad: this.mergedOnLoad,\n            onError: this.mergedOnError,\n            style: [imgProps.style || '', {\n              objectFit: this.objectFit\n            }, placeholderNode ? {\n              height: '0',\n              width: '0',\n              visibility: 'hidden',\n              position: 'absolute'\n            } : '']\n          }));\n        }\n      });\n    }\n    return h(\"span\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-avatar`, this.themeClass],\n      style: this.cssVars\n    }, img, lazy && placeholderNode);\n  }\n});","map":{"version":3,"names":["h","ref","computed","defineComponent","inject","watchEffect","onMounted","onBeforeUnmount","watch","VResizeObserver","isImageSupportNativeLazy","observeIntersection","tagInjectionKey","useConfig","useTheme","useThemeClass","createKey","color2Class","resolveWrappedSlot","resolveSlot","avatarLight","avatarGroupInjectionKey","style","avatarProps","Object","assign","props","size","String","Number","src","circle","type","Boolean","default","undefined","objectFit","round","bordered","onError","Function","fallbackSrc","intersectionObserverOptions","lazy","onLoad","renderPlaceholder","renderFallback","imgProps","color","name","setup","mergedClsPrefixRef","inlineThemeDisabled","hasLoadErrorRef","memoedTextHtml","textRef","selfRef","fitTextTransform","value","textEl","innerHTML","selfEl","offsetWidth","elWidth","offsetHeight","elHeight","textWidth","textHeight","radix","ratio","Math","min","transform","NAvatarGroup","mergedSizeRef","avatarGroupSize","themeRef","TagInjection","mergedRoundRef","roundRef","mergedBorderedRef","cssVarsRef","propColor","self","borderRadius","fontSize","border","colorModal","colorPopover","common","cubicBezierEaseInOut","height","themeClassHandle","hash","shouldStartLoadingRef","unobserve","stopWatchHandle","_a","loadedRef","mergedClsPrefix","cssVars","themeClass","onRender","hasLoadError","shouldStartLoading","loaded","mergedOnError","e","imgPropsOnError","mergedOnLoad","imgPropsOnLoad","render","_b","$slots","img","placeholderNode","placeholder","call","fallback","children","onResize","class","loadSrc","loading","width","visibility","position"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/avatar/src/Avatar.mjs"],"sourcesContent":["import { h, ref, computed, defineComponent, inject, watchEffect, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from \"../../_utils/env/is-native-lazy-load.mjs\";\nimport { observeIntersection } from \"../../image/src/utils.mjs\";\nimport { tagInjectionKey } from \"../../tag/src/Tag.mjs\";\nimport { useConfig, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { createKey, color2Class, resolveWrappedSlot, resolveSlot } from \"../../_utils/index.mjs\";\nimport { avatarLight } from \"../styles/index.mjs\";\nimport { avatarGroupInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: [String, Number],\n  src: String,\n  circle: {\n    type: Boolean,\n    default: undefined\n  },\n  objectFit: String,\n  round: {\n    type: Boolean,\n    default: undefined\n  },\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  onError: Function,\n  fallbackSrc: String,\n  intersectionObserverOptions: Object,\n  lazy: Boolean,\n  onLoad: Function,\n  renderPlaceholder: Function,\n  renderFallback: Function,\n  imgProps: Object,\n  /** @deprecated */\n  color: String\n});\nexport default defineComponent({\n  name: 'Avatar',\n  props: avatarProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const hasLoadErrorRef = ref(false);\n    let memoedTextHtml = null;\n    const textRef = ref(null);\n    const selfRef = ref(null);\n    const fitTextTransform = () => {\n      const {\n        value: textEl\n      } = textRef;\n      if (textEl) {\n        if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n          memoedTextHtml = textEl.innerHTML;\n          const {\n            value: selfEl\n          } = selfRef;\n          if (selfEl) {\n            const {\n              offsetWidth: elWidth,\n              offsetHeight: elHeight\n            } = selfEl;\n            const {\n              offsetWidth: textWidth,\n              offsetHeight: textHeight\n            } = textEl;\n            const radix = 0.9;\n            const ratio = Math.min(elWidth / textWidth * radix, elHeight / textHeight * radix, 1);\n            textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n          }\n        }\n      }\n    };\n    const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n    const mergedSizeRef = computed(() => {\n      const {\n        size\n      } = props;\n      if (size) return size;\n      const {\n        size: avatarGroupSize\n      } = NAvatarGroup || {};\n      if (avatarGroupSize) return avatarGroupSize;\n      return 'medium';\n    });\n    const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n    const TagInjection = inject(tagInjectionKey, null);\n    const mergedRoundRef = computed(() => {\n      if (NAvatarGroup) return true;\n      const {\n        round,\n        circle\n      } = props;\n      if (round !== undefined || circle !== undefined) return round || circle;\n      if (TagInjection) {\n        return TagInjection.roundRef.value;\n      }\n      return false;\n    });\n    const mergedBorderedRef = computed(() => {\n      if (NAvatarGroup) return true;\n      return props.bordered || false;\n    });\n    const cssVarsRef = computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color: propColor\n      } = props;\n      const {\n        self: {\n          borderRadius,\n          fontSize,\n          color,\n          border,\n          colorModal,\n          colorPopover\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      let height;\n      if (typeof size === 'number') {\n        height = `${size}px`;\n      } else {\n        height = themeRef.value.self[createKey('height', size)];\n      }\n      return {\n        '--n-font-size': fontSize,\n        '--n-border': bordered ? border : 'none',\n        '--n-border-radius': round ? '50%' : borderRadius,\n        '--n-color': propColor || color,\n        '--n-color-modal': propColor || colorModal,\n        '--n-color-popover': propColor || colorPopover,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('avatar', computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color\n      } = props;\n      let hash = '';\n      if (size) {\n        if (typeof size === 'number') {\n          hash += `a${size}`;\n        } else {\n          hash += size[0];\n        }\n      }\n      if (round) {\n        hash += 'b';\n      }\n      if (bordered) {\n        hash += 'c';\n      }\n      if (color) {\n        hash += color2Class(color);\n      }\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    const shouldStartLoadingRef = ref(!props.lazy);\n    onMounted(() => {\n      // Use IntersectionObserver if lazy and intersectionObserverOptions is set\n      if (props.lazy && props.intersectionObserverOptions) {\n        let unobserve;\n        const stopWatchHandle = watchEffect(() => {\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n          unobserve = undefined;\n          if (props.lazy) {\n            unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n          }\n        });\n        onBeforeUnmount(() => {\n          stopWatchHandle();\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n        });\n      }\n    });\n    watch(() => {\n      var _a;\n      return props.src || ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n    }, () => {\n      hasLoadErrorRef.value = false;\n    });\n    const loadedRef = ref(!props.lazy);\n    return {\n      textRef,\n      selfRef,\n      mergedRoundRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      fitTextTransform,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      hasLoadError: hasLoadErrorRef,\n      shouldStartLoading: shouldStartLoadingRef,\n      loaded: loadedRef,\n      mergedOnError: e => {\n        if (!shouldStartLoadingRef.value) return;\n        hasLoadErrorRef.value = true;\n        const {\n          onError,\n          imgProps: {\n            onError: imgPropsOnError\n          } = {}\n        } = props;\n        onError === null || onError === void 0 ? void 0 : onError(e);\n        imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n      },\n      mergedOnLoad: e => {\n        const {\n          onLoad,\n          imgProps: {\n            onLoad: imgPropsOnLoad\n          } = {}\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n        loadedRef.value = true;\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    const {\n      $slots,\n      src,\n      mergedClsPrefix,\n      lazy,\n      onRender,\n      loaded,\n      hasLoadError,\n      imgProps = {}\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    let img;\n    const placeholderNode = !loaded && !hasLoadError && (this.renderPlaceholder ? this.renderPlaceholder() : (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n    if (this.hasLoadError) {\n      img = this.renderFallback ? this.renderFallback() : resolveSlot($slots.fallback, () => [h(\"img\", {\n        src: this.fallbackSrc,\n        style: {\n          objectFit: this.objectFit\n        }\n      })]);\n    } else {\n      img = resolveWrappedSlot($slots.default, children => {\n        if (children) {\n          return h(VResizeObserver, {\n            onResize: this.fitTextTransform\n          }, {\n            default: () => h(\"span\", {\n              ref: \"textRef\",\n              class: `${mergedClsPrefix}-avatar__text`\n            }, children)\n          });\n        } else if (src || imgProps.src) {\n          const loadSrc = this.src || imgProps.src;\n          return h('img', Object.assign(Object.assign({}, imgProps), {\n            loading:\n            // If interseciton observer options is set, do not use native lazy\n            isImageSupportNativeLazy && !this.intersectionObserverOptions && lazy ? 'lazy' : 'eager',\n            src: lazy && this.intersectionObserverOptions ? this.shouldStartLoading ? loadSrc : undefined : loadSrc,\n            'data-image-src': loadSrc,\n            onLoad: this.mergedOnLoad,\n            onError: this.mergedOnError,\n            style: [imgProps.style || '', {\n              objectFit: this.objectFit\n            }, placeholderNode ? {\n              height: '0',\n              width: '0',\n              visibility: 'hidden',\n              position: 'absolute'\n            } : '']\n          }));\n        }\n      });\n    }\n    return h(\"span\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-avatar`, this.themeClass],\n      style: this.cssVars\n    }, img, lazy && placeholderNode);\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}