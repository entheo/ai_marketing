{"ast":null,"code":"import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from \"../../_mixins/index.mjs\";\nimport { isBrowser, warnOnce } from \"../../_utils/index.mjs\";\nimport { watermarkLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nfunction getRatio(context) {\n  if (!context) {\n    return 1;\n  }\n  const backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n}\nexport const watermarkProps = Object.assign(Object.assign({}, useTheme.props), {\n  debug: Boolean,\n  cross: Boolean,\n  fullscreen: Boolean,\n  width: {\n    type: Number,\n    default: 32\n  },\n  height: {\n    type: Number,\n    default: 32\n  },\n  zIndex: {\n    type: Number,\n    default: 10\n  },\n  xGap: {\n    type: Number,\n    default: 0\n  },\n  yGap: {\n    type: Number,\n    default: 0\n  },\n  yOffset: {\n    type: Number,\n    default: 0\n  },\n  xOffset: {\n    type: Number,\n    default: 0\n  },\n  rotate: {\n    type: Number,\n    default: 0\n  },\n  textAlign: {\n    type: String,\n    default: 'left'\n  },\n  image: String,\n  imageOpacity: {\n    type: Number,\n    default: 1\n  },\n  imageHeight: Number,\n  imageWidth: Number,\n  content: String,\n  selectable: {\n    type: Boolean,\n    default: true\n  },\n  fontSize: {\n    type: Number,\n    default: 14\n  },\n  fontFamily: String,\n  fontStyle: {\n    type: String,\n    default: 'normal'\n  },\n  fontVariant: {\n    type: String,\n    default: ''\n  },\n  fontWeight: {\n    type: Number,\n    default: 400\n  },\n  fontColor: {\n    type: String,\n    default: 'rgba(128, 128, 128, .3)'\n  },\n  fontStretch: {\n    type: String,\n    default: ''\n  },\n  lineHeight: {\n    type: Number,\n    default: 14\n  },\n  globalRotate: {\n    type: Number,\n    default: 0\n  }\n});\nexport default defineComponent({\n  name: 'Watermark',\n  props: watermarkProps,\n  setup(props, {\n    slots\n  }) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props, mergedClsPrefixRef);\n    const base64UrlRef = ref('');\n    const canvas = isBrowser ? document.createElement('canvas') : null;\n    const ctx = canvas ? canvas.getContext('2d') : null;\n    const fontsReadyRef = ref(false);\n    onFontsReady(() => fontsReadyRef.value = true);\n    watchEffect(() => {\n      if (!canvas) return;\n      void fontsReadyRef.value;\n      const ratio = getRatio(ctx);\n      const {\n        xGap,\n        yGap,\n        width,\n        height,\n        yOffset,\n        xOffset,\n        rotate,\n        image,\n        content,\n        fontColor,\n        fontStyle,\n        fontVariant,\n        fontStretch,\n        fontWeight,\n        fontFamily,\n        fontSize,\n        lineHeight,\n        debug\n      } = props;\n      const canvasWidth = (xGap + width) * ratio;\n      const canvasHeight = (yGap + height) * ratio;\n      const canvasOffsetLeft = xOffset * ratio;\n      const canvasOffsetTop = yOffset * ratio;\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      if (ctx) {\n        ctx.translate(0, 0);\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n        if (debug) {\n          ctx.strokeStyle = 'grey';\n          ctx.strokeRect(0, 0, markWidth, markHeight);\n        }\n        ctx.rotate(rotate * (Math.PI / 180));\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n          img.onload = () => {\n            ctx.globalAlpha = props.imageOpacity;\n            const {\n              imageWidth,\n              imageHeight\n            } = props;\n            ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth || (imageHeight ? img.width * imageHeight / img.height : img.width)) * ratio, (props.imageHeight || (imageWidth ? img.height * imageWidth / img.width : img.height)) * ratio);\n            base64UrlRef.value = canvas.toDataURL();\n          };\n        } else if (content) {\n          if (debug) {\n            ctx.strokeStyle = 'green';\n            ctx.strokeRect(0, 0, markWidth, markHeight);\n          }\n          ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n          ctx.fillStyle = fontColor;\n          let maxWidth = 0;\n          const {\n            textAlign\n          } = props;\n          content.split('\\n').map(line => {\n            const width = ctx.measureText(line).width;\n            maxWidth = Math.max(maxWidth, width);\n            return {\n              width,\n              line\n            };\n          }).forEach(({\n            line,\n            width\n          }, index) => {\n            const alignOffset = textAlign === 'left' ? 0 : textAlign === 'center' ? (maxWidth - width) / 2 : maxWidth - width;\n            ctx.fillText(line, canvasOffsetLeft + alignOffset, canvasOffsetTop + lineHeight * ratio * (index + 1));\n          });\n          base64UrlRef.value = canvas.toDataURL();\n        } else if (!content) {\n          // For example, you are using the input box to customize the watermark\n          // content, but after clearing the input box, the content is empty,\n          // and the canvas content is empty. Clear canvas when content is empty\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          base64UrlRef.value = canvas.toDataURL();\n        }\n      } else {\n        warnOnce('watermark', 'Canvas is not supported in the browser.');\n      }\n    });\n    return () => {\n      var _a;\n      const {\n        globalRotate,\n        fullscreen,\n        zIndex\n      } = props;\n      const mergedClsPrefix = mergedClsPrefixRef.value;\n      const isFullScreenGlobalRotate = globalRotate !== 0 && fullscreen;\n      const rotatedImageOffset = 'max(142vh, 142vw)';\n      const watermarkNode = h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark`, globalRotate !== 0 && `${mergedClsPrefix}-watermark--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark--fullscreen`],\n        style: {\n          transform: globalRotate ? `translateX(-50%) translateY(-50%) rotate(${globalRotate}deg)` : undefined,\n          zIndex: isFullScreenGlobalRotate ? undefined : zIndex,\n          backgroundSize: `${props.xGap + props.width}px`,\n          backgroundPosition: globalRotate === 0 ? props.cross ? `${props.width / 2}px ${props.height / 2}px, 0 0` : '' : props.cross ? `calc(${rotatedImageOffset} + ${props.width / 2}px) calc(${rotatedImageOffset} + ${props.height / 2}px), ${rotatedImageOffset} ${rotatedImageOffset}` : rotatedImageOffset,\n          backgroundImage: props.cross ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})` : `url(${base64UrlRef.value})`\n        }\n      });\n      if (props.fullscreen && !globalRotate) return watermarkNode;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark-container`, globalRotate !== 0 && `${mergedClsPrefix}-watermark-container--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark-container--fullscreen`, props.selectable && `${mergedClsPrefix}-watermark-container--selectable`],\n        style: {\n          zIndex: isFullScreenGlobalRotate ? zIndex : undefined\n        }\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots), watermarkNode);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","watchEffect","onFontsReady","useConfig","useTheme","isBrowser","warnOnce","watermarkLight","style","getRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","watermarkProps","Object","assign","props","debug","Boolean","cross","fullscreen","width","type","Number","default","height","zIndex","xGap","yGap","yOffset","xOffset","rotate","textAlign","String","image","imageOpacity","imageHeight","imageWidth","content","selectable","fontSize","fontFamily","fontStyle","fontVariant","fontWeight","fontColor","fontStretch","lineHeight","globalRotate","name","setup","slots","mergedClsPrefixRef","themeRef","base64UrlRef","canvas","document","createElement","ctx","getContext","fontsReadyRef","value","ratio","canvasWidth","canvasHeight","canvasOffsetLeft","canvasOffsetTop","translate","markWidth","markHeight","strokeStyle","strokeRect","Math","PI","img","Image","crossOrigin","referrerPolicy","src","onload","globalAlpha","drawImage","toDataURL","font","self","fillStyle","maxWidth","split","map","line","measureText","max","forEach","index","alignOffset","fillText","clearRect","_a","mergedClsPrefix","isFullScreenGlobalRotate","rotatedImageOffset","watermarkNode","class","transform","undefined","backgroundSize","backgroundPosition","backgroundImage","call"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/watermark/src/Watermark.mjs"],"sourcesContent":["import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from \"../../_mixins/index.mjs\";\nimport { isBrowser, warnOnce } from \"../../_utils/index.mjs\";\nimport { watermarkLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nfunction getRatio(context) {\n  if (!context) {\n    return 1;\n  }\n  const backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n}\nexport const watermarkProps = Object.assign(Object.assign({}, useTheme.props), {\n  debug: Boolean,\n  cross: Boolean,\n  fullscreen: Boolean,\n  width: {\n    type: Number,\n    default: 32\n  },\n  height: {\n    type: Number,\n    default: 32\n  },\n  zIndex: {\n    type: Number,\n    default: 10\n  },\n  xGap: {\n    type: Number,\n    default: 0\n  },\n  yGap: {\n    type: Number,\n    default: 0\n  },\n  yOffset: {\n    type: Number,\n    default: 0\n  },\n  xOffset: {\n    type: Number,\n    default: 0\n  },\n  rotate: {\n    type: Number,\n    default: 0\n  },\n  textAlign: {\n    type: String,\n    default: 'left'\n  },\n  image: String,\n  imageOpacity: {\n    type: Number,\n    default: 1\n  },\n  imageHeight: Number,\n  imageWidth: Number,\n  content: String,\n  selectable: {\n    type: Boolean,\n    default: true\n  },\n  fontSize: {\n    type: Number,\n    default: 14\n  },\n  fontFamily: String,\n  fontStyle: {\n    type: String,\n    default: 'normal'\n  },\n  fontVariant: {\n    type: String,\n    default: ''\n  },\n  fontWeight: {\n    type: Number,\n    default: 400\n  },\n  fontColor: {\n    type: String,\n    default: 'rgba(128, 128, 128, .3)'\n  },\n  fontStretch: {\n    type: String,\n    default: ''\n  },\n  lineHeight: {\n    type: Number,\n    default: 14\n  },\n  globalRotate: {\n    type: Number,\n    default: 0\n  }\n});\nexport default defineComponent({\n  name: 'Watermark',\n  props: watermarkProps,\n  setup(props, {\n    slots\n  }) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props, mergedClsPrefixRef);\n    const base64UrlRef = ref('');\n    const canvas = isBrowser ? document.createElement('canvas') : null;\n    const ctx = canvas ? canvas.getContext('2d') : null;\n    const fontsReadyRef = ref(false);\n    onFontsReady(() => fontsReadyRef.value = true);\n    watchEffect(() => {\n      if (!canvas) return;\n      void fontsReadyRef.value;\n      const ratio = getRatio(ctx);\n      const {\n        xGap,\n        yGap,\n        width,\n        height,\n        yOffset,\n        xOffset,\n        rotate,\n        image,\n        content,\n        fontColor,\n        fontStyle,\n        fontVariant,\n        fontStretch,\n        fontWeight,\n        fontFamily,\n        fontSize,\n        lineHeight,\n        debug\n      } = props;\n      const canvasWidth = (xGap + width) * ratio;\n      const canvasHeight = (yGap + height) * ratio;\n      const canvasOffsetLeft = xOffset * ratio;\n      const canvasOffsetTop = yOffset * ratio;\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      if (ctx) {\n        ctx.translate(0, 0);\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n        if (debug) {\n          ctx.strokeStyle = 'grey';\n          ctx.strokeRect(0, 0, markWidth, markHeight);\n        }\n        ctx.rotate(rotate * (Math.PI / 180));\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n          img.onload = () => {\n            ctx.globalAlpha = props.imageOpacity;\n            const {\n              imageWidth,\n              imageHeight\n            } = props;\n            ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth || (imageHeight ? img.width * imageHeight / img.height : img.width)) * ratio, (props.imageHeight || (imageWidth ? img.height * imageWidth / img.width : img.height)) * ratio);\n            base64UrlRef.value = canvas.toDataURL();\n          };\n        } else if (content) {\n          if (debug) {\n            ctx.strokeStyle = 'green';\n            ctx.strokeRect(0, 0, markWidth, markHeight);\n          }\n          ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n          ctx.fillStyle = fontColor;\n          let maxWidth = 0;\n          const {\n            textAlign\n          } = props;\n          content.split('\\n').map(line => {\n            const width = ctx.measureText(line).width;\n            maxWidth = Math.max(maxWidth, width);\n            return {\n              width,\n              line\n            };\n          }).forEach(({\n            line,\n            width\n          }, index) => {\n            const alignOffset = textAlign === 'left' ? 0 : textAlign === 'center' ? (maxWidth - width) / 2 : maxWidth - width;\n            ctx.fillText(line, canvasOffsetLeft + alignOffset, canvasOffsetTop + lineHeight * ratio * (index + 1));\n          });\n          base64UrlRef.value = canvas.toDataURL();\n        } else if (!content) {\n          // For example, you are using the input box to customize the watermark\n          // content, but after clearing the input box, the content is empty,\n          // and the canvas content is empty. Clear canvas when content is empty\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          base64UrlRef.value = canvas.toDataURL();\n        }\n      } else {\n        warnOnce('watermark', 'Canvas is not supported in the browser.');\n      }\n    });\n    return () => {\n      var _a;\n      const {\n        globalRotate,\n        fullscreen,\n        zIndex\n      } = props;\n      const mergedClsPrefix = mergedClsPrefixRef.value;\n      const isFullScreenGlobalRotate = globalRotate !== 0 && fullscreen;\n      const rotatedImageOffset = 'max(142vh, 142vw)';\n      const watermarkNode = h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark`, globalRotate !== 0 && `${mergedClsPrefix}-watermark--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark--fullscreen`],\n        style: {\n          transform: globalRotate ? `translateX(-50%) translateY(-50%) rotate(${globalRotate}deg)` : undefined,\n          zIndex: isFullScreenGlobalRotate ? undefined : zIndex,\n          backgroundSize: `${props.xGap + props.width}px`,\n          backgroundPosition: globalRotate === 0 ? props.cross ? `${props.width / 2}px ${props.height / 2}px, 0 0` : '' : props.cross ? `calc(${rotatedImageOffset} + ${props.width / 2}px) calc(${rotatedImageOffset} + ${props.height / 2}px), ${rotatedImageOffset} ${rotatedImageOffset}` : rotatedImageOffset,\n          backgroundImage: props.cross ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})` : `url(${base64UrlRef.value})`\n        }\n      });\n      if (props.fullscreen && !globalRotate) return watermarkNode;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-watermark-container`, globalRotate !== 0 && `${mergedClsPrefix}-watermark-container--global-rotate`, fullscreen && `${mergedClsPrefix}-watermark-container--fullscreen`, props.selectable && `${mergedClsPrefix}-watermark-container--selectable`],\n        style: {\n          zIndex: isFullScreenGlobalRotate ? zIndex : undefined\n        }\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots), watermarkNode);\n    };\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}