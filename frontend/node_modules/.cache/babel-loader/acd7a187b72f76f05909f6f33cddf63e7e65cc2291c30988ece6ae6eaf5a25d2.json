{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"欢迎来到我们的网站\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"请登录以继续操作。\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"7\"\n}, \"保持登录7天\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"登录\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"注册\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"注册\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createCommentVNode(\" 登录表单 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleLoginSubmit && $setup.handleLoginSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginUsername = $event),\n    placeholder: \"用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.loginUsername]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginPassword = $event),\n    placeholder: \"密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.loginPassword]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.keepLoggedInForDays = $event)\n  }, [..._hoisted_4], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.keepLoggedInForDays]]), _hoisted_5], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 注册表单 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $setup.handleRegisterSubmit && $setup.handleRegisterSubmit(...args), [\"prevent\"])),\n    class: \"register-form\"\n  }, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.registerUsername = $event),\n    placeholder: \"用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.registerUsername]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.registerPassword = $event),\n    placeholder: \"密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.registerPassword]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.invitation = $event),\n    placeholder: \"邀请码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.invitation]]), _hoisted_7], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","value","_hoisted_3","type","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$setup","handleLoginSubmit","$event","loginUsername","placeholder","loginPassword","keepLoggedInForDays","_hoisted_4","_hoisted_5","handleRegisterSubmit","class","_hoisted_6","registerUsername","registerPassword","invitation","_hoisted_7"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <div>\n    <h1>欢迎来到我们的网站</h1>\n    <p>请登录以继续操作。</p>\n    <!-- 登录表单 -->\n    <form @submit.prevent=\"handleLoginSubmit\">\n      <input type=\"text\" v-model=\"loginUsername\" placeholder=\"用户名\" />\n      <input type=\"password\" v-model=\"loginPassword\" placeholder=\"密码\" />\n      <select v-model=\"keepLoggedInForDays\"> \n        <option value=\"7\">保持登录7天</option>\n      </select>\n      <button type=\"submit\">登录</button>\n    </form>\n\n\n    <!-- 注册表单 -->\n    <form @submit.prevent=\"handleRegisterSubmit\" class=\"register-form\">\n        <h2>注册</h2>\n        <input type=\"text\" v-model=\"registerUsername\" placeholder=\"用户名\" />\n        <input type=\"password\" v-model=\"registerPassword\" placeholder=\"密码\" />\n        <input type=\"text\" v-model=\"invitation\" placeholder=\"邀请码\" />\n        <button type=\"submit\">注册</button>\n      </form>\n  \n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { login } from '@/store'; \n\n\n// 用于获取csrftoken的函数\nfunction getCsrfToken() {\n  let csrfToken = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith('csrftoken=')) {\n        csrfToken = decodeURIComponent(cookie.substring('csrftoken='.length));\n        break;\n      }\n    }\n  }\n  return csrfToken;\n}\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    // 在组件加载时获取CSRF token\n    const csrfToken = ref(getCsrfToken());\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n    const handleLoginSubmit = () => {\n    // 使用loginUsername.value和loginPassword.value来构造发送数据\n      axios.post('http://localhost:8005/account/login/', {\n        username: loginUsername.value,\n        password: loginPassword.value,\n        keep_logged_in_for_days: keepLoggedInForDays.value // 添加这一行，从select控件取值\n      },\n      {\n        withCredentials: true,  // 确保发送请求时携带credentails（cookies等）\n        headers: {\n          'X-CSRFToken': csrfToken.value,  // 使用组件状态中的CSRF token\n          }\n        })\n       \n      .then(response => {\n        console.log(\"登录成功，用户名: \", loginUsername.value);\n        console.log(response);\n        router.push('/dashboard');\n        login();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    const handleRegisterSubmit = () => {\n    // 同上，构造包含用户名、密码和邀请码的对象来发送\n      axios.post('http://localhost:8005/account/register/', {\n        username: registerUsername.value,\n        password: registerPassword.value,\n        invitationCode: invitation.value // 假设后端接受的参数名为invitationCode\n      },\n      { \n        headers: {\n          'X-CSRFToken': getCsrfToken(), // 同样在这里添加CSRF令牌\n        }\n      })\n      .then(response => {\n        console.log(\"注册成功，用户名: \", registerUsername.value);\n        console.log(response)\n        router.push('/login');\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    };\n    \n    return {\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n      csrfToken, // 添加csrfToken到返回值中\n    };\n  },\n};\n</script>\n\n\n"],"mappings":";gCAGIA,mBAAA,CAAkB,YAAd,WAAS;gCACbA,mBAAA,CAAgB,WAAb,WAAS;gCAMRA,mBAAA,CAAiC;EAAzBC,KAAK,EAAC;AAAG,GAAC,QAAM;oBAAxBC,UAAiC,C;gCAEnCF,mBAAA,CAAiC;EAAzBG,IAAI,EAAC;AAAQ,GAAC,IAAE;gCAMtBH,mBAAA,CAAW,YAAP,IAAE;gCAINA,mBAAA,CAAiC;EAAzBG,IAAI,EAAC;AAAQ,GAAC,IAAE;;uBApB9BC,mBAAA,CAuBM,cAtBJC,UAAkB,EAClBC,UAAgB,EAChBC,mBAAA,UAAa,EACbP,mBAAA,CAOO;IAPAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANjBC,cAAA,KAAAC,IAAA,KAM2BC,MAAA,CAAAC,iBAAA,IAAAD,MAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;sBACtCX,mBAAA,CAA+D;IAAxDG,IAAI,EAAC,MAAM;IAPxB,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAOkCF,MAAA,CAAAG,aAAa,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAA3BJ,MAAA,CAAAG,aAAa,E,mBACzCf,mBAAA,CAAkE;IAA3DG,IAAI,EAAC,UAAU;IAR5B,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAQsCF,MAAA,CAAAK,aAAa,GAAAH,MAAA;IAAEE,WAAW,EAAC;iDAA3BJ,MAAA,CAAAK,aAAa,E,mBAC7CjB,mBAAA,CAES;IAXf,uBAAAS,MAAA,QAAAA,MAAA,MAAAK,MAAA,IASuBF,MAAA,CAAAM,mBAAmB,GAAAJ,MAAA;KAT1C,IAAAK,UAAA,2B,gBASuBP,MAAA,CAAAM,mBAAmB,E,GAGpCE,UAAiC,C,4BAInCb,mBAAA,UAAa,EACbP,mBAAA,CAMS;IANFQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAjBjBC,cAAA,KAAAC,IAAA,KAiB2BC,MAAA,CAAAS,oBAAA,IAAAT,MAAA,CAAAS,oBAAA,IAAAV,IAAA,CAAoB;IAAEW,KAAK,EAAC;MAC/CC,UAAW,E,gBACXvB,mBAAA,CAAkE;IAA3DG,IAAI,EAAC,MAAM;IAnB1B,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAmBoCF,MAAA,CAAAY,gBAAgB,GAAAV,MAAA;IAAEE,WAAW,EAAC;iDAA9BJ,MAAA,CAAAY,gBAAgB,E,mBAC5CxB,mBAAA,CAAqE;IAA9DG,IAAI,EAAC,UAAU;IApB9B,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAoBwCF,MAAA,CAAAa,gBAAgB,GAAAX,MAAA;IAAEE,WAAW,EAAC;iDAA9BJ,MAAA,CAAAa,gBAAgB,E,mBAChDzB,mBAAA,CAA4D;IAArDG,IAAI,EAAC,MAAM;IArB1B,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAqBoCF,MAAA,CAAAc,UAAU,GAAAZ,MAAA;IAAEE,WAAW,EAAC;iDAAxBJ,MAAA,CAAAc,UAAU,E,GACtCC,UAAiC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}