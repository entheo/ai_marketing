{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, defineComponent, inject, ref, watchEffect } from 'vue';\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { notificationProviderInjectionKey } from \"./context.mjs\";\nexport const NotificationContainer = defineComponent({\n  name: 'NotificationContainer',\n  props: {\n    scrollable: {\n      type: Boolean,\n      required: true\n    },\n    placement: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef,\n      wipTransitionCountRef\n    } = inject(notificationProviderInjectionKey);\n    const selfRef = ref(null);\n    watchEffect(() => {\n      var _a, _b;\n      if (wipTransitionCountRef.value > 0) {\n        (_a = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _a === void 0 ? void 0 : _a.classList.add('transitioning');\n      } else {\n        (_b = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _b === void 0 ? void 0 : _b.classList.remove('transitioning');\n      }\n    });\n    return {\n      selfRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      transitioning: wipTransitionCountRef\n    };\n  },\n  render() {\n    const {\n      $slots,\n      scrollable,\n      mergedClsPrefix,\n      mergedTheme,\n      placement\n    } = this;\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-notification-container`, scrollable && `${mergedClsPrefix}-notification-container--scrollable`, `${mergedClsPrefix}-notification-container--${placement}`]\n    }, scrollable ? h(NScrollbar, {\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      contentStyle: {\n        overflow: 'hidden'\n      }\n    }, $slots) : $slots);\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","ref","watchEffect","NScrollbar","notificationProviderInjectionKey","NotificationContainer","name","props","scrollable","type","Boolean","required","placement","String","setup","mergedThemeRef","mergedClsPrefixRef","wipTransitionCountRef","selfRef","_a","_b","value","classList","add","remove","mergedTheme","mergedClsPrefix","transitioning","render","$slots","class","theme","peers","Scrollbar","themeOverrides","peerOverrides","contentStyle","overflow"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/notification/src/NotificationContainer.mjs"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, defineComponent, inject, ref, watchEffect } from 'vue';\nimport { NScrollbar } from \"../../_internal/index.mjs\";\nimport { notificationProviderInjectionKey } from \"./context.mjs\";\nexport const NotificationContainer = defineComponent({\n  name: 'NotificationContainer',\n  props: {\n    scrollable: {\n      type: Boolean,\n      required: true\n    },\n    placement: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef,\n      wipTransitionCountRef\n    } = inject(notificationProviderInjectionKey);\n    const selfRef = ref(null);\n    watchEffect(() => {\n      var _a, _b;\n      if (wipTransitionCountRef.value > 0) {\n        (_a = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _a === void 0 ? void 0 : _a.classList.add('transitioning');\n      } else {\n        (_b = selfRef === null || selfRef === void 0 ? void 0 : selfRef.value) === null || _b === void 0 ? void 0 : _b.classList.remove('transitioning');\n      }\n    });\n    return {\n      selfRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      transitioning: wipTransitionCountRef\n    };\n  },\n  render() {\n    const {\n      $slots,\n      scrollable,\n      mergedClsPrefix,\n      mergedTheme,\n      placement\n    } = this;\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-notification-container`, scrollable && `${mergedClsPrefix}-notification-container--scrollable`, `${mergedClsPrefix}-notification-container--${placement}`]\n    }, scrollable ? h(NScrollbar, {\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      contentStyle: {\n        overflow: 'hidden'\n      }\n    }, $slots) : $slots);\n  }\n});"],"mappings":"AAAA;AACA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,EAAEC,GAAG,EAAEC,WAAW,QAAQ,KAAK;AAClE,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,gCAAgC,QAAQ,eAAe;AAChE,OAAO,MAAMC,qBAAqB,GAAGN,eAAe,CAAC;EACnDO,IAAI,EAAE,uBAAuB;EAC7BC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAM;MACJC,cAAc;MACdC,kBAAkB;MAClBC;IACF,CAAC,GAAGjB,MAAM,CAACI,gCAAgC,CAAC;IAC5C,MAAMc,OAAO,GAAGjB,GAAG,CAAC,IAAI,CAAC;IACzBC,WAAW,CAAC,MAAM;MAChB,IAAIiB,EAAE,EAAEC,EAAE;MACV,IAAIH,qBAAqB,CAACI,KAAK,GAAG,CAAC,EAAE;QACnC,CAACF,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,KAAK,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;MAC/I,CAAC,MAAM;QACL,CAACH,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,KAAK,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;MAClJ;IACF,CAAC,CAAC;IACF,OAAO;MACLN,OAAO;MACPO,WAAW,EAAEV,cAAc;MAC3BW,eAAe,EAAEV,kBAAkB;MACnCW,aAAa,EAAEV;IACjB,CAAC;EACH,CAAC;EACDW,MAAMA,CAAA,EAAG;IACP,MAAM;MACJC,MAAM;MACNrB,UAAU;MACVkB,eAAe;MACfD,WAAW;MACXb;IACF,CAAC,GAAG,IAAI;IACR,OAAOd,CAAC,CAAC,KAAK,EAAE;MACdG,GAAG,EAAE,SAAS;MACd6B,KAAK,EAAE,CAAE,GAAEJ,eAAgB,yBAAwB,EAAElB,UAAU,IAAK,GAAEkB,eAAgB,qCAAoC,EAAG,GAAEA,eAAgB,4BAA2Bd,SAAU,EAAC;IACvL,CAAC,EAAEJ,UAAU,GAAGV,CAAC,CAACK,UAAU,EAAE;MAC5B4B,KAAK,EAAEN,WAAW,CAACO,KAAK,CAACC,SAAS;MAClCC,cAAc,EAAET,WAAW,CAACU,aAAa,CAACF,SAAS;MACnDG,YAAY,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF,CAAC,EAAER,MAAM,CAAC,GAAGA,MAAM,CAAC;EACtB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}