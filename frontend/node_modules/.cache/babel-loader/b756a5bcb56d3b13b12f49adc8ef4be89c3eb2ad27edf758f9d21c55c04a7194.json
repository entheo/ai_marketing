{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/* eslint-disable @typescript-eslint/no-dynamic-delete */\nimport { Fragment, h, reactive, ref, Teleport, defineComponent, provide } from 'vue';\nimport { createId } from 'seemly';\nimport { useConfig, useTheme } from \"../../_mixins/index.mjs\";\nimport { omit, createInjectionKey } from \"../../_utils/index.mjs\";\nimport { notificationLight } from \"../styles/index.mjs\";\nimport { NotificationContainer } from \"./NotificationContainer.mjs\";\nimport { NotificationEnvironment } from \"./NotificationEnvironment.mjs\";\nimport { notificationProviderInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const notificationApiInjectionKey = createInjectionKey('n-notification-api');\nexport const notificationProviderProps = Object.assign(Object.assign({}, useTheme.props), {\n  containerClass: String,\n  containerStyle: [String, Object],\n  to: [String, Object],\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  max: Number,\n  placement: {\n    type: String,\n    default: 'top-right'\n  },\n  keepAliveOnHover: Boolean\n});\nexport default defineComponent({\n  name: 'NotificationProvider',\n  props: notificationProviderProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const notificationListRef = ref([]);\n    const notificationRefs = {};\n    const leavingKeySet = new Set();\n    function create(options) {\n      const key = createId();\n      const destroy = () => {\n        leavingKeySet.add(key);\n        // If you push n + 1 message when max is n, notificationRefs[key] maybe not be set\n        if (notificationRefs[key]) {\n          notificationRefs[key].hide();\n        }\n      };\n      const notificationReactive = reactive(Object.assign(Object.assign({}, options), {\n        key,\n        destroy,\n        hide: destroy,\n        deactivate: destroy\n      }));\n      const {\n        max\n      } = props;\n      if (max && notificationListRef.value.length - leavingKeySet.size >= max) {\n        let someoneMountedRemoved = false;\n        let index = 0;\n        for (const notification of notificationListRef.value) {\n          if (!leavingKeySet.has(notification.key)) {\n            if (notificationRefs[notification.key]) {\n              notification.destroy();\n              someoneMountedRemoved = true;\n            }\n            break;\n          }\n          index++;\n        }\n        if (!someoneMountedRemoved) {\n          notificationListRef.value.splice(index, 1);\n        }\n      }\n      notificationListRef.value.push(notificationReactive);\n      return notificationReactive;\n    }\n    const apis = ['info', 'success', 'warning', 'error'].map(type => {\n      return options => create(Object.assign(Object.assign({}, options), {\n        type\n      }));\n    });\n    function handleAfterLeave(key) {\n      leavingKeySet.delete(key);\n      notificationListRef.value.splice(notificationListRef.value.findIndex(notification => notification.key === key), 1);\n    }\n    const themeRef = useTheme('Notification', '-notification', style, notificationLight, props, mergedClsPrefixRef);\n    const api = {\n      create,\n      info: apis[0],\n      success: apis[1],\n      warning: apis[2],\n      error: apis[3],\n      open,\n      destroyAll\n    };\n    const wipTransitionCountRef = ref(0);\n    provide(notificationApiInjectionKey, api);\n    provide(notificationProviderInjectionKey, {\n      props,\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      wipTransitionCountRef\n    });\n    // deprecated\n    function open(options) {\n      return create(options);\n    }\n    function destroyAll() {\n      Object.values(notificationListRef.value).forEach(notification => {\n        notification.hide();\n      });\n    }\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      notificationList: notificationListRef,\n      notificationRefs,\n      handleAfterLeave\n    }, api);\n  },\n  render() {\n    var _a, _b, _c;\n    const {\n      placement\n    } = this;\n    return h(Fragment, null, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a), this.notificationList.length ? h(Teleport, {\n      to: (_c = this.to) !== null && _c !== void 0 ? _c : 'body'\n    }, h(NotificationContainer, {\n      class: this.containerClass,\n      style: this.containerStyle,\n      scrollable: this.scrollable && placement !== 'top' && placement !== 'bottom',\n      placement: placement\n    }, {\n      default: () => {\n        return this.notificationList.map(notification => {\n          return h(NotificationEnvironment, Object.assign({\n            ref: inst => {\n              const refKey = notification.key;\n              if (inst === null) {\n                delete this.notificationRefs[refKey];\n              } else this.notificationRefs[refKey] = inst;\n            }\n          }, omit(notification, ['destroy', 'hide', 'deactivate']), {\n            internalKey: notification.key,\n            onInternalAfterLeave: this.handleAfterLeave,\n            keepAliveOnHover: notification.keepAliveOnHover === undefined ? this.keepAliveOnHover : notification.keepAliveOnHover\n          }));\n        });\n      }\n    })) : null);\n  }\n});","map":{"version":3,"names":["Fragment","h","reactive","ref","Teleport","defineComponent","provide","createId","useConfig","useTheme","omit","createInjectionKey","notificationLight","NotificationContainer","NotificationEnvironment","notificationProviderInjectionKey","style","notificationApiInjectionKey","notificationProviderProps","Object","assign","props","containerClass","String","containerStyle","to","scrollable","type","Boolean","default","max","Number","placement","keepAliveOnHover","name","setup","mergedClsPrefixRef","notificationListRef","notificationRefs","leavingKeySet","Set","create","options","key","destroy","add","hide","notificationReactive","deactivate","value","length","size","someoneMountedRemoved","index","notification","has","splice","push","apis","map","handleAfterLeave","delete","findIndex","themeRef","api","info","success","warning","error","open","destroyAll","wipTransitionCountRef","mergedThemeRef","values","forEach","mergedClsPrefix","notificationList","render","_a","_b","_c","$slots","call","class","inst","refKey","internalKey","onInternalAfterLeave","undefined"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/notification/src/NotificationProvider.mjs"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-dynamic-delete */\nimport { Fragment, h, reactive, ref, Teleport, defineComponent, provide } from 'vue';\nimport { createId } from 'seemly';\nimport { useConfig, useTheme } from \"../../_mixins/index.mjs\";\nimport { omit, createInjectionKey } from \"../../_utils/index.mjs\";\nimport { notificationLight } from \"../styles/index.mjs\";\nimport { NotificationContainer } from \"./NotificationContainer.mjs\";\nimport { NotificationEnvironment } from \"./NotificationEnvironment.mjs\";\nimport { notificationProviderInjectionKey } from \"./context.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nexport const notificationApiInjectionKey = createInjectionKey('n-notification-api');\nexport const notificationProviderProps = Object.assign(Object.assign({}, useTheme.props), {\n  containerClass: String,\n  containerStyle: [String, Object],\n  to: [String, Object],\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  max: Number,\n  placement: {\n    type: String,\n    default: 'top-right'\n  },\n  keepAliveOnHover: Boolean\n});\nexport default defineComponent({\n  name: 'NotificationProvider',\n  props: notificationProviderProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const notificationListRef = ref([]);\n    const notificationRefs = {};\n    const leavingKeySet = new Set();\n    function create(options) {\n      const key = createId();\n      const destroy = () => {\n        leavingKeySet.add(key);\n        // If you push n + 1 message when max is n, notificationRefs[key] maybe not be set\n        if (notificationRefs[key]) {\n          notificationRefs[key].hide();\n        }\n      };\n      const notificationReactive = reactive(Object.assign(Object.assign({}, options), {\n        key,\n        destroy,\n        hide: destroy,\n        deactivate: destroy\n      }));\n      const {\n        max\n      } = props;\n      if (max && notificationListRef.value.length - leavingKeySet.size >= max) {\n        let someoneMountedRemoved = false;\n        let index = 0;\n        for (const notification of notificationListRef.value) {\n          if (!leavingKeySet.has(notification.key)) {\n            if (notificationRefs[notification.key]) {\n              notification.destroy();\n              someoneMountedRemoved = true;\n            }\n            break;\n          }\n          index++;\n        }\n        if (!someoneMountedRemoved) {\n          notificationListRef.value.splice(index, 1);\n        }\n      }\n      notificationListRef.value.push(notificationReactive);\n      return notificationReactive;\n    }\n    const apis = ['info', 'success', 'warning', 'error'].map(type => {\n      return options => create(Object.assign(Object.assign({}, options), {\n        type\n      }));\n    });\n    function handleAfterLeave(key) {\n      leavingKeySet.delete(key);\n      notificationListRef.value.splice(notificationListRef.value.findIndex(notification => notification.key === key), 1);\n    }\n    const themeRef = useTheme('Notification', '-notification', style, notificationLight, props, mergedClsPrefixRef);\n    const api = {\n      create,\n      info: apis[0],\n      success: apis[1],\n      warning: apis[2],\n      error: apis[3],\n      open,\n      destroyAll\n    };\n    const wipTransitionCountRef = ref(0);\n    provide(notificationApiInjectionKey, api);\n    provide(notificationProviderInjectionKey, {\n      props,\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      wipTransitionCountRef\n    });\n    // deprecated\n    function open(options) {\n      return create(options);\n    }\n    function destroyAll() {\n      Object.values(notificationListRef.value).forEach(notification => {\n        notification.hide();\n      });\n    }\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      notificationList: notificationListRef,\n      notificationRefs,\n      handleAfterLeave\n    }, api);\n  },\n  render() {\n    var _a, _b, _c;\n    const {\n      placement\n    } = this;\n    return h(Fragment, null, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a), this.notificationList.length ? h(Teleport, {\n      to: (_c = this.to) !== null && _c !== void 0 ? _c : 'body'\n    }, h(NotificationContainer, {\n      class: this.containerClass,\n      style: this.containerStyle,\n      scrollable: this.scrollable && placement !== 'top' && placement !== 'bottom',\n      placement: placement\n    }, {\n      default: () => {\n        return this.notificationList.map(notification => {\n          return h(NotificationEnvironment, Object.assign({\n            ref: inst => {\n              const refKey = notification.key;\n              if (inst === null) {\n                delete this.notificationRefs[refKey];\n              } else this.notificationRefs[refKey] = inst;\n            }\n          }, omit(notification, ['destroy', 'hide', 'deactivate']), {\n            internalKey: notification.key,\n            onInternalAfterLeave: this.handleAfterLeave,\n            keepAliveOnHover: notification.keepAliveOnHover === undefined ? this.keepAliveOnHover : notification.keepAliveOnHover\n          }));\n        });\n      }\n    })) : null);\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}