{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_n_button = _resolveComponent(\"n-button\");\n  const _component_n_notification_provider = _resolveComponent(\"n-notification-provider\");\n  return _openBlock(), _createBlock(_component_n_notification_provider, null, {\n    default: _withCtx(() => [_createVNode(_component_n_button, {\n      onClick: $setup.copyText\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"复制\")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_n_notification_provider","default","_withCtx","_createVNode","_component_n_button","onClick","$setup","copyText","_createTextVNode","_"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n  <n-notification-provider>\n    <n-button @click=\"copyText\">复制</n-button>\n  </n-notification-provider>\n</template>\n\n<script setup>\nimport { useNotification } from 'naive-ui';\n\nconst notification = useNotification();\n\nconst copyText = () => {\n  // 这里是点击按钮后要执行的操作。\n  // 作为示例，我们直接触发通知。\n  // 实际使用时，你可以将这里替换为其他逻辑，比如复制文本到剪贴板等。\n  notification.success({\n    content: '复制成功',\n    duration: 2000,\n  });\n};\n</script>\n"],"mappings":";;;;uBACEA,YAAA,CAE0BC,kCAAA;IAH5BC,OAAA,EAAAC,QAAA,CAEI,MAAyC,CAAzCC,YAAA,CAAyCC,mBAAA;MAA9BC,OAAK,EAAEC,MAAA,CAAAC;IAAQ;MAF9BN,OAAA,EAAAC,QAAA,CAEgC,MAAE,CAFlCM,gBAAA,CAEgC,IAAE,E;MAFlCC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}