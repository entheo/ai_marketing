{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, defineComponent, ref, toRef, Transition, withDirectives, computed, provide, watchEffect } from 'vue';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMateOptions, treeSharedProps } from \"../../tree/src/Tree.mjs\";\nimport { NInternalSelection, NBaseFocusDetector } from \"../../_internal/index.mjs\";\nimport { NTree } from \"../../tree/index.mjs\";\nimport { NEmpty } from \"../../empty/index.mjs\";\nimport { useConfig, useFormItem, useLocale, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { call, markEventEffectPerformed, resolveSlot, resolveWrappedSlot, useAdjustedTo, useOnResize, warnOnce } from \"../../_utils/index.mjs\";\nimport { treeSelectLight } from \"../styles/index.mjs\";\nimport { treeSelectInjectionKey } from \"./interface.mjs\";\nimport { treeOption2SelectOption, treeOption2SelectOptionWithPath } from \"./utils.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { useMergedCheckStrategy } from \"../../tree/src/utils.mjs\";\nexport const treeSelectProps = Object.assign(Object.assign(Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: true\n  },\n  cascade: Boolean,\n  checkable: Boolean,\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  consistentMenuWidth: {\n    type: Boolean,\n    default: true\n  },\n  defaultShow: Boolean,\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  filterable: Boolean,\n  checkStrategy: {\n    type: String,\n    default: 'all'\n  },\n  loading: Boolean,\n  maxTagCount: [String, Number],\n  multiple: Boolean,\n  showPath: Boolean,\n  separator: {\n    type: String,\n    default: ' / '\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  placeholder: String,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  value: [String, Number, Array],\n  to: useAdjustedTo.propTo,\n  menuProps: Object,\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n  renderTag: Function,\n  ellipsisTagPopoverProps: Object\n}), treeSharedProps), {\n  renderLabel: Function,\n  renderPrefix: Function,\n  renderSuffix: Function,\n  nodeProps: Function,\n  watchProps: Array,\n  getChildren: Function,\n  onBlur: Function,\n  onFocus: Function,\n  onLoad: Function,\n  onUpdateShow: [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  'onUpdate:show': [Function, Array],\n  /**\n   * @deprecated\n   */\n  leafOnly: Boolean\n});\nexport default defineComponent({\n  name: 'TreeSelect',\n  props: treeSelectProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.leafOnly) {\n          warnOnce('tree-select', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead.');\n        }\n      });\n    }\n    const followerInstRef = ref(null);\n    const triggerInstRef = ref(null);\n    const treeInstRef = ref(null);\n    const menuElRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef\n    } = useLocale('Select');\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef,\n      nTriggerFormBlur,\n      nTriggerFormChange,\n      nTriggerFormFocus,\n      nTriggerFormInput\n    } = useFormItem(props);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const patternRef = ref('');\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, node) => {\n        if (!pattern.length) return true;\n        return node[labelField].toLowerCase().includes(pattern.toLowerCase());\n      };\n    });\n    // used to resolve selected options\n    const dataTreeMateRef = computed(() => createTreeMate(props.options, createTreeMateOptions(props.keyField, props.childrenField, props.disabledField, undefined)));\n    const {\n      value: initMergedValue\n    } = mergedValueRef;\n    const pendingNodeKeyRef = ref(props.checkable ? null : Array.isArray(initMergedValue) && initMergedValue.length ? initMergedValue[initMergedValue.length - 1] : null);\n    const mergedCascadeRef = computed(() => {\n      return props.multiple && props.cascade && props.checkable;\n    });\n    // The same logic as tree, now it's not that complex so I don't extract a\n    // function to reuse it.\n    const uncontrolledExpandedKeysRef = ref(props.defaultExpandAll ? undefined // leave it, n-tree will handle it\n    : props.defaultExpandedKeys || props.expandedKeys);\n    const controlledExpandedKeysRef = toRef(props, 'expandedKeys');\n    const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n    const focusedRef = ref(false);\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const treeSelectedKeysRef = computed(() => {\n      if (props.checkable) return [];\n      return treeCheckedKeysRef.value;\n    });\n    const treeCheckedKeysRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.multiple) {\n        if (Array.isArray(mergedValue)) return mergedValue;else return [];\n      } else {\n        if (mergedValue === null || Array.isArray(mergedValue)) return [];else return [mergedValue];\n      }\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator,\n        labelField\n      } = props;\n      if (multiple) return null;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue) && mergedValue !== null) {\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        const tmNode = treeMate.getNode(mergedValue);\n        if (tmNode !== null) {\n          return showPath ? treeOption2SelectOptionWithPath(tmNode, treeMate.getPath(mergedValue).treeNodePath, separator, labelField) : treeOption2SelectOption(tmNode, labelField);\n        }\n      }\n      return null;\n    });\n    const selectedOptionsRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator\n      } = props;\n      if (!multiple) return null;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) {\n        const res = [];\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        const {\n          checkedKeys\n        } = treeMate.getCheckedKeys(mergedValue, {\n          checkStrategy: props.checkStrategy,\n          cascade: mergedCascadeRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n        const {\n          labelField\n        } = props;\n        checkedKeys.forEach(value => {\n          const tmNode = treeMate.getNode(value);\n          if (tmNode !== null) {\n            res.push(showPath ? treeOption2SelectOptionWithPath(tmNode, treeMate.getPath(value).treeNodePath, separator, labelField) : treeOption2SelectOption(tmNode, labelField));\n          }\n        });\n        return res;\n      }\n      return [];\n    });\n    const menuPaddingRef = computed(() => {\n      const {\n        self: {\n          menuPadding\n        }\n      } = themeRef.value;\n      return menuPadding;\n    });\n    function focusSelection() {\n      var _a;\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    function focusSelectionInput() {\n      var _a;\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    function doUpdateValue(value, option, meta) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) {\n        call(onUpdateValue, value, option, meta);\n      }\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option, meta);\n      }\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n    function doUpdateIndeterminateKeys(value, option) {\n      const {\n        onUpdateIndeterminateKeys,\n        'onUpdate:indeterminateKeys': _onUpdateIndeterminateKeys\n      } = props;\n      if (onUpdateIndeterminateKeys) {\n        call(onUpdateIndeterminateKeys, value, option);\n      }\n      if (_onUpdateIndeterminateKeys) {\n        call(_onUpdateIndeterminateKeys, value, option);\n      }\n    }\n    function doUpdateExpandedKeys(keys, option, meta) {\n      const {\n        onUpdateExpandedKeys,\n        'onUpdate:expandedKeys': _onUpdateExpandedKeys\n      } = props;\n      if (onUpdateExpandedKeys) {\n        call(onUpdateExpandedKeys, keys, option, meta);\n      }\n      if (_onUpdateExpandedKeys) {\n        call(_onUpdateExpandedKeys, keys, option, meta);\n      }\n      uncontrolledExpandedKeysRef.value = keys;\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      if (onFocus) onFocus(e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      closeMenu();\n      const {\n        onBlur\n      } = props;\n      if (onBlur) onBlur(e);\n      nTriggerFormBlur();\n    }\n    function closeMenu() {\n      doUpdateShow(false);\n    }\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        patternRef.value = '';\n        doUpdateShow(true);\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n    function handleMenuLeave() {\n      patternRef.value = '';\n    }\n    function handleMenuClickoutside(e) {\n      var _a;\n      if (mergedShowRef.value) {\n        if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n          // outside select, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value) return;\n      if (!mergedShowRef.value) {\n        openMenu();\n      } else {\n        if (!props.filterable) {\n          // already focused, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function getOptionsByKeys(keys) {\n      const {\n        value: {\n          getNode\n        }\n      } = dataTreeMateRef;\n      return keys.map(key => {\n        var _a;\n        return ((_a = getNode(key)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n      });\n    }\n    function handleUpdateCheckedKeys(keys, _, meta) {\n      const options = getOptionsByKeys(keys);\n      const action = meta.action === 'check' ? 'select' : 'unselect';\n      const node = meta.node;\n      if (props.multiple) {\n        doUpdateValue(keys, options, {\n          node,\n          action\n        });\n        if (props.filterable) {\n          focusSelectionInput();\n          if (props.clearFilterAfterSelect) patternRef.value = '';\n        }\n      } else {\n        keys.length ? doUpdateValue(keys[0], options[0] || null, {\n          node,\n          action\n        }) : doUpdateValue(null, null, {\n          node,\n          action\n        });\n        closeMenu();\n        // Currently it is not necessary. However if there is an action slot,\n        // it will be useful. So just leave it here.\n        focusSelection();\n      }\n    }\n    function handleUpdateIndeterminateKeys(keys) {\n      if (props.checkable) {\n        doUpdateIndeterminateKeys(keys, getOptionsByKeys(keys));\n      }\n    }\n    function handleTriggerFocus(e) {\n      var _a;\n      if ((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) return;\n      focusedRef.value = true;\n      doFocus(e);\n    }\n    function handleTriggerBlur(e) {\n      var _a;\n      if ((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) return;\n      focusedRef.value = false;\n      doBlur(e);\n    }\n    function handleMenuFocusin(e) {\n      var _a, _b, _c;\n      if (((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) || ((_c = (_b = triggerInstRef.value) === null || _b === void 0 ? void 0 : _b.$el) === null || _c === void 0 ? void 0 : _c.contains(e.relatedTarget))) {\n        return;\n      }\n      focusedRef.value = true;\n      doFocus(e);\n    }\n    function handleMenuFocusout(e) {\n      var _a, _b, _c;\n      if (((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) || ((_c = (_b = triggerInstRef.value) === null || _b === void 0 ? void 0 : _b.$el) === null || _c === void 0 ? void 0 : _c.contains(e.relatedTarget))) {\n        return;\n      }\n      focusedRef.value = false;\n      doBlur(e);\n    }\n    function handleClear(e) {\n      e.stopPropagation();\n      const {\n        multiple\n      } = props;\n      if (!multiple && props.filterable) {\n        closeMenu();\n      }\n      if (multiple) {\n        doUpdateValue([], [], {\n          node: null,\n          action: 'clear'\n        });\n      } else {\n        doUpdateValue(null, null, {\n          node: null,\n          action: 'clear'\n        });\n      }\n    }\n    function handleDeleteOption(option) {\n      // only work for multiple mode\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) {\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        // all visible checked keys\n        const {\n          checkedKeys: checkedKeysValue\n        } = treeMate.getCheckedKeys(mergedValue, {\n          cascade: mergedCascadeRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n        const index = checkedKeysValue.findIndex(key => key === option.value);\n        if (~index) {\n          const checkedKeyToBeRemoved = checkedKeysValue[index];\n          const checkOptionToBeRemoved = getOptionsByKeys([checkedKeyToBeRemoved])[0];\n          if (props.checkable) {\n            const {\n              checkedKeys\n            } = treeMate.uncheck(option.value, checkedKeysValue, {\n              checkStrategy: props.checkStrategy,\n              cascade: mergedCascadeRef.value,\n              allowNotLoaded: props.allowCheckingNotLoaded\n            });\n            doUpdateValue(checkedKeys, getOptionsByKeys(checkedKeys), {\n              node: checkOptionToBeRemoved,\n              action: 'delete'\n            });\n          } else {\n            const nextValue = Array.from(checkedKeysValue);\n            nextValue.splice(index, 1);\n            doUpdateValue(nextValue, getOptionsByKeys(nextValue), {\n              node: checkOptionToBeRemoved,\n              action: 'delete'\n            });\n          }\n        }\n      }\n    }\n    function handlePatternInput(e) {\n      const {\n        value\n      } = e.target;\n      patternRef.value = value;\n    }\n    function treeHandleKeydown(e) {\n      const {\n        value: treeInst\n      } = treeInstRef;\n      if (treeInst) {\n        return treeInst.handleKeydown(e);\n      }\n      return {\n        enterBehavior: null\n      };\n    }\n    function handleKeydown(e) {\n      if (e.key === 'Enter') {\n        if (mergedShowRef.value) {\n          const {\n            enterBehavior\n          } = treeHandleKeydown(e);\n          if (!props.multiple) {\n            switch (enterBehavior) {\n              case 'default':\n              case 'toggleSelect':\n                closeMenu();\n                focusSelection();\n                break;\n              default:\n                break;\n            }\n          }\n        } else {\n          openMenu();\n        }\n        e.preventDefault();\n      } else if (e.key === 'Escape') {\n        if (mergedShowRef.value) {\n          markEventEffectPerformed(e);\n          closeMenu();\n          focusSelection();\n        }\n      } else {\n        if (mergedShowRef.value) {\n          treeHandleKeydown(e);\n        } else if (e.key === 'ArrowDown') {\n          openMenu();\n        }\n      }\n    }\n    function handleTabOut() {\n      closeMenu();\n      focusSelection();\n    }\n    function handleMenuMousedown(e) {\n      // If there's an action slot later, we need to check if mousedown happens\n      // in action panel\n      if (!happensIn(e, 'action')) e.preventDefault();\n    }\n    const selectionRenderTagRef = computed(() => {\n      const {\n        renderTag\n      } = props;\n      if (!renderTag) return undefined;\n      return function selectionRenderTag({\n        option,\n        handleClose\n      }) {\n        const {\n          value\n        } = option;\n        if (value !== undefined) {\n          const treeOption = dataTreeMateRef.value.getNode(value);\n          if (treeOption) {\n            return renderTag({\n              option: treeOption.rawNode,\n              handleClose\n            });\n          }\n        }\n        return value;\n      };\n    });\n    provide(treeSelectInjectionKey, {\n      pendingNodeKeyRef,\n      dataTreeMate: dataTreeMateRef\n    });\n    function handleTriggerOrMenuResize() {\n      var _a;\n      if (!mergedShowRef.value) return;\n      (_a = followerInstRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n    useOnResize(menuElRef, handleTriggerOrMenuResize);\n    const mergedCheckStrategyRef = useMergedCheckStrategy(props);\n    const exposedCheckedStatusRef = computed(() => {\n      if (props.checkable) {\n        const mergedValue = mergedValueRef.value;\n        if (props.multiple && Array.isArray(mergedValue)) {\n          return dataTreeMateRef.value.getCheckedKeys(mergedValue, {\n            cascade: props.cascade,\n            checkStrategy: mergedCheckStrategyRef.value,\n            allowNotLoaded: props.allowCheckingNotLoaded\n          });\n        } else {\n          return {\n            checkedKeys: Array.isArray(mergedValue) || mergedValue === null ? [] : [mergedValue],\n            indeterminateKeys: []\n          };\n        }\n      }\n      return {\n        checkedKeys: [],\n        indeterminateKeys: []\n      };\n    });\n    const exposedMethods = {\n      getCheckedData: () => {\n        const {\n          checkedKeys\n        } = exposedCheckedStatusRef.value;\n        return {\n          keys: checkedKeys,\n          options: getOptionsByKeys(checkedKeys)\n        };\n      },\n      getIndeterminateData: () => {\n        const {\n          indeterminateKeys\n        } = exposedCheckedStatusRef.value;\n        return {\n          keys: indeterminateKeys,\n          options: getOptionsByKeys(indeterminateKeys)\n        };\n      },\n      focus: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      focusInput: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n      },\n      blur: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      blurInput: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blurInput();\n      }\n    };\n    const themeRef = useTheme('TreeSelect', '-tree-select', style, treeSelectLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          menuBoxShadow,\n          menuBorderRadius,\n          menuColor,\n          menuHeight,\n          actionPadding,\n          actionDividerColor,\n          actionTextColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-menu-box-shadow': menuBoxShadow,\n        '--n-menu-border-radius': menuBorderRadius,\n        '--n-menu-color': menuColor,\n        '--n-menu-height': menuHeight,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-action-padding': actionPadding,\n        '--n-action-text-color': actionTextColor,\n        '--n-action-divider-color': actionDividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('tree-select', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      menuElRef,\n      mergedStatus: mergedStatusRef,\n      triggerInstRef,\n      followerInstRef,\n      treeInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: mergedValueRef,\n      mergedShow: mergedShowRef,\n      namespace: namespaceRef,\n      adjustedTo: useAdjustedTo(props),\n      isMounted: useIsMounted(),\n      focused: focusedRef,\n      menuPadding: menuPaddingRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      mergedExpandedKeys: mergedExpandedKeysRef,\n      treeSelectedKeys: treeSelectedKeysRef,\n      treeCheckedKeys: treeCheckedKeysRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      pattern: patternRef,\n      pendingNodeKey: pendingNodeKeyRef,\n      mergedCascade: mergedCascadeRef,\n      mergedFilter: mergedFilterRef,\n      selectionRenderTag: selectionRenderTagRef,\n      handleTriggerOrMenuResize,\n      doUpdateExpandedKeys,\n      handleMenuLeave,\n      handleTriggerClick,\n      handleMenuClickoutside,\n      handleUpdateCheckedKeys,\n      handleUpdateIndeterminateKeys,\n      handleTriggerFocus,\n      handleTriggerBlur,\n      handleMenuFocusin,\n      handleMenuFocusout,\n      handleClear,\n      handleDeleteOption,\n      handlePatternInput,\n      handleKeydown,\n      handleTabOut,\n      handleMenuMousedown,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    const {\n      mergedTheme,\n      mergedClsPrefix,\n      $slots\n    } = this;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-tree-select`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerInstRef\",\n          onResize: this.handleTriggerOrMenuResize,\n          status: this.mergedStatus,\n          focused: this.focused,\n          clsPrefix: mergedClsPrefix,\n          theme: mergedTheme.peers.InternalSelection,\n          themeOverrides: mergedTheme.peerOverrides.InternalSelection,\n          ellipsisTagPopoverProps: this.ellipsisTagPopoverProps,\n          renderTag: this.selectionRenderTag,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          size: this.mergedSize,\n          bordered: this.bordered,\n          placeholder: this.mergedPlaceholder,\n          disabled: this.mergedDisabled,\n          active: this.mergedShow,\n          loading: this.loading,\n          multiple: this.multiple,\n          maxTagCount: this.maxTagCount,\n          showArrow: true,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          pattern: this.pattern,\n          onPatternInput: this.handlePatternInput,\n          onClear: this.handleClear,\n          onClick: this.handleTriggerClick,\n          onFocus: this.handleTriggerFocus,\n          onBlur: this.handleTriggerBlur,\n          onDeleteOption: this.handleDeleteOption,\n          onKeydown: this.handleKeydown\n        }, {\n          arrow: () => {\n            var _a, _b;\n            return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)];\n          }\n        })\n      }), h(VFollower, {\n        ref: \"followerInstRef\",\n        show: this.mergedShow,\n        placement: this.placement,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        containerClass: this.namespace,\n        width: this.consistentMenuWidth ? 'target' : undefined,\n        minWidth: \"target\"\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted,\n          onLeave: this.handleMenuLeave\n        }, {\n          default: () => {\n            var _a;\n            if (!this.mergedShow) return null;\n            const {\n              mergedClsPrefix,\n              checkable,\n              multiple,\n              menuProps,\n              options\n            } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return withDirectives(h(\"div\", Object.assign({}, menuProps, {\n              class: [`${mergedClsPrefix}-tree-select-menu`, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class, this.themeClass],\n              ref: \"menuElRef\",\n              style: [(menuProps === null || menuProps === void 0 ? void 0 : menuProps.style) || '', this.cssVars],\n              tabindex: 0,\n              onMousedown: this.handleMenuMousedown,\n              onKeydown: this.handleKeydown,\n              onFocusin: this.handleMenuFocusin,\n              onFocusout: this.handleMenuFocusout\n            }), h(NTree, {\n              ref: \"treeInstRef\",\n              blockLine: true,\n              allowCheckingNotLoaded: this.allowCheckingNotLoaded,\n              showIrrelevantNodes: false,\n              animated: false,\n              pattern: this.pattern,\n              getChildren: this.getChildren,\n              filter: this.mergedFilter,\n              data: options,\n              cancelable: multiple,\n              labelField: this.labelField,\n              keyField: this.keyField,\n              disabledField: this.disabledField,\n              childrenField: this.childrenField,\n              theme: mergedTheme.peers.Tree,\n              themeOverrides: mergedTheme.peerOverrides.Tree,\n              defaultExpandAll: this.defaultExpandAll,\n              defaultExpandedKeys: this.defaultExpandedKeys,\n              expandedKeys: this.mergedExpandedKeys,\n              checkedKeys: this.treeCheckedKeys,\n              selectedKeys: this.treeSelectedKeys,\n              checkable: checkable,\n              checkStrategy: this.checkStrategy,\n              cascade: this.mergedCascade,\n              leafOnly: this.leafOnly,\n              multiple: this.multiple,\n              renderLabel: this.renderLabel,\n              renderPrefix: this.renderPrefix,\n              renderSuffix: this.renderSuffix,\n              renderSwitcherIcon: this.renderSwitcherIcon,\n              nodeProps: this.nodeProps,\n              watchProps: this.watchProps,\n              virtualScroll: this.consistentMenuWidth && this.virtualScroll,\n              overrideDefaultNodeClickBehavior: this.overrideDefaultNodeClickBehavior,\n              internalTreeSelect: true,\n              internalUnifySelectCheck: true,\n              internalScrollable: true,\n              internalScrollablePadding: this.menuPadding,\n              internalFocusable: false,\n              internalCheckboxFocusable: false,\n              internalRenderEmpty: () => h(\"div\", {\n                class: `${mergedClsPrefix}-tree-select-menu__empty`\n              }, resolveSlot($slots.empty, () => [h(NEmpty, {\n                theme: mergedTheme.peers.Empty,\n                themeOverrides: mergedTheme.peerOverrides.Empty\n              })])),\n              onLoad: this.onLoad,\n              onUpdateCheckedKeys: this.handleUpdateCheckedKeys,\n              onUpdateIndeterminateKeys: this.handleUpdateIndeterminateKeys,\n              onUpdateExpandedKeys: this.doUpdateExpandedKeys\n            }), resolveWrappedSlot($slots.action, children => {\n              return children ? h(\"div\", {\n                class: `${mergedClsPrefix}-tree-select-menu__action`,\n                \"data-action\": true\n              }, children) : null;\n            }), h(NBaseFocusDetector, {\n              onFocus: this.handleTabOut\n            })), [[clickoutside, this.handleMenuClickoutside, undefined, {\n              capture: true\n            }]]);\n          }\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","toRef","Transition","withDirectives","computed","provide","watchEffect","VBinder","VFollower","VTarget","useIsMounted","useMergedState","clickoutside","createTreeMate","getPreciseEventTarget","happensIn","createTreeMateOptions","treeSharedProps","NInternalSelection","NBaseFocusDetector","NTree","NEmpty","useConfig","useFormItem","useLocale","useTheme","useThemeClass","call","markEventEffectPerformed","resolveSlot","resolveWrappedSlot","useAdjustedTo","useOnResize","warnOnce","treeSelectLight","treeSelectInjectionKey","treeOption2SelectOption","treeOption2SelectOptionWithPath","style","useMergedCheckStrategy","treeSelectProps","Object","assign","props","bordered","type","Boolean","default","cascade","checkable","clearable","clearFilterAfterSelect","consistentMenuWidth","defaultShow","defaultValue","String","Number","Array","disabled","undefined","filterable","checkStrategy","loading","maxTagCount","multiple","showPath","separator","options","placeholder","placement","show","size","value","to","propTo","menuProps","virtualScroll","status","renderTag","Function","ellipsisTagPopoverProps","renderLabel","renderPrefix","renderSuffix","nodeProps","watchProps","getChildren","onBlur","onFocus","onLoad","onUpdateShow","onUpdateValue","leafOnly","name","setup","process","env","NODE_ENV","followerInstRef","triggerInstRef","treeInstRef","menuElRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","localeRef","mergedSizeRef","mergedDisabledRef","mergedStatusRef","nTriggerFormBlur","nTriggerFormChange","nTriggerFormFocus","nTriggerFormInput","uncontrolledValueRef","controlledValueRef","mergedValueRef","uncontrolledShowRef","controlledShowRef","mergedShowRef","patternRef","mergedFilterRef","filter","labelField","pattern","node","length","toLowerCase","includes","dataTreeMateRef","keyField","childrenField","disabledField","initMergedValue","pendingNodeKeyRef","isArray","mergedCascadeRef","uncontrolledExpandedKeysRef","defaultExpandAll","defaultExpandedKeys","expandedKeys","controlledExpandedKeysRef","mergedExpandedKeysRef","focusedRef","mergedPlaceholderRef","treeSelectedKeysRef","treeCheckedKeysRef","mergedValue","selectedOptionRef","treeMate","tmNode","getNode","getPath","treeNodePath","selectedOptionsRef","res","checkedKeys","getCheckedKeys","allowNotLoaded","allowCheckingNotLoaded","forEach","push","menuPaddingRef","self","menuPadding","themeRef","focusSelection","_a","focus","focusSelectionInput","focusInput","doUpdateShow","_onUpdateShow","doUpdateValue","option","meta","_onUpdateValue","doUpdateIndeterminateKeys","onUpdateIndeterminateKeys","_onUpdateIndeterminateKeys","doUpdateExpandedKeys","keys","onUpdateExpandedKeys","_onUpdateExpandedKeys","doFocus","e","doBlur","closeMenu","openMenu","handleMenuLeave","handleMenuClickoutside","$el","contains","handleTriggerClick","getOptionsByKeys","map","key","rawNode","handleUpdateCheckedKeys","_","action","handleUpdateIndeterminateKeys","handleTriggerFocus","relatedTarget","handleTriggerBlur","handleMenuFocusin","_b","_c","handleMenuFocusout","handleClear","stopPropagation","handleDeleteOption","checkedKeysValue","index","findIndex","checkedKeyToBeRemoved","checkOptionToBeRemoved","uncheck","nextValue","from","splice","handlePatternInput","target","treeHandleKeydown","treeInst","handleKeydown","enterBehavior","preventDefault","handleTabOut","handleMenuMousedown","selectionRenderTagRef","selectionRenderTag","handleClose","treeOption","dataTreeMate","handleTriggerOrMenuResize","syncPosition","mergedCheckStrategyRef","exposedCheckedStatusRef","indeterminateKeys","exposedMethods","getCheckedData","getIndeterminateData","blur","blurInput","cssVarsRef","common","cubicBezierEaseInOut","menuBoxShadow","menuBorderRadius","menuColor","menuHeight","actionPadding","actionDividerColor","actionTextColor","themeClassHandle","mergedStatus","mergedClsPrefix","mergedShow","namespace","adjustedTo","isMounted","focused","mergedPlaceholder","mergedExpandedKeys","treeSelectedKeys","treeCheckedKeys","mergedSize","mergedDisabled","selectedOption","selectedOptions","pendingNodeKey","mergedCascade","mergedFilter","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","onResize","clsPrefix","theme","peers","InternalSelection","themeOverrides","peerOverrides","active","showArrow","onPatternInput","onClear","onClick","onDeleteOption","onKeydown","arrow","teleportDisabled","tdkey","containerClass","width","minWidth","appear","onLeave","tabindex","onMousedown","onFocusin","onFocusout","blockLine","showIrrelevantNodes","animated","data","cancelable","Tree","selectedKeys","renderSwitcherIcon","overrideDefaultNodeClickBehavior","internalTreeSelect","internalUnifySelectCheck","internalScrollable","internalScrollablePadding","internalFocusable","internalCheckboxFocusable","internalRenderEmpty","empty","Empty","onUpdateCheckedKeys","children","capture"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/tree-select/src/TreeSelect.mjs"],"sourcesContent":["import { h, defineComponent, ref, toRef, Transition, withDirectives, computed, provide, watchEffect } from 'vue';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMateOptions, treeSharedProps } from \"../../tree/src/Tree.mjs\";\nimport { NInternalSelection, NBaseFocusDetector } from \"../../_internal/index.mjs\";\nimport { NTree } from \"../../tree/index.mjs\";\nimport { NEmpty } from \"../../empty/index.mjs\";\nimport { useConfig, useFormItem, useLocale, useTheme, useThemeClass } from \"../../_mixins/index.mjs\";\nimport { call, markEventEffectPerformed, resolveSlot, resolveWrappedSlot, useAdjustedTo, useOnResize, warnOnce } from \"../../_utils/index.mjs\";\nimport { treeSelectLight } from \"../styles/index.mjs\";\nimport { treeSelectInjectionKey } from \"./interface.mjs\";\nimport { treeOption2SelectOption, treeOption2SelectOptionWithPath } from \"./utils.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nimport { useMergedCheckStrategy } from \"../../tree/src/utils.mjs\";\nexport const treeSelectProps = Object.assign(Object.assign(Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: true\n  },\n  cascade: Boolean,\n  checkable: Boolean,\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  consistentMenuWidth: {\n    type: Boolean,\n    default: true\n  },\n  defaultShow: Boolean,\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  filterable: Boolean,\n  checkStrategy: {\n    type: String,\n    default: 'all'\n  },\n  loading: Boolean,\n  maxTagCount: [String, Number],\n  multiple: Boolean,\n  showPath: Boolean,\n  separator: {\n    type: String,\n    default: ' / '\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  placeholder: String,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  value: [String, Number, Array],\n  to: useAdjustedTo.propTo,\n  menuProps: Object,\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n  renderTag: Function,\n  ellipsisTagPopoverProps: Object\n}), treeSharedProps), {\n  renderLabel: Function,\n  renderPrefix: Function,\n  renderSuffix: Function,\n  nodeProps: Function,\n  watchProps: Array,\n  getChildren: Function,\n  onBlur: Function,\n  onFocus: Function,\n  onLoad: Function,\n  onUpdateShow: [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  'onUpdate:show': [Function, Array],\n  /**\n   * @deprecated\n   */\n  leafOnly: Boolean\n});\nexport default defineComponent({\n  name: 'TreeSelect',\n  props: treeSelectProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.leafOnly) {\n          warnOnce('tree-select', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead.');\n        }\n      });\n    }\n    const followerInstRef = ref(null);\n    const triggerInstRef = ref(null);\n    const treeInstRef = ref(null);\n    const menuElRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef\n    } = useLocale('Select');\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef,\n      nTriggerFormBlur,\n      nTriggerFormChange,\n      nTriggerFormFocus,\n      nTriggerFormInput\n    } = useFormItem(props);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const patternRef = ref('');\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, node) => {\n        if (!pattern.length) return true;\n        return node[labelField].toLowerCase().includes(pattern.toLowerCase());\n      };\n    });\n    // used to resolve selected options\n    const dataTreeMateRef = computed(() => createTreeMate(props.options, createTreeMateOptions(props.keyField, props.childrenField, props.disabledField, undefined)));\n    const {\n      value: initMergedValue\n    } = mergedValueRef;\n    const pendingNodeKeyRef = ref(props.checkable ? null : Array.isArray(initMergedValue) && initMergedValue.length ? initMergedValue[initMergedValue.length - 1] : null);\n    const mergedCascadeRef = computed(() => {\n      return props.multiple && props.cascade && props.checkable;\n    });\n    // The same logic as tree, now it's not that complex so I don't extract a\n    // function to reuse it.\n    const uncontrolledExpandedKeysRef = ref(props.defaultExpandAll ? undefined // leave it, n-tree will handle it\n    : props.defaultExpandedKeys || props.expandedKeys);\n    const controlledExpandedKeysRef = toRef(props, 'expandedKeys');\n    const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n    const focusedRef = ref(false);\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const treeSelectedKeysRef = computed(() => {\n      if (props.checkable) return [];\n      return treeCheckedKeysRef.value;\n    });\n    const treeCheckedKeysRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (props.multiple) {\n        if (Array.isArray(mergedValue)) return mergedValue;else return [];\n      } else {\n        if (mergedValue === null || Array.isArray(mergedValue)) return [];else return [mergedValue];\n      }\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator,\n        labelField\n      } = props;\n      if (multiple) return null;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue) && mergedValue !== null) {\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        const tmNode = treeMate.getNode(mergedValue);\n        if (tmNode !== null) {\n          return showPath ? treeOption2SelectOptionWithPath(tmNode, treeMate.getPath(mergedValue).treeNodePath, separator, labelField) : treeOption2SelectOption(tmNode, labelField);\n        }\n      }\n      return null;\n    });\n    const selectedOptionsRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator\n      } = props;\n      if (!multiple) return null;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) {\n        const res = [];\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        const {\n          checkedKeys\n        } = treeMate.getCheckedKeys(mergedValue, {\n          checkStrategy: props.checkStrategy,\n          cascade: mergedCascadeRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n        const {\n          labelField\n        } = props;\n        checkedKeys.forEach(value => {\n          const tmNode = treeMate.getNode(value);\n          if (tmNode !== null) {\n            res.push(showPath ? treeOption2SelectOptionWithPath(tmNode, treeMate.getPath(value).treeNodePath, separator, labelField) : treeOption2SelectOption(tmNode, labelField));\n          }\n        });\n        return res;\n      }\n      return [];\n    });\n    const menuPaddingRef = computed(() => {\n      const {\n        self: {\n          menuPadding\n        }\n      } = themeRef.value;\n      return menuPadding;\n    });\n    function focusSelection() {\n      var _a;\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    function focusSelectionInput() {\n      var _a;\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    function doUpdateValue(value, option, meta) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) {\n        call(onUpdateValue, value, option, meta);\n      }\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option, meta);\n      }\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n    function doUpdateIndeterminateKeys(value, option) {\n      const {\n        onUpdateIndeterminateKeys,\n        'onUpdate:indeterminateKeys': _onUpdateIndeterminateKeys\n      } = props;\n      if (onUpdateIndeterminateKeys) {\n        call(onUpdateIndeterminateKeys, value, option);\n      }\n      if (_onUpdateIndeterminateKeys) {\n        call(_onUpdateIndeterminateKeys, value, option);\n      }\n    }\n    function doUpdateExpandedKeys(keys, option, meta) {\n      const {\n        onUpdateExpandedKeys,\n        'onUpdate:expandedKeys': _onUpdateExpandedKeys\n      } = props;\n      if (onUpdateExpandedKeys) {\n        call(onUpdateExpandedKeys, keys, option, meta);\n      }\n      if (_onUpdateExpandedKeys) {\n        call(_onUpdateExpandedKeys, keys, option, meta);\n      }\n      uncontrolledExpandedKeysRef.value = keys;\n    }\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      if (onFocus) onFocus(e);\n      nTriggerFormFocus();\n    }\n    function doBlur(e) {\n      closeMenu();\n      const {\n        onBlur\n      } = props;\n      if (onBlur) onBlur(e);\n      nTriggerFormBlur();\n    }\n    function closeMenu() {\n      doUpdateShow(false);\n    }\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        patternRef.value = '';\n        doUpdateShow(true);\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n    function handleMenuLeave() {\n      patternRef.value = '';\n    }\n    function handleMenuClickoutside(e) {\n      var _a;\n      if (mergedShowRef.value) {\n        if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n          // outside select, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value) return;\n      if (!mergedShowRef.value) {\n        openMenu();\n      } else {\n        if (!props.filterable) {\n          // already focused, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function getOptionsByKeys(keys) {\n      const {\n        value: {\n          getNode\n        }\n      } = dataTreeMateRef;\n      return keys.map(key => {\n        var _a;\n        return ((_a = getNode(key)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n      });\n    }\n    function handleUpdateCheckedKeys(keys, _, meta) {\n      const options = getOptionsByKeys(keys);\n      const action = meta.action === 'check' ? 'select' : 'unselect';\n      const node = meta.node;\n      if (props.multiple) {\n        doUpdateValue(keys, options, {\n          node,\n          action\n        });\n        if (props.filterable) {\n          focusSelectionInput();\n          if (props.clearFilterAfterSelect) patternRef.value = '';\n        }\n      } else {\n        keys.length ? doUpdateValue(keys[0], options[0] || null, {\n          node,\n          action\n        }) : doUpdateValue(null, null, {\n          node,\n          action\n        });\n        closeMenu();\n        // Currently it is not necessary. However if there is an action slot,\n        // it will be useful. So just leave it here.\n        focusSelection();\n      }\n    }\n    function handleUpdateIndeterminateKeys(keys) {\n      if (props.checkable) {\n        doUpdateIndeterminateKeys(keys, getOptionsByKeys(keys));\n      }\n    }\n    function handleTriggerFocus(e) {\n      var _a;\n      if ((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) return;\n      focusedRef.value = true;\n      doFocus(e);\n    }\n    function handleTriggerBlur(e) {\n      var _a;\n      if ((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) return;\n      focusedRef.value = false;\n      doBlur(e);\n    }\n    function handleMenuFocusin(e) {\n      var _a, _b, _c;\n      if (((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) || ((_c = (_b = triggerInstRef.value) === null || _b === void 0 ? void 0 : _b.$el) === null || _c === void 0 ? void 0 : _c.contains(e.relatedTarget))) {\n        return;\n      }\n      focusedRef.value = true;\n      doFocus(e);\n    }\n    function handleMenuFocusout(e) {\n      var _a, _b, _c;\n      if (((_a = menuElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.relatedTarget)) || ((_c = (_b = triggerInstRef.value) === null || _b === void 0 ? void 0 : _b.$el) === null || _c === void 0 ? void 0 : _c.contains(e.relatedTarget))) {\n        return;\n      }\n      focusedRef.value = false;\n      doBlur(e);\n    }\n    function handleClear(e) {\n      e.stopPropagation();\n      const {\n        multiple\n      } = props;\n      if (!multiple && props.filterable) {\n        closeMenu();\n      }\n      if (multiple) {\n        doUpdateValue([], [], {\n          node: null,\n          action: 'clear'\n        });\n      } else {\n        doUpdateValue(null, null, {\n          node: null,\n          action: 'clear'\n        });\n      }\n    }\n    function handleDeleteOption(option) {\n      // only work for multiple mode\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) {\n        const {\n          value: treeMate\n        } = dataTreeMateRef;\n        // all visible checked keys\n        const {\n          checkedKeys: checkedKeysValue\n        } = treeMate.getCheckedKeys(mergedValue, {\n          cascade: mergedCascadeRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n        const index = checkedKeysValue.findIndex(key => key === option.value);\n        if (~index) {\n          const checkedKeyToBeRemoved = checkedKeysValue[index];\n          const checkOptionToBeRemoved = getOptionsByKeys([checkedKeyToBeRemoved])[0];\n          if (props.checkable) {\n            const {\n              checkedKeys\n            } = treeMate.uncheck(option.value, checkedKeysValue, {\n              checkStrategy: props.checkStrategy,\n              cascade: mergedCascadeRef.value,\n              allowNotLoaded: props.allowCheckingNotLoaded\n            });\n            doUpdateValue(checkedKeys, getOptionsByKeys(checkedKeys), {\n              node: checkOptionToBeRemoved,\n              action: 'delete'\n            });\n          } else {\n            const nextValue = Array.from(checkedKeysValue);\n            nextValue.splice(index, 1);\n            doUpdateValue(nextValue, getOptionsByKeys(nextValue), {\n              node: checkOptionToBeRemoved,\n              action: 'delete'\n            });\n          }\n        }\n      }\n    }\n    function handlePatternInput(e) {\n      const {\n        value\n      } = e.target;\n      patternRef.value = value;\n    }\n    function treeHandleKeydown(e) {\n      const {\n        value: treeInst\n      } = treeInstRef;\n      if (treeInst) {\n        return treeInst.handleKeydown(e);\n      }\n      return {\n        enterBehavior: null\n      };\n    }\n    function handleKeydown(e) {\n      if (e.key === 'Enter') {\n        if (mergedShowRef.value) {\n          const {\n            enterBehavior\n          } = treeHandleKeydown(e);\n          if (!props.multiple) {\n            switch (enterBehavior) {\n              case 'default':\n              case 'toggleSelect':\n                closeMenu();\n                focusSelection();\n                break;\n              default:\n                break;\n            }\n          }\n        } else {\n          openMenu();\n        }\n        e.preventDefault();\n      } else if (e.key === 'Escape') {\n        if (mergedShowRef.value) {\n          markEventEffectPerformed(e);\n          closeMenu();\n          focusSelection();\n        }\n      } else {\n        if (mergedShowRef.value) {\n          treeHandleKeydown(e);\n        } else if (e.key === 'ArrowDown') {\n          openMenu();\n        }\n      }\n    }\n    function handleTabOut() {\n      closeMenu();\n      focusSelection();\n    }\n    function handleMenuMousedown(e) {\n      // If there's an action slot later, we need to check if mousedown happens\n      // in action panel\n      if (!happensIn(e, 'action')) e.preventDefault();\n    }\n    const selectionRenderTagRef = computed(() => {\n      const {\n        renderTag\n      } = props;\n      if (!renderTag) return undefined;\n      return function selectionRenderTag({\n        option,\n        handleClose\n      }) {\n        const {\n          value\n        } = option;\n        if (value !== undefined) {\n          const treeOption = dataTreeMateRef.value.getNode(value);\n          if (treeOption) {\n            return renderTag({\n              option: treeOption.rawNode,\n              handleClose\n            });\n          }\n        }\n        return value;\n      };\n    });\n    provide(treeSelectInjectionKey, {\n      pendingNodeKeyRef,\n      dataTreeMate: dataTreeMateRef\n    });\n    function handleTriggerOrMenuResize() {\n      var _a;\n      if (!mergedShowRef.value) return;\n      (_a = followerInstRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n    useOnResize(menuElRef, handleTriggerOrMenuResize);\n    const mergedCheckStrategyRef = useMergedCheckStrategy(props);\n    const exposedCheckedStatusRef = computed(() => {\n      if (props.checkable) {\n        const mergedValue = mergedValueRef.value;\n        if (props.multiple && Array.isArray(mergedValue)) {\n          return dataTreeMateRef.value.getCheckedKeys(mergedValue, {\n            cascade: props.cascade,\n            checkStrategy: mergedCheckStrategyRef.value,\n            allowNotLoaded: props.allowCheckingNotLoaded\n          });\n        } else {\n          return {\n            checkedKeys: Array.isArray(mergedValue) || mergedValue === null ? [] : [mergedValue],\n            indeterminateKeys: []\n          };\n        }\n      }\n      return {\n        checkedKeys: [],\n        indeterminateKeys: []\n      };\n    });\n    const exposedMethods = {\n      getCheckedData: () => {\n        const {\n          checkedKeys\n        } = exposedCheckedStatusRef.value;\n        return {\n          keys: checkedKeys,\n          options: getOptionsByKeys(checkedKeys)\n        };\n      },\n      getIndeterminateData: () => {\n        const {\n          indeterminateKeys\n        } = exposedCheckedStatusRef.value;\n        return {\n          keys: indeterminateKeys,\n          options: getOptionsByKeys(indeterminateKeys)\n        };\n      },\n      focus: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      focusInput: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n      },\n      blur: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      blurInput: () => {\n        var _a;\n        return (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blurInput();\n      }\n    };\n    const themeRef = useTheme('TreeSelect', '-tree-select', style, treeSelectLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          menuBoxShadow,\n          menuBorderRadius,\n          menuColor,\n          menuHeight,\n          actionPadding,\n          actionDividerColor,\n          actionTextColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-menu-box-shadow': menuBoxShadow,\n        '--n-menu-border-radius': menuBorderRadius,\n        '--n-menu-color': menuColor,\n        '--n-menu-height': menuHeight,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-action-padding': actionPadding,\n        '--n-action-text-color': actionTextColor,\n        '--n-action-divider-color': actionDividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('tree-select', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      menuElRef,\n      mergedStatus: mergedStatusRef,\n      triggerInstRef,\n      followerInstRef,\n      treeInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: mergedValueRef,\n      mergedShow: mergedShowRef,\n      namespace: namespaceRef,\n      adjustedTo: useAdjustedTo(props),\n      isMounted: useIsMounted(),\n      focused: focusedRef,\n      menuPadding: menuPaddingRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      mergedExpandedKeys: mergedExpandedKeysRef,\n      treeSelectedKeys: treeSelectedKeysRef,\n      treeCheckedKeys: treeCheckedKeysRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      pattern: patternRef,\n      pendingNodeKey: pendingNodeKeyRef,\n      mergedCascade: mergedCascadeRef,\n      mergedFilter: mergedFilterRef,\n      selectionRenderTag: selectionRenderTagRef,\n      handleTriggerOrMenuResize,\n      doUpdateExpandedKeys,\n      handleMenuLeave,\n      handleTriggerClick,\n      handleMenuClickoutside,\n      handleUpdateCheckedKeys,\n      handleUpdateIndeterminateKeys,\n      handleTriggerFocus,\n      handleTriggerBlur,\n      handleMenuFocusin,\n      handleMenuFocusout,\n      handleClear,\n      handleDeleteOption,\n      handlePatternInput,\n      handleKeydown,\n      handleTabOut,\n      handleMenuMousedown,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    const {\n      mergedTheme,\n      mergedClsPrefix,\n      $slots\n    } = this;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-tree-select`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerInstRef\",\n          onResize: this.handleTriggerOrMenuResize,\n          status: this.mergedStatus,\n          focused: this.focused,\n          clsPrefix: mergedClsPrefix,\n          theme: mergedTheme.peers.InternalSelection,\n          themeOverrides: mergedTheme.peerOverrides.InternalSelection,\n          ellipsisTagPopoverProps: this.ellipsisTagPopoverProps,\n          renderTag: this.selectionRenderTag,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          size: this.mergedSize,\n          bordered: this.bordered,\n          placeholder: this.mergedPlaceholder,\n          disabled: this.mergedDisabled,\n          active: this.mergedShow,\n          loading: this.loading,\n          multiple: this.multiple,\n          maxTagCount: this.maxTagCount,\n          showArrow: true,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          pattern: this.pattern,\n          onPatternInput: this.handlePatternInput,\n          onClear: this.handleClear,\n          onClick: this.handleTriggerClick,\n          onFocus: this.handleTriggerFocus,\n          onBlur: this.handleTriggerBlur,\n          onDeleteOption: this.handleDeleteOption,\n          onKeydown: this.handleKeydown\n        }, {\n          arrow: () => {\n            var _a, _b;\n            return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)];\n          }\n        })\n      }), h(VFollower, {\n        ref: \"followerInstRef\",\n        show: this.mergedShow,\n        placement: this.placement,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        containerClass: this.namespace,\n        width: this.consistentMenuWidth ? 'target' : undefined,\n        minWidth: \"target\"\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted,\n          onLeave: this.handleMenuLeave\n        }, {\n          default: () => {\n            var _a;\n            if (!this.mergedShow) return null;\n            const {\n              mergedClsPrefix,\n              checkable,\n              multiple,\n              menuProps,\n              options\n            } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return withDirectives(h(\"div\", Object.assign({}, menuProps, {\n              class: [`${mergedClsPrefix}-tree-select-menu`, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class, this.themeClass],\n              ref: \"menuElRef\",\n              style: [(menuProps === null || menuProps === void 0 ? void 0 : menuProps.style) || '', this.cssVars],\n              tabindex: 0,\n              onMousedown: this.handleMenuMousedown,\n              onKeydown: this.handleKeydown,\n              onFocusin: this.handleMenuFocusin,\n              onFocusout: this.handleMenuFocusout\n            }), h(NTree, {\n              ref: \"treeInstRef\",\n              blockLine: true,\n              allowCheckingNotLoaded: this.allowCheckingNotLoaded,\n              showIrrelevantNodes: false,\n              animated: false,\n              pattern: this.pattern,\n              getChildren: this.getChildren,\n              filter: this.mergedFilter,\n              data: options,\n              cancelable: multiple,\n              labelField: this.labelField,\n              keyField: this.keyField,\n              disabledField: this.disabledField,\n              childrenField: this.childrenField,\n              theme: mergedTheme.peers.Tree,\n              themeOverrides: mergedTheme.peerOverrides.Tree,\n              defaultExpandAll: this.defaultExpandAll,\n              defaultExpandedKeys: this.defaultExpandedKeys,\n              expandedKeys: this.mergedExpandedKeys,\n              checkedKeys: this.treeCheckedKeys,\n              selectedKeys: this.treeSelectedKeys,\n              checkable: checkable,\n              checkStrategy: this.checkStrategy,\n              cascade: this.mergedCascade,\n              leafOnly: this.leafOnly,\n              multiple: this.multiple,\n              renderLabel: this.renderLabel,\n              renderPrefix: this.renderPrefix,\n              renderSuffix: this.renderSuffix,\n              renderSwitcherIcon: this.renderSwitcherIcon,\n              nodeProps: this.nodeProps,\n              watchProps: this.watchProps,\n              virtualScroll: this.consistentMenuWidth && this.virtualScroll,\n              overrideDefaultNodeClickBehavior: this.overrideDefaultNodeClickBehavior,\n              internalTreeSelect: true,\n              internalUnifySelectCheck: true,\n              internalScrollable: true,\n              internalScrollablePadding: this.menuPadding,\n              internalFocusable: false,\n              internalCheckboxFocusable: false,\n              internalRenderEmpty: () => h(\"div\", {\n                class: `${mergedClsPrefix}-tree-select-menu__empty`\n              }, resolveSlot($slots.empty, () => [h(NEmpty, {\n                theme: mergedTheme.peers.Empty,\n                themeOverrides: mergedTheme.peerOverrides.Empty\n              })])),\n              onLoad: this.onLoad,\n              onUpdateCheckedKeys: this.handleUpdateCheckedKeys,\n              onUpdateIndeterminateKeys: this.handleUpdateIndeterminateKeys,\n              onUpdateExpandedKeys: this.doUpdateExpandedKeys\n            }), resolveWrappedSlot($slots.action, children => {\n              return children ? h(\"div\", {\n                class: `${mergedClsPrefix}-tree-select-menu__action`,\n                \"data-action\": true\n              }, children) : null;\n            }), h(NBaseFocusDetector, {\n              onFocus: this.handleTabOut\n            })), [[clickoutside, this.handleMenuClickoutside, undefined, {\n              capture: true\n            }]]);\n          }\n        })\n      })]\n    }));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}