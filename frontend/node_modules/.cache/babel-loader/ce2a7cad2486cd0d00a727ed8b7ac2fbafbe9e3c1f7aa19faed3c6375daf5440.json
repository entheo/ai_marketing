{"ast":null,"code":"import { ref } from 'vue';\nimport { NButton, NForm, NCard, NInput, NH5, NSelect, NDrawer } from 'naive-ui';\nimport axios from 'axios';\nimport { useAuthStore } from '@/store';\n\n// 用于获取csrftoken的函数\nfunction getCsrfToken() {\n  let csrfToken = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.startsWith('csrftoken=')) {\n        csrfToken = decodeURIComponent(cookie.substring('csrftoken='.length));\n        break;\n      }\n    }\n  }\n  return csrfToken;\n}\nexport default {\n  name: 'DashboardPage',\n  setup() {\n    const csrfToken = ref(getCsrfToken());\n    const authStore = useAuthStore();\n    console.log(authStore.isLoggedIn); // 访问状态\n    const message = ref('');\n    const active = ref(false);\n    const placement = ref(\"right\");\n    const activate = place => {\n      active.value = true;\n      placement.value = place;\n    };\n    const selectValue = ref(null);\n    const options = [{\n      label: \"Everybody's Got Something to Hide Except Me and My Monkey\",\n      value: \"song0\",\n      disabled: true\n    }, {\n      label: \"Drive My Car\",\n      value: \"song1\"\n    }, {\n      label: \"Norwegian Wood\",\n      value: \"song2\"\n    }, {\n      label: \"You Won't See\",\n      value: \"song3\",\n      disabled: true\n    }];\n\n    //定义表单\n    const newBrandData = ref({\n      cn_name: '',\n      en_name: '',\n      values: '',\n      audience: ''\n    });\n    const formData = ref({\n      context: '',\n      goal: '',\n      style: '',\n      tone: '',\n      audience: '',\n      output: ''\n    });\n    const submitForm = () => {\n      axios.post('http://localhost:8005/api/response/', formData).then(response => {\n        // 处理你后端返回的response\n        console.log(response);\n        console.log(message);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    const newBrandForm = () => {\n      axios.post('http://localhost:8005/marketing/brand/create/', newBrandData, {\n        withCredentials: true,\n        headers: {\n          'X-CSRFToken': csrfToken.value // 使用组件状态中的CSRF token\n        }\n      }).then(response => {\n        // 处理你后端返回的response\n        console.log(response);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    return {\n      submitForm,\n      newBrandForm\n    };\n  }\n};","map":{"version":3,"names":["ref","NButton","NForm","NCard","NInput","NH5","NSelect","NDrawer","axios","useAuthStore","getCsrfToken","csrfToken","document","cookie","cookies","split","i","length","trim","startsWith","decodeURIComponent","substring","name","setup","authStore","console","log","isLoggedIn","message","active","placement","activate","place","value","selectValue","options","label","disabled","newBrandData","cn_name","en_name","values","audience","formData","context","goal","style","tone","output","submitForm","post","then","response","catch","err","newBrandForm","withCredentials","headers"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/DashboardPage.vue"],"sourcesContent":["<template>\n<div class=\"page-container\" style=\"height: 100vh; overflow: hidden;text-align:left\">\n  <div class=\"flex-container\" style=\"display: flex; justify-content: space-between;height:100%\">\n    <n-card style=\"width: 45%;height:100%;overflow-y:auto\">\n      \n      <n-card embedded>\n      还未建立品牌档案？\n      <n-button @click=\"activate('left')\" secondary>添加</n-button>\n      \n      </n-card>\n\n      <n-card embedded>\n      还未建立产品档案?\n      <n-button secondary>添加</n-button>\n      </n-card>\n      \n      <n-form @submit.prevent=\"submitForm\"> \n        <n-card title=\"当前品牌\" embedded>\n            <n-select v-model:value=\"selectValue\" :options=\"options\" />\n         <n-button @click=\"activate('left')\">\n            详情\n          </n-button>\n        </n-card>\n\n        <n-card title=\"当前产品\" embedded>\n          <n-select v-model:value=\"selectValue\" :options=\"options\" />\n          <n-button @click=\"activate('left')\">\n            详情\n          </n-button>\n        </n-card>\n        <n-card :bordered=\"false\">\n        <n-form-item label=\"上下文\">\n          <n-h5 prefix=\"bar\">上下文</n-h5>\n          <n-input v-model:value=\"formData.context\" round clearable size=\"large\" type=\"textarea\" placeholder=\"上下文\"></n-input>\n        </n-form-item>\n        </n-card>\n         <n-card :bordered=\"false\">\n        <n-form-item label=\"写作目标\">\n          <n-h5 prefix=\"bar\">写作目标</n-h5>\n          <n-input v-model:value=\"formData.goal\"  round clearable size=\"large\" type=\"textarea\" placeholder=\"写作目标\"></n-input>\n        </n-form-item>\n        </n-card>\n         <n-card :bordered=\"false\">\n        <n-form-item label=\"行文风格\">\n         <n-h5 prefix=\"bar\">行文风格</n-h5>\n         <n-input v-model:value=\"formData.style\"  round clearable size=\"large\" type=\"textarea\" placeholder=\"行文风格\"></n-input>\n        </n-form-item>\n        </n-card>\n         <n-card :bordered=\"false\">\n        <n-form-item label=\"情绪语气\">\n          <n-h5 prefix=\"bar\">情绪语气</n-h5>\n          <n-input v-model:value=\"formData.tone\"  round clearable size=\"large\" type=\"textarea\" placeholder=\"情绪语气\"></n-input>\n        </n-form-item>\n        </n-card>\n        <n-card :bordered=\"false\">\n        <n-form-item label=\"受众画像\">\n          <n-h5 prefix=\"bar\">受众画像</n-h5>\n          <n-input v-model:value=\"formData.audience\"  round clearable size=\"large\" type=\"textarea\" placeholder=\"受众画像\"></n-input>\n        </n-form-item>\n        </n-card>\n        <n-card :bordered=\"false\">\n        <n-form-item label=\"输出要求\">\n          <n-h5 prefix=\"bar\">输出要求</n-h5>\n          <n-input v-model:value=\"formData.output\"  round clearable size=\"large\" type=\"textarea\" placeholder=\"输出要求\"></n-input>\n        </n-form-item>\n        </n-card>\n        <n-button type=\"primary\" @click=\"submitForm\">提交</n-button>\n      </n-form>\n      \n      <!--品牌信息-->\n       <n-drawer v-model:show=\"active\" :width=\"502\" :placement=\"placement\">\n             <n-drawer-content title=\"brandInfo\">\n               <n-card>\n               <n-form @submit.prevent=\"newBrandForm\">\n                 <n-form-item label=\"name\">\n                   <n-h5 prefix=\"bar\">品牌名称</n-h5>\n                   <n-input v-model:value=\"newBrandData.cn_name\" clearable size=\"large\" type=\"text\" placeholder=\"中文名称\"></n-input>\n                   <n-input v-model:value=\"newBrandData.en_name\" clearable size=\"large\" type=\"text\" placeholder=\"英文名称\"></n-input>\n\n                </n-form-item>\n                 <n-form-item label='values'>\n                   <n-h5 prefix=\"bar\">价值观理念</n-h5>\n                   <n-input v-model:value=\"newBrandData.values\" round clearable size=\"large\" type=\"textarea\"></n-input>\n                 </n-form-item> \n              <n-button type=\"primary\" @click=\"newBrandForm\">提交</n-button> \n               </n-form>\n             </n-card>  \n             </n-drawer-content>\n         </n-drawer>\n    \n    </n-card>\n    <n-card style=\"width: 55%;height:100%;overflow-y:auto\">\n      {{message}}\n    </n-card> \n\n\n  </div>\n</div>\n</template>\n\n<script>\n  import {ref } from 'vue'\n  import { NButton, NForm, NCard, NInput, NH5, NSelect, NDrawer} from 'naive-ui'\n  import axios from 'axios';\n  import { useAuthStore } from '@/store';\n\n  // 用于获取csrftoken的函数\n  function getCsrfToken() {\n    let csrfToken = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.startsWith('csrftoken=')) {\n          csrfToken = decodeURIComponent(cookie.substring('csrftoken='.length));\n          break;\n        }\n      }\n    }\n    return csrfToken;\n  }\n\n  \n  export default{\n      name:'DashboardPage',\n      setup(){\n          const csrfToken = ref(getCsrfToken());\n          const authStore = useAuthStore();\n          console.log(authStore.isLoggedIn); // 访问状态\n          const message = ref('');\n          const active = ref(false);\n          const placement = ref(\"right\");\n          const activate = (place) => {\n            active.value = true\n            placement.value = place\n          };\n          const selectValue = ref(null);\n          const options = [\n           { \n             label: \"Everybody's Got Something to Hide Except Me and My Monkey\",\n             value: \"song0\",\n             disabled: true\n           },\n           { \n             label: \"Drive My Car\",\n             value: \"song1\"\n           },\n           { \n             label: \"Norwegian Wood\",\n             value: \"song2\"\n           },\n           { \n             label: \"You Won't See\",\n             value: \"song3\",\n             disabled: true\n           }];\n          \n          \n          //定义表单\n          const newBrandData = ref({\n                  cn_name:'',\n                  en_name:'',\n                  values:'',\n                  audience:'',\n                  });\n          const formData = ref({\n              context:'',\n              goal:'',\n              style:'',\n              tone:'',\n              audience:'',\n              output:''}\n          );\n          const submitForm = () => {\n              axios.post('http://localhost:8005/api/response/', formData)\n                .then(response => {\n                  // 处理你后端返回的response\n                  console.log(response);\n                  console.log(message);\n                })\n                .catch(err => {\n                  console.log(err);\n                });\n          };\n          const newBrandForm = () => {\n            axios.post('http://localhost:8005/marketing/brand/create/', newBrandData,\n              {\n                withCredentials: true,  \n                headers: {\n                  'X-CSRFToken': csrfToken.value,  // 使用组件状态中的CSRF token\n                }\n              }\n            )\n            .then(response => {\n              // 处理你后端返回的response\n              console.log(response);\n            })\n            .catch(err => {\n              console.log(err);\n          });\n        };\n        return{\n            submitForm,\n            newBrandForm,\n            }\n    }\n}\n</script>\nn-form-item {\n    padding:20px;\n    }\n<style>\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}