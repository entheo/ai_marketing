{"ast":null,"code":"import { computed, inject, provide, onBeforeUnmount } from 'vue';\nimport { createInjectionKey } from \"../_utils/index.mjs\";\nexport const formItemInjectionKey = createInjectionKey('n-form-item');\nexport default function useFormItem(props, {\n  defaultSize = 'medium',\n  mergedSize,\n  mergedDisabled\n} = {}) {\n  const NFormItem = inject(formItemInjectionKey, null);\n  provide(formItemInjectionKey, null);\n  const mergedSizeRef = computed(mergedSize ? () => mergedSize(NFormItem) : () => {\n    const {\n      size\n    } = props;\n    if (size) return size;\n    if (NFormItem) {\n      const {\n        mergedSize\n      } = NFormItem;\n      if (mergedSize.value !== undefined) {\n        return mergedSize.value;\n      }\n    }\n    return defaultSize;\n  });\n  const mergedDisabledRef = computed(mergedDisabled ? () => mergedDisabled(NFormItem) : () => {\n    const {\n      disabled\n    } = props;\n    if (disabled !== undefined) {\n      return disabled;\n    }\n    if (NFormItem) {\n      return NFormItem.disabled.value;\n    }\n    return false;\n  });\n  const mergedStatusRef = computed(() => {\n    const {\n      status\n    } = props;\n    if (status) return status;\n    return NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.mergedValidationStatus.value;\n  });\n  onBeforeUnmount(() => {\n    if (NFormItem) {\n      NFormItem.restoreValidation();\n    }\n  });\n  return {\n    mergedSizeRef,\n    mergedDisabledRef,\n    mergedStatusRef,\n    nTriggerFormBlur() {\n      if (NFormItem) {\n        NFormItem.handleContentBlur();\n      }\n    },\n    nTriggerFormChange() {\n      if (NFormItem) {\n        NFormItem.handleContentChange();\n      }\n    },\n    nTriggerFormFocus() {\n      if (NFormItem) {\n        NFormItem.handleContentFocus();\n      }\n    },\n    nTriggerFormInput() {\n      if (NFormItem) {\n        NFormItem.handleContentInput();\n      }\n    }\n  };\n}","map":{"version":3,"names":["computed","inject","provide","onBeforeUnmount","createInjectionKey","formItemInjectionKey","useFormItem","props","defaultSize","mergedSize","mergedDisabled","NFormItem","mergedSizeRef","size","value","undefined","mergedDisabledRef","disabled","mergedStatusRef","status","mergedValidationStatus","restoreValidation","nTriggerFormBlur","handleContentBlur","nTriggerFormChange","handleContentChange","nTriggerFormFocus","handleContentFocus","nTriggerFormInput","handleContentInput"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/_mixins/use-form-item.mjs"],"sourcesContent":["import { computed, inject, provide, onBeforeUnmount } from 'vue';\nimport { createInjectionKey } from \"../_utils/index.mjs\";\nexport const formItemInjectionKey = createInjectionKey('n-form-item');\nexport default function useFormItem(props, {\n  defaultSize = 'medium',\n  mergedSize,\n  mergedDisabled\n} = {}) {\n  const NFormItem = inject(formItemInjectionKey, null);\n  provide(formItemInjectionKey, null);\n  const mergedSizeRef = computed(mergedSize ? () => mergedSize(NFormItem) : () => {\n    const {\n      size\n    } = props;\n    if (size) return size;\n    if (NFormItem) {\n      const {\n        mergedSize\n      } = NFormItem;\n      if (mergedSize.value !== undefined) {\n        return mergedSize.value;\n      }\n    }\n    return defaultSize;\n  });\n  const mergedDisabledRef = computed(mergedDisabled ? () => mergedDisabled(NFormItem) : () => {\n    const {\n      disabled\n    } = props;\n    if (disabled !== undefined) {\n      return disabled;\n    }\n    if (NFormItem) {\n      return NFormItem.disabled.value;\n    }\n    return false;\n  });\n  const mergedStatusRef = computed(() => {\n    const {\n      status\n    } = props;\n    if (status) return status;\n    return NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.mergedValidationStatus.value;\n  });\n  onBeforeUnmount(() => {\n    if (NFormItem) {\n      NFormItem.restoreValidation();\n    }\n  });\n  return {\n    mergedSizeRef,\n    mergedDisabledRef,\n    mergedStatusRef,\n    nTriggerFormBlur() {\n      if (NFormItem) {\n        NFormItem.handleContentBlur();\n      }\n    },\n    nTriggerFormChange() {\n      if (NFormItem) {\n        NFormItem.handleContentChange();\n      }\n    },\n    nTriggerFormFocus() {\n      if (NFormItem) {\n        NFormItem.handleContentFocus();\n      }\n    },\n    nTriggerFormInput() {\n      if (NFormItem) {\n        NFormItem.handleContentInput();\n      }\n    }\n  };\n}"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAEC,eAAe,QAAQ,KAAK;AAChE,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAO,MAAMC,oBAAoB,GAAGD,kBAAkB,CAAC,aAAa,CAAC;AACrE,eAAe,SAASE,WAAWA,CAACC,KAAK,EAAE;EACzCC,WAAW,GAAG,QAAQ;EACtBC,UAAU;EACVC;AACF,CAAC,GAAG,CAAC,CAAC,EAAE;EACN,MAAMC,SAAS,GAAGV,MAAM,CAACI,oBAAoB,EAAE,IAAI,CAAC;EACpDH,OAAO,CAACG,oBAAoB,EAAE,IAAI,CAAC;EACnC,MAAMO,aAAa,GAAGZ,QAAQ,CAACS,UAAU,GAAG,MAAMA,UAAU,CAACE,SAAS,CAAC,GAAG,MAAM;IAC9E,MAAM;MACJE;IACF,CAAC,GAAGN,KAAK;IACT,IAAIM,IAAI,EAAE,OAAOA,IAAI;IACrB,IAAIF,SAAS,EAAE;MACb,MAAM;QACJF;MACF,CAAC,GAAGE,SAAS;MACb,IAAIF,UAAU,CAACK,KAAK,KAAKC,SAAS,EAAE;QAClC,OAAON,UAAU,CAACK,KAAK;MACzB;IACF;IACA,OAAON,WAAW;EACpB,CAAC,CAAC;EACF,MAAMQ,iBAAiB,GAAGhB,QAAQ,CAACU,cAAc,GAAG,MAAMA,cAAc,CAACC,SAAS,CAAC,GAAG,MAAM;IAC1F,MAAM;MACJM;IACF,CAAC,GAAGV,KAAK;IACT,IAAIU,QAAQ,KAAKF,SAAS,EAAE;MAC1B,OAAOE,QAAQ;IACjB;IACA,IAAIN,SAAS,EAAE;MACb,OAAOA,SAAS,CAACM,QAAQ,CAACH,KAAK;IACjC;IACA,OAAO,KAAK;EACd,CAAC,CAAC;EACF,MAAMI,eAAe,GAAGlB,QAAQ,CAAC,MAAM;IACrC,MAAM;MACJmB;IACF,CAAC,GAAGZ,KAAK;IACT,IAAIY,MAAM,EAAE,OAAOA,MAAM;IACzB,OAAOR,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACS,sBAAsB,CAACN,KAAK;EACrG,CAAC,CAAC;EACFX,eAAe,CAAC,MAAM;IACpB,IAAIQ,SAAS,EAAE;MACbA,SAAS,CAACU,iBAAiB,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC;EACF,OAAO;IACLT,aAAa;IACbI,iBAAiB;IACjBE,eAAe;IACfI,gBAAgBA,CAAA,EAAG;MACjB,IAAIX,SAAS,EAAE;QACbA,SAAS,CAACY,iBAAiB,CAAC,CAAC;MAC/B;IACF,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAIb,SAAS,EAAE;QACbA,SAAS,CAACc,mBAAmB,CAAC,CAAC;MACjC;IACF,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,IAAIf,SAAS,EAAE;QACbA,SAAS,CAACgB,kBAAkB,CAAC,CAAC;MAChC;IACF,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClB,IAAIjB,SAAS,EAAE;QACbA,SAAS,CAACkB,kBAAkB,CAAC,CAAC;MAChC;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}