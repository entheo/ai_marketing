{"ast":null,"code":"import { h, defineComponent } from 'vue';\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { SuccessIcon, ErrorIcon, WarningIcon, InfoIcon } from \"../../_internal/icons/index.mjs\";\nconst iconMap = {\n  success: h(SuccessIcon, null),\n  error: h(ErrorIcon, null),\n  warning: h(WarningIcon, null),\n  info: h(InfoIcon, null)\n};\nexport default defineComponent({\n  name: 'ProgressCircle',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    status: {\n      type: String,\n      required: true\n    },\n    strokeWidth: {\n      type: Number,\n      required: true\n    },\n    fillColor: String,\n    railColor: String,\n    railStyle: [String, Object],\n    percentage: {\n      type: Number,\n      default: 0\n    },\n    offsetDegree: {\n      type: Number,\n      default: 0\n    },\n    showIndicator: {\n      type: Boolean,\n      required: true\n    },\n    indicatorTextColor: String,\n    unit: String,\n    viewBoxWidth: {\n      type: Number,\n      required: true\n    },\n    gapDegree: {\n      type: Number,\n      required: true\n    },\n    gapOffsetDegree: {\n      type: Number,\n      default: 0\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    function getPathStyles(percent, offsetDegree, strokeColor) {\n      const {\n        gapDegree,\n        viewBoxWidth,\n        strokeWidth\n      } = props;\n      const radius = 50;\n      const beginPositionX = 0;\n      const beginPositionY = radius;\n      const endPositionX = 0;\n      const endPositionY = 2 * radius;\n      const centerX = 50 + strokeWidth / 2;\n      const pathString = `M ${centerX},${centerX} m ${beginPositionX},${beginPositionY}\n      a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n      a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n      const len = Math.PI * 2 * radius;\n      const pathStyle = {\n        stroke: strokeColor,\n        strokeDasharray: `${percent / 100 * (len - gapDegree)}px ${viewBoxWidth * 8}px`,\n        strokeDashoffset: `-${gapDegree / 2}px`,\n        transformOrigin: offsetDegree ? 'center' : undefined,\n        transform: offsetDegree ? `rotate(${offsetDegree}deg)` : undefined\n      };\n      return {\n        pathString,\n        pathStyle\n      };\n    }\n    return () => {\n      const {\n        fillColor,\n        railColor,\n        strokeWidth,\n        offsetDegree,\n        status,\n        percentage,\n        showIndicator,\n        indicatorTextColor,\n        unit,\n        gapOffsetDegree,\n        clsPrefix\n      } = props;\n      const {\n        pathString: railPathString,\n        pathStyle: railPathStyle\n      } = getPathStyles(100, 0, railColor);\n      const {\n        pathString: fillPathString,\n        pathStyle: fillPathStyle\n      } = getPathStyles(percentage, offsetDegree, fillColor);\n      const viewBoxSize = 100 + strokeWidth;\n      return h(\"div\", {\n        class: `${clsPrefix}-progress-content`,\n        role: \"none\"\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph`,\n        \"aria-hidden\": true\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph-circle`,\n        style: {\n          transform: gapOffsetDegree ? `rotate(${gapOffsetDegree}deg)` : undefined\n        }\n      }, h(\"svg\", {\n        viewBox: `0 0 ${viewBoxSize} ${viewBoxSize}`\n      }, h(\"g\", null, h(\"path\", {\n        class: `${clsPrefix}-progress-graph-circle-rail`,\n        d: railPathString,\n        \"stroke-width\": strokeWidth,\n        \"stroke-linecap\": \"round\",\n        fill: \"none\",\n        style: railPathStyle\n      })), h(\"g\", null, h(\"path\", {\n        class: [`${clsPrefix}-progress-graph-circle-fill`, percentage === 0 && `${clsPrefix}-progress-graph-circle-fill--empty`],\n        d: fillPathString,\n        \"stroke-width\": strokeWidth,\n        \"stroke-linecap\": \"round\",\n        fill: \"none\",\n        style: fillPathStyle\n      }))))), showIndicator ? h(\"div\", null, slots.default ? h(\"div\", {\n        class: `${clsPrefix}-progress-custom-content`,\n        role: \"none\"\n      }, slots.default()) : status !== 'default' ? h(\"div\", {\n        class: `${clsPrefix}-progress-icon`,\n        \"aria-hidden\": true\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => iconMap[status]\n      })) : h(\"div\", {\n        class: `${clsPrefix}-progress-text`,\n        style: {\n          color: indicatorTextColor\n        },\n        role: \"none\"\n      }, h(\"span\", {\n        class: `${clsPrefix}-progress-text__percentage`\n      }, percentage), h(\"span\", {\n        class: `${clsPrefix}-progress-text__unit`\n      }, unit))) : null);\n    };\n  }\n});","map":{"version":3,"names":["h","defineComponent","NBaseIcon","SuccessIcon","ErrorIcon","WarningIcon","InfoIcon","iconMap","success","error","warning","info","name","props","clsPrefix","type","String","required","status","strokeWidth","Number","fillColor","railColor","railStyle","Object","percentage","default","offsetDegree","showIndicator","Boolean","indicatorTextColor","unit","viewBoxWidth","gapDegree","gapOffsetDegree","setup","slots","getPathStyles","percent","strokeColor","radius","beginPositionX","beginPositionY","endPositionX","endPositionY","centerX","pathString","len","Math","PI","pathStyle","stroke","strokeDasharray","strokeDashoffset","transformOrigin","undefined","transform","railPathString","railPathStyle","fillPathString","fillPathStyle","viewBoxSize","class","role","style","viewBox","d","fill","color"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/progress/src/Circle.mjs"],"sourcesContent":["import { h, defineComponent } from 'vue';\nimport { NBaseIcon } from \"../../_internal/index.mjs\";\nimport { SuccessIcon, ErrorIcon, WarningIcon, InfoIcon } from \"../../_internal/icons/index.mjs\";\nconst iconMap = {\n  success: h(SuccessIcon, null),\n  error: h(ErrorIcon, null),\n  warning: h(WarningIcon, null),\n  info: h(InfoIcon, null)\n};\nexport default defineComponent({\n  name: 'ProgressCircle',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    status: {\n      type: String,\n      required: true\n    },\n    strokeWidth: {\n      type: Number,\n      required: true\n    },\n    fillColor: String,\n    railColor: String,\n    railStyle: [String, Object],\n    percentage: {\n      type: Number,\n      default: 0\n    },\n    offsetDegree: {\n      type: Number,\n      default: 0\n    },\n    showIndicator: {\n      type: Boolean,\n      required: true\n    },\n    indicatorTextColor: String,\n    unit: String,\n    viewBoxWidth: {\n      type: Number,\n      required: true\n    },\n    gapDegree: {\n      type: Number,\n      required: true\n    },\n    gapOffsetDegree: {\n      type: Number,\n      default: 0\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    function getPathStyles(percent, offsetDegree, strokeColor) {\n      const {\n        gapDegree,\n        viewBoxWidth,\n        strokeWidth\n      } = props;\n      const radius = 50;\n      const beginPositionX = 0;\n      const beginPositionY = radius;\n      const endPositionX = 0;\n      const endPositionY = 2 * radius;\n      const centerX = 50 + strokeWidth / 2;\n      const pathString = `M ${centerX},${centerX} m ${beginPositionX},${beginPositionY}\n      a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\n      a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\n      const len = Math.PI * 2 * radius;\n      const pathStyle = {\n        stroke: strokeColor,\n        strokeDasharray: `${percent / 100 * (len - gapDegree)}px ${viewBoxWidth * 8}px`,\n        strokeDashoffset: `-${gapDegree / 2}px`,\n        transformOrigin: offsetDegree ? 'center' : undefined,\n        transform: offsetDegree ? `rotate(${offsetDegree}deg)` : undefined\n      };\n      return {\n        pathString,\n        pathStyle\n      };\n    }\n    return () => {\n      const {\n        fillColor,\n        railColor,\n        strokeWidth,\n        offsetDegree,\n        status,\n        percentage,\n        showIndicator,\n        indicatorTextColor,\n        unit,\n        gapOffsetDegree,\n        clsPrefix\n      } = props;\n      const {\n        pathString: railPathString,\n        pathStyle: railPathStyle\n      } = getPathStyles(100, 0, railColor);\n      const {\n        pathString: fillPathString,\n        pathStyle: fillPathStyle\n      } = getPathStyles(percentage, offsetDegree, fillColor);\n      const viewBoxSize = 100 + strokeWidth;\n      return h(\"div\", {\n        class: `${clsPrefix}-progress-content`,\n        role: \"none\"\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph`,\n        \"aria-hidden\": true\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph-circle`,\n        style: {\n          transform: gapOffsetDegree ? `rotate(${gapOffsetDegree}deg)` : undefined\n        }\n      }, h(\"svg\", {\n        viewBox: `0 0 ${viewBoxSize} ${viewBoxSize}`\n      }, h(\"g\", null, h(\"path\", {\n        class: `${clsPrefix}-progress-graph-circle-rail`,\n        d: railPathString,\n        \"stroke-width\": strokeWidth,\n        \"stroke-linecap\": \"round\",\n        fill: \"none\",\n        style: railPathStyle\n      })), h(\"g\", null, h(\"path\", {\n        class: [`${clsPrefix}-progress-graph-circle-fill`, percentage === 0 && `${clsPrefix}-progress-graph-circle-fill--empty`],\n        d: fillPathString,\n        \"stroke-width\": strokeWidth,\n        \"stroke-linecap\": \"round\",\n        fill: \"none\",\n        style: fillPathStyle\n      }))))), showIndicator ? h(\"div\", null, slots.default ? h(\"div\", {\n        class: `${clsPrefix}-progress-custom-content`,\n        role: \"none\"\n      }, slots.default()) : status !== 'default' ? h(\"div\", {\n        class: `${clsPrefix}-progress-icon`,\n        \"aria-hidden\": true\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => iconMap[status]\n      })) : h(\"div\", {\n        class: `${clsPrefix}-progress-text`,\n        style: {\n          color: indicatorTextColor\n        },\n        role: \"none\"\n      }, h(\"span\", {\n        class: `${clsPrefix}-progress-text__percentage`\n      }, percentage), h(\"span\", {\n        class: `${clsPrefix}-progress-text__unit`\n      }, unit))) : null);\n    };\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}