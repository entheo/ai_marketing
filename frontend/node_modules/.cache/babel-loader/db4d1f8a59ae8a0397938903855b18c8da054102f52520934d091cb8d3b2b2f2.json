{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useNotification, NButton, NInput, NForm, NFormItemRow } from 'naive-ui';\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\n\n//通用变量\n\nexport default {\n  __name: 'LoginForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    const authStore = useStore();\n    const router = useRouter();\n\n    //登录表单操作\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\n    const notification = useNotification();\n    const login = async () => {\n      try {\n        const response = await axios.post('/account/login/', {\n          username: loginUsername.value,\n          password: loginPassword.value,\n          keep_logged_in_for_days: keepLoggedInForDays.value\n        }, {\n          withCredentials: true,\n          headers: {\n            //先注销'X-CSRFToken': csrfToken.value,\n          }\n        });\n        const token = response.data.token.access;\n        const user = response.data.username;\n        //const csrf_token = response.data.csrf_token;\n        //console.log('csrf_token:',csrf_token);\n        localStorage.setItem('token', token);\n        await authStore.commit('auth_success', {\n          token,\n          user\n        });\n        console.log(\"登录成功：\", loginUsername.value);\n        await router.push('/dashboard');\n      } catch (err) {\n        if (err.response.status == 400) {\n          notification.error({\n            content: err.response.data.message,\n            duration: 2500\n          });\n        }\n        console.log(\"登录失败：\", err);\n      }\n    };\n\n    //暴露方法\n    __expose({\n      login\n    });\n    const __returned__ = {\n      authStore,\n      router,\n      loginUsername,\n      loginPassword,\n      keepLoggedInForDays,\n      notification,\n      login,\n      get useNotification() {\n        return useNotification;\n      },\n      get NButton() {\n        return NButton;\n      },\n      get NInput() {\n        return NInput;\n      },\n      get NForm() {\n        return NForm;\n      },\n      get NFormItemRow() {\n        return NFormItemRow;\n      },\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useNotification","NButton","NInput","NForm","NFormItemRow","ref","useStore","useRouter","axios","authStore","router","loginUsername","loginPassword","keepLoggedInForDays","notification","login","response","post","username","value","password","keep_logged_in_for_days","withCredentials","headers","token","data","access","user","localStorage","setItem","commit","console","log","push","err","status","error","content","message","duration","__expose"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/LoginForm.vue"],"sourcesContent":["<template>\n<n-form>\n    <n-form-item-row label=\"用户名\">\n        <n-input v-model:value=\"loginUsername\" placeholder=\"\"/>\n          </n-form-item-row>\n          <n-form-item-row label=\"密码\">\n            <n-input v-model:value=\"loginPassword\" placeholder=\"\" type=\"password\" show-password-on=\"click\" :maxlength=\"15\"/>\n          </n-form-item-row>\n        </n-form>\n        <n-button @click=\"login\" type=\"primary\" block secondary strong>\n          登录\n    </n-button>\n</template>\n\n<script setup>\nimport {useNotification,NButton,NInput,NForm,NFormItemRow} from 'naive-ui';\nimport {ref,defineExpose} from 'vue';\nimport {useStore} from 'vuex';\nimport {useRouter} from 'vue-router';\nimport axios from 'axios';\n\n\n//通用变量\nconst authStore = useStore();\nconst router = useRouter();\n\n//登录表单操作\nconst loginUsername = ref('');\nconst loginPassword = ref('');\nconst keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择\nconst notification=useNotification()\nconst login = async () => {\n    try{\n        const response = await axios.post('/account/login/', \n        {   \n          username: loginUsername.value,\n          password: loginPassword.value,\n          keep_logged_in_for_days: keepLoggedInForDays.value\n        },  \n        {   \n          withCredentials: true,\n          headers: {\n            //先注销'X-CSRFToken': csrfToken.value,\n          }   \n        });\n        const token = response.data.token.access;\n        const user = response.data.username;\n        //const csrf_token = response.data.csrf_token;\n        //console.log('csrf_token:',csrf_token);\n        localStorage.setItem('token', token);\n        await authStore.commit('auth_success', { token, user });\n        console.log(\"登录成功：\",loginUsername.value); \n        await router.push('/dashboard');\n        \n        }catch(err){\n            if(err.response.status==400){\n                notification.error({\n                    content:err.response.data.message,\n                    duration:2500\n                    })\n            }\n            console.log(\"登录失败：\",err)\n        }\n    }\n\n\n\n//暴露方法\ndefineExpose({login});\n</script>\n\n<style>\n.n-input{\n    text-align:left}\n</style>\n\n"],"mappings":";AAeA,SAAQA,eAAe,EAACC,OAAO,EAACC,MAAM,EAACC,KAAK,EAACC,YAAY,QAAO,UAAU;AAC1E,SAAQC,GAAgB,QAAO,KAAK;AACpC,SAAQC,QAAQ,QAAO,MAAM;AAC7B,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,KAAK,MAAM,OAAO;;AAGzB;;;;;;;IACA,MAAMC,SAAS,GAAGH,QAAQ,CAAC,CAAC;IAC5B,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMI,aAAa,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMO,aAAa,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMQ,mBAAmB,GAAGR,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,MAAMS,YAAY,GAACd,eAAe,CAAC,CAAC;IACpC,MAAMe,KAAK,GAAG,MAAAA,CAAA,KAAY;MACtB,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,iBAAiB,EACnD;UACEC,QAAQ,EAAEP,aAAa,CAACQ,KAAK;UAC7BC,QAAQ,EAAER,aAAa,CAACO,KAAK;UAC7BE,uBAAuB,EAAER,mBAAmB,CAACM;QAC/C,CAAC,EACD;UACEG,eAAe,EAAE,IAAI;UACrBC,OAAO,EAAE;YACP;UAAA;QAEJ,CAAC,CAAC;QACF,MAAMC,KAAK,GAAGR,QAAQ,CAACS,IAAI,CAACD,KAAK,CAACE,MAAM;QACxC,MAAMC,IAAI,GAAGX,QAAQ,CAACS,IAAI,CAACP,QAAQ;QACnC;QACA;QACAU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;QACpC,MAAMf,SAAS,CAACqB,MAAM,CAAC,cAAc,EAAE;UAAEN,KAAK;UAAEG;QAAK,CAAC,CAAC;QACvDI,OAAO,CAACC,GAAG,CAAC,OAAO,EAACrB,aAAa,CAACQ,KAAK,CAAC;QACxC,MAAMT,MAAM,CAACuB,IAAI,CAAC,YAAY,CAAC;MAE/B,CAAC,QAAMC,GAAG,EAAC;QACP,IAAGA,GAAG,CAAClB,QAAQ,CAACmB,MAAM,IAAE,GAAG,EAAC;UACxBrB,YAAY,CAACsB,KAAK,CAAC;YACfC,OAAO,EAACH,GAAG,CAAClB,QAAQ,CAACS,IAAI,CAACa,OAAO;YACjCC,QAAQ,EAAC;UACT,CAAC,CAAC;QACV;QACAR,OAAO,CAACC,GAAG,CAAC,OAAO,EAACE,GAAG,CAAC;MAC5B;IACJ,CAAC;;IAIL;IACAM,QAAY,CAAC;MAACzB;IAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}