{"ast":null,"code":"import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from \"../../tree-select/src/interface.mjs\";\nexport function useKeyboard({\n  props,\n  fNodesRef,\n  mergedExpandedKeysRef,\n  mergedSelectedKeysRef,\n  mergedCheckedKeysRef,\n  handleCheck,\n  handleSelect,\n  handleSwitcherClick\n}) {\n  const {\n    value: mergedSelectedKeys\n  } = mergedSelectedKeysRef;\n  // If it's used in tree-select, make it take over pending state\n  const treeSelectInjection = inject(treeSelectInjectionKey, null);\n  const pendingNodeKeyRef = treeSelectInjection ? treeSelectInjection.pendingNodeKeyRef : ref(mergedSelectedKeys.length ? mergedSelectedKeys[mergedSelectedKeys.length - 1] : null);\n  function handleKeydown(e) {\n    var _a;\n    if (!props.keyboard) return {\n      enterBehavior: null\n    };\n    const {\n      value: pendingNodeKey\n    } = pendingNodeKeyRef;\n    let enterBehavior = null;\n    if (pendingNodeKey === null) {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n      }\n      if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        if (pendingNodeKey === null) {\n          const {\n            value: fNodes\n          } = fNodesRef;\n          let fIndex = 0;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    } else {\n      const {\n        value: fNodes\n      } = fNodesRef;\n      let fIndex = fNodes.findIndex(tmNode => tmNode.key === pendingNodeKey);\n      if (!~fIndex) return {\n        enterBehavior: null\n      };\n      if (e.key === 'Enter') {\n        const tmNode = fNodes[fIndex];\n        enterBehavior = ((_a = props.overrideDefaultNodeClickBehavior) === null || _a === void 0 ? void 0 : _a.call(props, {\n          option: tmNode.rawNode\n        })) || null;\n        switch (enterBehavior) {\n          case 'toggleCheck':\n            handleCheck(tmNode, !mergedCheckedKeysRef.value.includes(tmNode.key));\n            break;\n          case 'toggleSelect':\n            handleSelect(tmNode);\n            break;\n          case 'toggleExpand':\n            handleSwitcherClick(tmNode);\n            break;\n          case 'none':\n            break;\n          case 'default':\n          default:\n            enterBehavior = 'default';\n            handleSelect(tmNode);\n        }\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        fIndex += 1;\n        while (fIndex < fNodes.length) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex += 1;\n        }\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        fIndex -= 1;\n        while (fIndex >= 0) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex -= 1;\n        }\n      } else if (e.key === 'ArrowLeft') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf || !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          const parentTmNode = pendingNode.getParent();\n          if (parentTmNode) {\n            pendingNodeKeyRef.value = parentTmNode.key;\n          }\n        } else {\n          handleSwitcherClick(pendingNode);\n        }\n      } else if (e.key === 'ArrowRight') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf) return {\n          enterBehavior: null\n        };\n        if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          handleSwitcherClick(pendingNode);\n        } else {\n          // Tha same as ArrowDown\n          fIndex += 1;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    }\n    return {\n      enterBehavior\n    };\n  }\n  return {\n    pendingNodeKeyRef,\n    handleKeydown\n  };\n}","map":{"version":3,"names":["inject","ref","treeSelectInjectionKey","useKeyboard","props","fNodesRef","mergedExpandedKeysRef","mergedSelectedKeysRef","mergedCheckedKeysRef","handleCheck","handleSelect","handleSwitcherClick","value","mergedSelectedKeys","treeSelectInjection","pendingNodeKeyRef","length","handleKeydown","e","_a","keyboard","enterBehavior","pendingNodeKey","key","preventDefault","includes","fNodes","fIndex","disabled","findIndex","tmNode","overrideDefaultNodeClickBehavior","call","option","rawNode","pendingNode","isLeaf","parentTmNode","getParent"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/tree/src/keyboard.mjs"],"sourcesContent":["import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from \"../../tree-select/src/interface.mjs\";\nexport function useKeyboard({\n  props,\n  fNodesRef,\n  mergedExpandedKeysRef,\n  mergedSelectedKeysRef,\n  mergedCheckedKeysRef,\n  handleCheck,\n  handleSelect,\n  handleSwitcherClick\n}) {\n  const {\n    value: mergedSelectedKeys\n  } = mergedSelectedKeysRef;\n  // If it's used in tree-select, make it take over pending state\n  const treeSelectInjection = inject(treeSelectInjectionKey, null);\n  const pendingNodeKeyRef = treeSelectInjection ? treeSelectInjection.pendingNodeKeyRef : ref(mergedSelectedKeys.length ? mergedSelectedKeys[mergedSelectedKeys.length - 1] : null);\n  function handleKeydown(e) {\n    var _a;\n    if (!props.keyboard) return {\n      enterBehavior: null\n    };\n    const {\n      value: pendingNodeKey\n    } = pendingNodeKeyRef;\n    let enterBehavior = null;\n    if (pendingNodeKey === null) {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n      }\n      if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        if (pendingNodeKey === null) {\n          const {\n            value: fNodes\n          } = fNodesRef;\n          let fIndex = 0;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    } else {\n      const {\n        value: fNodes\n      } = fNodesRef;\n      let fIndex = fNodes.findIndex(tmNode => tmNode.key === pendingNodeKey);\n      if (!~fIndex) return {\n        enterBehavior: null\n      };\n      if (e.key === 'Enter') {\n        const tmNode = fNodes[fIndex];\n        enterBehavior = ((_a = props.overrideDefaultNodeClickBehavior) === null || _a === void 0 ? void 0 : _a.call(props, {\n          option: tmNode.rawNode\n        })) || null;\n        switch (enterBehavior) {\n          case 'toggleCheck':\n            handleCheck(tmNode, !mergedCheckedKeysRef.value.includes(tmNode.key));\n            break;\n          case 'toggleSelect':\n            handleSelect(tmNode);\n            break;\n          case 'toggleExpand':\n            handleSwitcherClick(tmNode);\n            break;\n          case 'none':\n            break;\n          case 'default':\n          default:\n            enterBehavior = 'default';\n            handleSelect(tmNode);\n        }\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        fIndex += 1;\n        while (fIndex < fNodes.length) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex += 1;\n        }\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        fIndex -= 1;\n        while (fIndex >= 0) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n          fIndex -= 1;\n        }\n      } else if (e.key === 'ArrowLeft') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf || !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          const parentTmNode = pendingNode.getParent();\n          if (parentTmNode) {\n            pendingNodeKeyRef.value = parentTmNode.key;\n          }\n        } else {\n          handleSwitcherClick(pendingNode);\n        }\n      } else if (e.key === 'ArrowRight') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf) return {\n          enterBehavior: null\n        };\n        if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          handleSwitcherClick(pendingNode);\n        } else {\n          // Tha same as ArrowDown\n          fIndex += 1;\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n            fIndex += 1;\n          }\n        }\n      }\n    }\n    return {\n      enterBehavior\n    };\n  }\n  return {\n    pendingNodeKeyRef,\n    handleKeydown\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}