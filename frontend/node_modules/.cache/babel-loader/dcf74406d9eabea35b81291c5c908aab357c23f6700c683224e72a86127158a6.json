{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'HomePage',\n  setup() {\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n    const router = useRouter();\n    const handleLoginSubmit = () => {\n      // 使用loginUsername.value和loginPassword.value来构造发送数据\n      axios.post('http://localhost:8005/account/login/', {\n        username: loginUsername.value,\n        password: loginPassword.value\n      }).then(response => {\n        console.log(\"登录成功，用户名: \", loginUsername.value);\n        console.log(response);\n        router.push('/dashboard');\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    const handleRegisterSubmit = () => {\n      // 同上，构造包含用户名、密码和邀请码的对象来发送\n      axios.post('http://localhost:8005/account/register/', {\n        username: registerUsername.value,\n        password: registerPassword.value,\n        invitationCode: invitation.value // 假设后端接受的参数名为invitationCode\n      }).then(response => {\n        console.log(\"注册成功，用户名: \", registerUsername.value);\n        console.log(response);\n        router.push('/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    return {\n      loginUsername,\n      loginPassword,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","useRouter","name","setup","loginUsername","loginPassword","registerUsername","registerPassword","invitation","router","handleLoginSubmit","post","username","value","password","then","response","console","log","push","catch","err","handleRegisterSubmit","invitationCode"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <div>\n    <h1>欢迎来到我们的网站</h1>\n    <p>请登录以继续操作。</p>\n    <!-- 登录表单 -->\n    <form @submit.prevent=\"handleLoginSubmit\">\n      <input type=\"text\" v-model=\"loginUsername\" placeholder=\"用户名\" />\n      <input type=\"password\" v-model=\"loginPassword\" placeholder=\"密码\" />\n      <button type=\"submit\">登录</button>\n    </form>\n\n    <!-- 注册表单 -->\n    <form @submit.prevent=\"handleRegisterSubmit\" class=\"register-form\">\n        <h2>注册</h2>\n        <input type=\"text\" v-model=\"registerUsername\" placeholder=\"用户名\" />\n        <input type=\"password\" v-model=\"registerPassword\" placeholder=\"密码\" />\n        <input type=\"text\" v-model=\"invitation\" placeholder=\"邀请码\" />\n        <button type=\"submit\">注册</button>\n      </form>\n  \n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n\n    const handleLoginSubmit = () => {\n    // 使用loginUsername.value和loginPassword.value来构造发送数据\n      axios.post('http://localhost:8005/account/login/', {\n        username: loginUsername.value,\n        password: loginPassword.value\n      })\n      .then(response => {\n        console.log(\"登录成功，用户名: \", loginUsername.value);\n        console.log(response);\n        router.push('/dashboard');\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    const handleRegisterSubmit = () => {\n    // 同上，构造包含用户名、密码和邀请码的对象来发送\n      axios.post('http://localhost:8005/account/register/', {\n        username: registerUsername.value,\n        password: registerPassword.value,\n        invitationCode: invitation.value // 假设后端接受的参数名为invitationCode\n      })\n      .then(response => {\n        console.log(\"注册成功，用户名: \", registerUsername.value);\n        console.log(response)\n        router.push('/login');\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    };\n    \n    return {\n      loginUsername,\n      loginPassword,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n    };\n  },\n};\n</script>\n\n\n"],"mappings":";AAyBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,aAAY,GAAIJ,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMK,aAAY,GAAIL,GAAG,CAAC,EAAE,CAAC;IAE7B,MAAMM,gBAAe,GAAIN,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMO,gBAAe,GAAIP,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMQ,UAAS,GAAIR,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMS,MAAK,GAAIR,SAAS,CAAC,CAAC;IAG1B,MAAMS,iBAAgB,GAAIA,CAAA,KAAM;MAChC;MACEX,KAAK,CAACY,IAAI,CAAC,sCAAsC,EAAE;QACjDC,QAAQ,EAAER,aAAa,CAACS,KAAK;QAC7BC,QAAQ,EAAET,aAAa,CAACQ;MAC1B,CAAC,EACAE,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,aAAa,CAACS,KAAK,CAAC;QAC9CI,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBP,MAAM,CAACU,IAAI,CAAC,YAAY,CAAC;MAC3B,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,oBAAmB,GAAIA,CAAA,KAAM;MACnC;MACEvB,KAAK,CAACY,IAAI,CAAC,yCAAyC,EAAE;QACpDC,QAAQ,EAAEN,gBAAgB,CAACO,KAAK;QAChCC,QAAQ,EAAEP,gBAAgB,CAACM,KAAK;QAChCU,cAAc,EAAEf,UAAU,CAACK,KAAI,CAAE;MACnC,CAAC,EACAE,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEZ,gBAAgB,CAACO,KAAK,CAAC;QACjDI,OAAO,CAACC,GAAG,CAACF,QAAQ;QACpBP,MAAM,CAACU,IAAI,CAAC,QAAQ,CAAC;MAEvB,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLjB,aAAa;MACbC,aAAa;MACbC,gBAAgB;MAChBC,gBAAgB;MAChBC,UAAU;MACVE,iBAAiB;MACjBY;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}