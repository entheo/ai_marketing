{"ast":null,"code":"import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from \"date-fns/esm/index.js\";\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from \"../utils.mjs\";\nimport { usePanelCommon, usePanelCommonProps } from \"./use-panel-common.mjs\";\nimport { datePickerInjectionKey } from \"../interface.mjs\";\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from \"../config.mjs\";\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  defaultCalendarStartTime: Number,\n  defaultCalendarEndTime: Number,\n  bindCalendarMonths: Boolean,\n  actions: {\n    type: Array,\n    default: () => ['clear', 'confirm']\n  }\n});\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type) {\n  var _a, _b;\n  const {\n    isDateDisabledRef,\n    isStartHourDisabledRef,\n    isEndHourDisabledRef,\n    isStartMinuteDisabledRef,\n    isEndMinuteDisabledRef,\n    isStartSecondDisabledRef,\n    isEndSecondDisabledRef,\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef,\n    localeRef,\n    rangesRef,\n    closeOnSelectRef,\n    updateValueOnCloseRef,\n    firstDayOfWeekRef,\n    datePickerSlots,\n    monthFormatRef,\n    yearFormatRef,\n    quarterFormatRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isDateDisabled: isDateDisabledRef,\n    isStartHourDisabled: isStartHourDisabledRef,\n    isEndHourDisabled: isEndHourDisabledRef,\n    isStartMinuteDisabled: isStartMinuteDisabledRef,\n    isEndMinuteDisabled: isEndMinuteDisabledRef,\n    isStartSecondDisabled: isStartSecondDisabledRef,\n    isEndSecondDisabled: isEndSecondDisabledRef,\n    isStartDateInvalid: isStartDateInvalidRef,\n    isEndDateInvalid: isEndDateInvalidRef,\n    isStartTimeInvalid: isStartTimeInvalidRef,\n    isEndTimeInvalid: isEndTimeInvalidRef,\n    isStartValueInvalid: isStartValueInvalidRef,\n    isEndValueInvalid: isEndValueInvalidRef,\n    isRangeInvalid: isRangeInvalidRef\n  };\n  const panelCommon = usePanelCommon(props);\n  const startDatesElRef = ref(null);\n  const endDatesElRef = ref(null);\n  const startYearScrollbarRef = ref(null);\n  const endYearScrollbarRef = ref(null);\n  const startYearVlRef = ref(null);\n  const endYearVlRef = ref(null);\n  const startMonthScrollbarRef = ref(null);\n  const endMonthScrollbarRef = ref(null);\n  const {\n    value\n  } = props;\n  const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : Array.isArray(value) && typeof value[0] === 'number' ? value[0] : Date.now();\n  const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n  const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : Array.isArray(value) && typeof value[1] === 'number' ? value[1] : getTime(addMonths(defaultCalendarStartTime, 1)));\n  adjustCalendarTimes(true);\n  const nowRef = ref(Date.now());\n  const isSelectingRef = ref(false);\n  const memorizedStartDateTimeRef = ref(0);\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const startDateInput = ref(Array.isArray(value) ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  const endDateInputRef = ref(Array.isArray(value) ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  // derived computed\n  const selectingPhaseRef = computed(() => {\n    if (isSelectingRef.value) return 'end';else return 'start';\n  });\n  const startDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const endDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const weekdaysRef = computed(() => {\n    return startDateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const startCalendarMonthRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarMonthRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startCalendarYearRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarYearRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[0];\n    return null;\n  });\n  const endTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[1];\n    return null;\n  });\n  const shortcutsRef = computed(() => {\n    const {\n      shortcuts\n    } = props;\n    return shortcuts || rangesRef.value;\n  });\n  const startYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value, {\n      yearFormat: yearFormatRef.value\n    });\n  });\n  const endYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value, {\n      yearFormat: yearFormatRef.value\n    });\n  });\n  const startQuarterArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value, {\n      quarterFormat: quarterFormatRef.value\n    });\n  });\n  const endQuarterArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value, {\n      quarterFormat: quarterFormatRef.value\n    });\n  });\n  const startMonthArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value, {\n      monthFormat: monthFormatRef.value\n    });\n  });\n  const endMonthArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value, {\n      monthFormat: monthFormatRef.value\n    });\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && Array.isArray(value)) {\n      const [startMoment, endMoment] = value;\n      startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      if (!isSelectingRef.value) {\n        syncCalendarTimeWithValue(value);\n      }\n    } else {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n    }\n  });\n  function handleCalendarChange(value, oldValue) {\n    if (type === 'daterange' || type === 'datetimerange') {\n      if (getYear(value) !== getYear(oldValue) || getMonth(value) !== getMonth(oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  }\n  watch(startCalendarDateTimeRef, handleCalendarChange);\n  watch(endCalendarDateTimeRef, handleCalendarChange);\n  // change calendar\n  function adjustCalendarTimes(byStartCalendarTime) {\n    const startTime = startOfMonth(startCalendarDateTimeRef.value);\n    const endTime = startOfMonth(endCalendarDateTimeRef.value);\n    if (props.bindCalendarMonths || startTime >= endTime) {\n      if (byStartCalendarTime) {\n        endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n      } else {\n        startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n      }\n    }\n  }\n  function startCalendarNextYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarNextMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(true);\n  }\n  function endCalendarNextYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarNextMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(false);\n  }\n  function onUpdateStartCalendarValue(value) {\n    startCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(true);\n  }\n  function onUpdateEndCalendarValue(value) {\n    endCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(false);\n  }\n  // The function is used on date panel, not the date-picker value validation\n  function mergedIsDateDisabled(ts) {\n    const isDateDisabled = isDateDisabledRef.value;\n    if (!isDateDisabled) return false;\n    if (!Array.isArray(props.value)) {\n      return isDateDisabled(ts, 'start', null);\n    }\n    if (selectingPhaseRef.value === 'start') {\n      // before you really start to select\n      return isDateDisabled(ts, 'start', null);\n    } else {\n      const {\n        value: memorizedStartDateTime\n      } = memorizedStartDateTimeRef;\n      // after you starting to select\n      if (ts < memorizedStartDateTimeRef.value) {\n        return isDateDisabled(ts, 'start', [memorizedStartDateTime, memorizedStartDateTime]);\n      } else {\n        return isDateDisabled(ts, 'end', [memorizedStartDateTime, memorizedStartDateTime]);\n      }\n    }\n  }\n  function syncCalendarTimeWithValue(value) {\n    if (value === null) return;\n    const [startMoment, endMoment] = value;\n    startCalendarDateTimeRef.value = startMoment;\n    if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n    } else {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n    }\n  }\n  // for daterange & datetimerange\n  function handleDateClick(dateItem) {\n    if (!isSelectingRef.value) {\n      isSelectingRef.value = true;\n      memorizedStartDateTimeRef.value = dateItem.ts;\n      changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n    } else {\n      isSelectingRef.value = false;\n      const {\n        value\n      } = props;\n      if (props.panel && Array.isArray(value)) {\n        changeStartEndTime(value[0], value[1], 'done');\n      } else {\n        if (closeOnSelectRef.value && type === 'daterange') {\n          if (updateValueOnCloseRef.value) {\n            closeCalendar();\n          } else {\n            handleConfirmClick();\n          }\n        }\n      }\n    }\n  }\n  function handleDateMouseEnter(dateItem) {\n    if (isSelectingRef.value) {\n      if (mergedIsDateDisabled(dateItem.ts)) return;\n      if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n        changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n      } else {\n        changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n      }\n    }\n  }\n  function handleConfirmClick() {\n    if (isRangeInvalidRef.value) {\n      return;\n    }\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n  function closeCalendar() {\n    isSelectingRef.value = false;\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n  function changeStartDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n    }\n  }\n  function changeEndDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n    }\n  }\n  function changeStartEndTime(startTime, endTime, source) {\n    if (typeof startTime !== 'number') {\n      startTime = getTime(startTime);\n    }\n    if (source !== 'shortcutPreview') {\n      let startDefaultTime;\n      let endDefaultTime;\n      if (type === 'datetimerange') {\n        const {\n          defaultTime\n        } = props;\n        if (Array.isArray(defaultTime)) {\n          startDefaultTime = getDefaultTime(defaultTime[0]);\n          endDefaultTime = getDefaultTime(defaultTime[1]);\n        } else {\n          startDefaultTime = getDefaultTime(defaultTime);\n          endDefaultTime = startDefaultTime;\n        }\n      }\n      if (startDefaultTime) {\n        startTime = getTime(set(startTime, startDefaultTime));\n      }\n      if (endDefaultTime) {\n        endTime = getTime(set(endTime, endDefaultTime));\n      }\n    }\n    panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n  }\n  function sanitizeValue(datetime) {\n    if (type === 'datetimerange') {\n      return getTime(startOfSecond(datetime));\n    } else if (type === 'monthrange') {\n      return getTime(startOfMonth(datetime));\n    } else {\n      // daterange\n      return getTime(startOfDay(datetime));\n    }\n  }\n  function handleStartDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (!props.value) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      startDateInput.value = value;\n    }\n  }\n  function handleEndDateInput(value) {\n    /** strict check when input */\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (props.value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      endDateInputRef.value = value;\n    }\n  }\n  function handleStartDateInputBlur() {\n    const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function handleEndDateInputBlur() {\n    const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function refreshDisplayDateString(times) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    const {\n      value\n    } = props;\n    if (value === null || !Array.isArray(value)) {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n      return;\n    }\n    if (times === undefined) {\n      times = value;\n    }\n    startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n  function handleStartTimePickerChange(value) {\n    if (value === null) return;\n    changeStartDateTime(value);\n  }\n  function handleEndTimePickerChange(value) {\n    if (value === null) return;\n    changeEndDateTime(value);\n  }\n  function handleRangeShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n  }\n  function handleRangeShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n  function justifyColumnsScrollState(value, type) {\n    const mergedValue = value === undefined ? props.value : value;\n    if (value === undefined || type === 'start') {\n      if (startMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[0]);\n        startMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (startYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[0])) - START_YEAR;\n        startYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n    if (value === undefined || type === 'end') {\n      if (endMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[1]);\n        endMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (endYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[1])) - START_YEAR;\n        endYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n  }\n  // only for monthrange\n  function handleColItemClick(dateItem, clickType) {\n    const {\n      value\n    } = props;\n    const noCurrentValue = !Array.isArray(value);\n    const itemTs = dateItem.type === 'year' && type !== 'yearrange' ? noCurrentValue ? set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(new Date()) : new Date())\n    }).valueOf() : set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(value[clickType === 'start' ? 0 : 1]) : value[clickType === 'start' ? 0 : 1])\n    }).valueOf() : dateItem.ts;\n    if (noCurrentValue) {\n      const partialValue = sanitizeValue(itemTs);\n      const nextValue = [partialValue, partialValue];\n      panelCommon.doUpdateValue(nextValue, props.panel);\n      justifyColumnsScrollState(nextValue, 'start');\n      justifyColumnsScrollState(nextValue, 'end');\n      panelCommon.disableTransitionOneTick();\n      return;\n    }\n    const nextValue = [value[0], value[1]];\n    let otherPartsChanged = false;\n    if (clickType === 'start') {\n      nextValue[0] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[1] = nextValue[0];\n        otherPartsChanged = true;\n      }\n    } else {\n      nextValue[1] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[0] = nextValue[1];\n        otherPartsChanged = true;\n      }\n    }\n    panelCommon.doUpdateValue(nextValue, props.panel);\n    switch (type) {\n      case 'monthrange':\n      case 'quarterrange':\n        panelCommon.disableTransitionOneTick();\n        if (otherPartsChanged) {\n          justifyColumnsScrollState(nextValue, 'start');\n          justifyColumnsScrollState(nextValue, 'end');\n        } else {\n          justifyColumnsScrollState(nextValue, clickType);\n        }\n        break;\n      case 'yearrange':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(nextValue, 'start');\n        justifyColumnsScrollState(nextValue, 'end');\n    }\n  }\n  function handleStartYearVlScroll() {\n    var _a;\n    (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function handleEndYearVlScroll() {\n    var _a;\n    (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function virtualListContainer(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return ((_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef) || null;\n    } else {\n      return ((_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef) || null;\n    }\n  }\n  function virtualListContent(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return ((_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef) || null;\n    } else {\n      return ((_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef) || null;\n    }\n  }\n  const childComponentRefs = {\n    startYearVlRef,\n    endYearVlRef,\n    startMonthScrollbarRef,\n    endMonthScrollbarRef,\n    startYearScrollbarRef,\n    endYearScrollbarRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    startDatesElRef,\n    endDatesElRef,\n    handleDateClick,\n    handleColItemClick,\n    handleDateMouseEnter,\n    handleConfirmClick,\n    startCalendarPrevYear,\n    startCalendarPrevMonth,\n    startCalendarNextYear,\n    startCalendarNextMonth,\n    endCalendarPrevYear,\n    endCalendarPrevMonth,\n    endCalendarNextMonth,\n    endCalendarNextYear,\n    mergedIsDateDisabled,\n    changeStartEndTime,\n    ranges: rangesRef,\n    startCalendarMonth: startCalendarMonthRef,\n    startCalendarYear: startCalendarYearRef,\n    endCalendarMonth: endCalendarMonthRef,\n    endCalendarYear: endCalendarYearRef,\n    weekdays: weekdaysRef,\n    startDateArray: startDateArrayRef,\n    endDateArray: endDateArrayRef,\n    startYearArray: startYearArrayRef,\n    startMonthArray: startMonthArrayRef,\n    startQuarterArray: startQuarterArrayRef,\n    endYearArray: endYearArrayRef,\n    endMonthArray: endMonthArrayRef,\n    endQuarterArray: endQuarterArrayRef,\n    isSelecting: isSelectingRef,\n    handleRangeShortcutMouseenter,\n    handleRangeShortcutClick\n  }, panelCommon), validation), childComponentRefs), {\n    // datetimerangeonly\n    startDateDisplayString: startDateInput,\n    endDateInput: endDateInputRef,\n    timePickerSize: panelCommon.timePickerSize,\n    startTimeValue: startTimeValueRef,\n    endTimeValue: endTimeValueRef,\n    datePickerSlots,\n    shortcuts: shortcutsRef,\n    startCalendarDateTime: startCalendarDateTimeRef,\n    endCalendarDateTime: endCalendarDateTimeRef,\n    justifyColumnsScrollState,\n    handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus,\n    handleStartTimePickerChange,\n    handleEndTimePickerChange,\n    handleStartDateInput,\n    handleStartDateInputBlur,\n    handleEndDateInput,\n    handleEndDateInputBlur,\n    handleStartYearVlScroll,\n    handleEndYearVlScroll,\n    virtualListContainer,\n    virtualListContent,\n    onUpdateStartCalendarValue,\n    onUpdateEndCalendarValue\n  });\n}\nexport { useDualCalendar, useDualCalendarProps };","map":{"version":3,"names":["inject","computed","watch","ref","addMonths","format","getYear","getMonth","startOfMonth","isValid","startOfSecond","startOfDay","set","getDate","getTime","startOfQuarter","dateArray","strictParse","yearArray","monthArray","getDefaultTime","pluckValueFromRange","quarterArray","usePanelCommon","usePanelCommonProps","datePickerInjectionKey","MONTH_ITEM_HEIGHT","START_YEAR","useDualCalendarProps","Object","assign","defaultCalendarStartTime","Number","defaultCalendarEndTime","bindCalendarMonths","Boolean","actions","type","Array","default","useDualCalendar","props","_a","_b","isDateDisabledRef","isStartHourDisabledRef","isEndHourDisabledRef","isStartMinuteDisabledRef","isEndMinuteDisabledRef","isStartSecondDisabledRef","isEndSecondDisabledRef","isStartDateInvalidRef","isEndDateInvalidRef","isStartTimeInvalidRef","isEndTimeInvalidRef","isStartValueInvalidRef","isEndValueInvalidRef","isRangeInvalidRef","localeRef","rangesRef","closeOnSelectRef","updateValueOnCloseRef","firstDayOfWeekRef","datePickerSlots","monthFormatRef","yearFormatRef","quarterFormatRef","validation","isDateDisabled","isStartHourDisabled","isEndHourDisabled","isStartMinuteDisabled","isEndMinuteDisabled","isStartSecondDisabled","isEndSecondDisabled","isStartDateInvalid","isEndDateInvalid","isStartTimeInvalid","isEndTimeInvalid","isStartValueInvalid","isEndValueInvalid","isRangeInvalid","panelCommon","startDatesElRef","endDatesElRef","startYearScrollbarRef","endYearScrollbarRef","startYearVlRef","endYearVlRef","startMonthScrollbarRef","endMonthScrollbarRef","value","isArray","Date","now","startCalendarDateTimeRef","endCalendarDateTimeRef","adjustCalendarTimes","nowRef","isSelectingRef","memorizedStartDateTimeRef","mergedDateFormatRef","dateFormat","startDateInput","dateFnsOptions","endDateInputRef","selectingPhaseRef","startDateArrayRef","firstDayOfWeek","endDateArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","startCalendarMonthRef","monthFormat","endCalendarMonthRef","startCalendarYearRef","yearFormat","endCalendarYearRef","startTimeValueRef","endTimeValueRef","shortcutsRef","shortcuts","startYearArrayRef","endYearArrayRef","startQuarterArrayRef","startValue","quarterFormat","endQuarterArrayRef","endValue","startMonthArrayRef","endMonthArrayRef","startMoment","endMoment","syncCalendarTimeWithValue","handleCalendarChange","oldValue","disableTransitionOneTick","byStartCalendarTime","startTime","endTime","startCalendarNextYear","startCalendarPrevYear","startCalendarNextMonth","startCalendarPrevMonth","endCalendarNextYear","endCalendarPrevYear","endCalendarNextMonth","endCalendarPrevMonth","onUpdateStartCalendarValue","onUpdateEndCalendarValue","mergedIsDateDisabled","memorizedStartDateTime","handleDateClick","changeStartEndTime","panel","closeCalendar","handleConfirmClick","handleDateMouseEnter","doConfirm","active","doClose","changeStartDateTime","time","doUpdateValue","Math","max","changeEndDateTime","min","source","startDefaultTime","endDefaultTime","defaultTime","sanitizeValue","datetime","handleStartDateInput","date","newValue","year","month","handleEndDateInput","handleStartDateInputBlur","refreshDisplayDateString","handleEndDateInputBlur","times","undefined","handleStartTimePickerChange","handleEndTimePickerChange","handleRangeShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleRangeShortcutClick","clearPendingValue","justifyColumnsScrollState","mergedValue","monthIndex","scrollTo","debounce","index","elSize","yearIndex","handleColItemClick","clickType","noCurrentValue","itemTs","valueOf","partialValue","nextValue","otherPartsChanged","handleStartYearVlScroll","sync","handleEndYearVlScroll","virtualListContainer","listElRef","virtualListContent","itemsElRef","childComponentRefs","ranges","startCalendarMonth","startCalendarYear","endCalendarMonth","endCalendarYear","weekdays","startDateArray","endDateArray","startYearArray","startMonthArray","startQuarterArray","endYearArray","endMonthArray","endQuarterArray","isSelecting","startDateDisplayString","endDateInput","timePickerSize","startTimeValue","endTimeValue","startCalendarDateTime","endCalendarDateTime","handleFocusDetectorFocus"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/date-picker/src/panel/use-dual-calendar.mjs"],"sourcesContent":["import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from \"date-fns/esm/index.js\";\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from \"../utils.mjs\";\nimport { usePanelCommon, usePanelCommonProps } from \"./use-panel-common.mjs\";\nimport { datePickerInjectionKey } from \"../interface.mjs\";\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from \"../config.mjs\";\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  defaultCalendarStartTime: Number,\n  defaultCalendarEndTime: Number,\n  bindCalendarMonths: Boolean,\n  actions: {\n    type: Array,\n    default: () => ['clear', 'confirm']\n  }\n});\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type) {\n  var _a, _b;\n  const {\n    isDateDisabledRef,\n    isStartHourDisabledRef,\n    isEndHourDisabledRef,\n    isStartMinuteDisabledRef,\n    isEndMinuteDisabledRef,\n    isStartSecondDisabledRef,\n    isEndSecondDisabledRef,\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef,\n    localeRef,\n    rangesRef,\n    closeOnSelectRef,\n    updateValueOnCloseRef,\n    firstDayOfWeekRef,\n    datePickerSlots,\n    monthFormatRef,\n    yearFormatRef,\n    quarterFormatRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isDateDisabled: isDateDisabledRef,\n    isStartHourDisabled: isStartHourDisabledRef,\n    isEndHourDisabled: isEndHourDisabledRef,\n    isStartMinuteDisabled: isStartMinuteDisabledRef,\n    isEndMinuteDisabled: isEndMinuteDisabledRef,\n    isStartSecondDisabled: isStartSecondDisabledRef,\n    isEndSecondDisabled: isEndSecondDisabledRef,\n    isStartDateInvalid: isStartDateInvalidRef,\n    isEndDateInvalid: isEndDateInvalidRef,\n    isStartTimeInvalid: isStartTimeInvalidRef,\n    isEndTimeInvalid: isEndTimeInvalidRef,\n    isStartValueInvalid: isStartValueInvalidRef,\n    isEndValueInvalid: isEndValueInvalidRef,\n    isRangeInvalid: isRangeInvalidRef\n  };\n  const panelCommon = usePanelCommon(props);\n  const startDatesElRef = ref(null);\n  const endDatesElRef = ref(null);\n  const startYearScrollbarRef = ref(null);\n  const endYearScrollbarRef = ref(null);\n  const startYearVlRef = ref(null);\n  const endYearVlRef = ref(null);\n  const startMonthScrollbarRef = ref(null);\n  const endMonthScrollbarRef = ref(null);\n  const {\n    value\n  } = props;\n  const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : Array.isArray(value) && typeof value[0] === 'number' ? value[0] : Date.now();\n  const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n  const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : Array.isArray(value) && typeof value[1] === 'number' ? value[1] : getTime(addMonths(defaultCalendarStartTime, 1)));\n  adjustCalendarTimes(true);\n  const nowRef = ref(Date.now());\n  const isSelectingRef = ref(false);\n  const memorizedStartDateTimeRef = ref(0);\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const startDateInput = ref(Array.isArray(value) ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  const endDateInputRef = ref(Array.isArray(value) ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  // derived computed\n  const selectingPhaseRef = computed(() => {\n    if (isSelectingRef.value) return 'end';else return 'start';\n  });\n  const startDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const endDateArrayRef = computed(() => {\n    var _a;\n    return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const weekdaysRef = computed(() => {\n    return startDateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const startCalendarMonthRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarMonthRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startCalendarYearRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarYearRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[0];\n    return null;\n  });\n  const endTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[1];\n    return null;\n  });\n  const shortcutsRef = computed(() => {\n    const {\n      shortcuts\n    } = props;\n    return shortcuts || rangesRef.value;\n  });\n  const startYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value, {\n      yearFormat: yearFormatRef.value\n    });\n  });\n  const endYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value, {\n      yearFormat: yearFormatRef.value\n    });\n  });\n  const startQuarterArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value, {\n      quarterFormat: quarterFormatRef.value\n    });\n  });\n  const endQuarterArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value, {\n      quarterFormat: quarterFormatRef.value\n    });\n  });\n  const startMonthArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value, {\n      monthFormat: monthFormatRef.value\n    });\n  });\n  const endMonthArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value, {\n      monthFormat: monthFormatRef.value\n    });\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && Array.isArray(value)) {\n      const [startMoment, endMoment] = value;\n      startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      if (!isSelectingRef.value) {\n        syncCalendarTimeWithValue(value);\n      }\n    } else {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n    }\n  });\n  function handleCalendarChange(value, oldValue) {\n    if (type === 'daterange' || type === 'datetimerange') {\n      if (getYear(value) !== getYear(oldValue) || getMonth(value) !== getMonth(oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  }\n  watch(startCalendarDateTimeRef, handleCalendarChange);\n  watch(endCalendarDateTimeRef, handleCalendarChange);\n  // change calendar\n  function adjustCalendarTimes(byStartCalendarTime) {\n    const startTime = startOfMonth(startCalendarDateTimeRef.value);\n    const endTime = startOfMonth(endCalendarDateTimeRef.value);\n    if (props.bindCalendarMonths || startTime >= endTime) {\n      if (byStartCalendarTime) {\n        endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n      } else {\n        startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n      }\n    }\n  }\n  function startCalendarNextYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarNextMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(true);\n  }\n  function startCalendarPrevMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(true);\n  }\n  function endCalendarNextYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarNextMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(false);\n  }\n  function endCalendarPrevMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(false);\n  }\n  function onUpdateStartCalendarValue(value) {\n    startCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(true);\n  }\n  function onUpdateEndCalendarValue(value) {\n    endCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(false);\n  }\n  // The function is used on date panel, not the date-picker value validation\n  function mergedIsDateDisabled(ts) {\n    const isDateDisabled = isDateDisabledRef.value;\n    if (!isDateDisabled) return false;\n    if (!Array.isArray(props.value)) {\n      return isDateDisabled(ts, 'start', null);\n    }\n    if (selectingPhaseRef.value === 'start') {\n      // before you really start to select\n      return isDateDisabled(ts, 'start', null);\n    } else {\n      const {\n        value: memorizedStartDateTime\n      } = memorizedStartDateTimeRef;\n      // after you starting to select\n      if (ts < memorizedStartDateTimeRef.value) {\n        return isDateDisabled(ts, 'start', [memorizedStartDateTime, memorizedStartDateTime]);\n      } else {\n        return isDateDisabled(ts, 'end', [memorizedStartDateTime, memorizedStartDateTime]);\n      }\n    }\n  }\n  function syncCalendarTimeWithValue(value) {\n    if (value === null) return;\n    const [startMoment, endMoment] = value;\n    startCalendarDateTimeRef.value = startMoment;\n    if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n    } else {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n    }\n  }\n  // for daterange & datetimerange\n  function handleDateClick(dateItem) {\n    if (!isSelectingRef.value) {\n      isSelectingRef.value = true;\n      memorizedStartDateTimeRef.value = dateItem.ts;\n      changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n    } else {\n      isSelectingRef.value = false;\n      const {\n        value\n      } = props;\n      if (props.panel && Array.isArray(value)) {\n        changeStartEndTime(value[0], value[1], 'done');\n      } else {\n        if (closeOnSelectRef.value && type === 'daterange') {\n          if (updateValueOnCloseRef.value) {\n            closeCalendar();\n          } else {\n            handleConfirmClick();\n          }\n        }\n      }\n    }\n  }\n  function handleDateMouseEnter(dateItem) {\n    if (isSelectingRef.value) {\n      if (mergedIsDateDisabled(dateItem.ts)) return;\n      if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n        changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n      } else {\n        changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n      }\n    }\n  }\n  function handleConfirmClick() {\n    if (isRangeInvalidRef.value) {\n      return;\n    }\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n  function closeCalendar() {\n    isSelectingRef.value = false;\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n  function changeStartDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n    }\n  }\n  function changeEndDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n    }\n  }\n  function changeStartEndTime(startTime, endTime, source) {\n    if (typeof startTime !== 'number') {\n      startTime = getTime(startTime);\n    }\n    if (source !== 'shortcutPreview') {\n      let startDefaultTime;\n      let endDefaultTime;\n      if (type === 'datetimerange') {\n        const {\n          defaultTime\n        } = props;\n        if (Array.isArray(defaultTime)) {\n          startDefaultTime = getDefaultTime(defaultTime[0]);\n          endDefaultTime = getDefaultTime(defaultTime[1]);\n        } else {\n          startDefaultTime = getDefaultTime(defaultTime);\n          endDefaultTime = startDefaultTime;\n        }\n      }\n      if (startDefaultTime) {\n        startTime = getTime(set(startTime, startDefaultTime));\n      }\n      if (endDefaultTime) {\n        endTime = getTime(set(endTime, endDefaultTime));\n      }\n    }\n    panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n  }\n  function sanitizeValue(datetime) {\n    if (type === 'datetimerange') {\n      return getTime(startOfSecond(datetime));\n    } else if (type === 'monthrange') {\n      return getTime(startOfMonth(datetime));\n    } else {\n      // daterange\n      return getTime(startOfDay(datetime));\n    }\n  }\n  function handleStartDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (!props.value) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      startDateInput.value = value;\n    }\n  }\n  function handleEndDateInput(value) {\n    /** strict check when input */\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    if (isValid(date)) {\n      if (props.value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      endDateInputRef.value = value;\n    }\n  }\n  function handleStartDateInputBlur() {\n    const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function handleEndDateInputBlur() {\n    const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n  function refreshDisplayDateString(times) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    const {\n      value\n    } = props;\n    if (value === null || !Array.isArray(value)) {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n      return;\n    }\n    if (times === undefined) {\n      times = value;\n    }\n    startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n  function handleStartTimePickerChange(value) {\n    if (value === null) return;\n    changeStartDateTime(value);\n  }\n  function handleEndTimePickerChange(value) {\n    if (value === null) return;\n    changeEndDateTime(value);\n  }\n  function handleRangeShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n  }\n  function handleRangeShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n  function justifyColumnsScrollState(value, type) {\n    const mergedValue = value === undefined ? props.value : value;\n    if (value === undefined || type === 'start') {\n      if (startMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[0]);\n        startMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (startYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[0])) - START_YEAR;\n        startYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n    if (value === undefined || type === 'end') {\n      if (endMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[1]);\n        endMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n      if (endYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[1])) - START_YEAR;\n        endYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n  }\n  // only for monthrange\n  function handleColItemClick(dateItem, clickType) {\n    const {\n      value\n    } = props;\n    const noCurrentValue = !Array.isArray(value);\n    const itemTs = dateItem.type === 'year' && type !== 'yearrange' ? noCurrentValue ? set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(new Date()) : new Date())\n    }).valueOf() : set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(value[clickType === 'start' ? 0 : 1]) : value[clickType === 'start' ? 0 : 1])\n    }).valueOf() : dateItem.ts;\n    if (noCurrentValue) {\n      const partialValue = sanitizeValue(itemTs);\n      const nextValue = [partialValue, partialValue];\n      panelCommon.doUpdateValue(nextValue, props.panel);\n      justifyColumnsScrollState(nextValue, 'start');\n      justifyColumnsScrollState(nextValue, 'end');\n      panelCommon.disableTransitionOneTick();\n      return;\n    }\n    const nextValue = [value[0], value[1]];\n    let otherPartsChanged = false;\n    if (clickType === 'start') {\n      nextValue[0] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[1] = nextValue[0];\n        otherPartsChanged = true;\n      }\n    } else {\n      nextValue[1] = sanitizeValue(itemTs);\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[0] = nextValue[1];\n        otherPartsChanged = true;\n      }\n    }\n    panelCommon.doUpdateValue(nextValue, props.panel);\n    switch (type) {\n      case 'monthrange':\n      case 'quarterrange':\n        panelCommon.disableTransitionOneTick();\n        if (otherPartsChanged) {\n          justifyColumnsScrollState(nextValue, 'start');\n          justifyColumnsScrollState(nextValue, 'end');\n        } else {\n          justifyColumnsScrollState(nextValue, clickType);\n        }\n        break;\n      case 'yearrange':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(nextValue, 'start');\n        justifyColumnsScrollState(nextValue, 'end');\n    }\n  }\n  function handleStartYearVlScroll() {\n    var _a;\n    (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function handleEndYearVlScroll() {\n    var _a;\n    (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n  function virtualListContainer(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return ((_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef) || null;\n    } else {\n      return ((_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef) || null;\n    }\n  }\n  function virtualListContent(type) {\n    var _a, _b;\n    if (type === 'start') {\n      return ((_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef) || null;\n    } else {\n      return ((_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef) || null;\n    }\n  }\n  const childComponentRefs = {\n    startYearVlRef,\n    endYearVlRef,\n    startMonthScrollbarRef,\n    endMonthScrollbarRef,\n    startYearScrollbarRef,\n    endYearScrollbarRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    startDatesElRef,\n    endDatesElRef,\n    handleDateClick,\n    handleColItemClick,\n    handleDateMouseEnter,\n    handleConfirmClick,\n    startCalendarPrevYear,\n    startCalendarPrevMonth,\n    startCalendarNextYear,\n    startCalendarNextMonth,\n    endCalendarPrevYear,\n    endCalendarPrevMonth,\n    endCalendarNextMonth,\n    endCalendarNextYear,\n    mergedIsDateDisabled,\n    changeStartEndTime,\n    ranges: rangesRef,\n    startCalendarMonth: startCalendarMonthRef,\n    startCalendarYear: startCalendarYearRef,\n    endCalendarMonth: endCalendarMonthRef,\n    endCalendarYear: endCalendarYearRef,\n    weekdays: weekdaysRef,\n    startDateArray: startDateArrayRef,\n    endDateArray: endDateArrayRef,\n    startYearArray: startYearArrayRef,\n    startMonthArray: startMonthArrayRef,\n    startQuarterArray: startQuarterArrayRef,\n    endYearArray: endYearArrayRef,\n    endMonthArray: endMonthArrayRef,\n    endQuarterArray: endQuarterArrayRef,\n    isSelecting: isSelectingRef,\n    handleRangeShortcutMouseenter,\n    handleRangeShortcutClick\n  }, panelCommon), validation), childComponentRefs), {\n    // datetimerangeonly\n    startDateDisplayString: startDateInput,\n    endDateInput: endDateInputRef,\n    timePickerSize: panelCommon.timePickerSize,\n    startTimeValue: startTimeValueRef,\n    endTimeValue: endTimeValueRef,\n    datePickerSlots,\n    shortcuts: shortcutsRef,\n    startCalendarDateTime: startCalendarDateTimeRef,\n    endCalendarDateTime: endCalendarDateTimeRef,\n    justifyColumnsScrollState,\n    handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus,\n    handleStartTimePickerChange,\n    handleEndTimePickerChange,\n    handleStartDateInput,\n    handleStartDateInputBlur,\n    handleEndDateInput,\n    handleEndDateInputBlur,\n    handleStartYearVlScroll,\n    handleEndYearVlScroll,\n    virtualListContainer,\n    virtualListContent,\n    onUpdateStartCalendarValue,\n    onUpdateEndCalendarValue\n  });\n}\nexport { useDualCalendar, useDualCalendarProps };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}