{"ast":null,"code":"import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from \"../../_utils/index.mjs\";\nimport { gridInjectionKey } from \"./config.mjs\";\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n  span: {\n    type: [Number, String],\n    default: defaultSpan\n  },\n  offset: {\n    type: [Number, String],\n    default: 0\n  },\n  suffix: Boolean,\n  // private props\n  privateOffset: Number,\n  privateSpan: Number,\n  privateColStart: Number,\n  privateShow: {\n    type: Boolean,\n    default: true\n  }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n  __GRID_ITEM__: true,\n  name: 'GridItem',\n  alias: ['Gi'],\n  props: gridItemProps,\n  setup() {\n    const {\n      isSsrRef,\n      xGapRef,\n      itemStyleRef,\n      overflowRef,\n      layoutShiftDisabledRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(gridInjectionKey);\n    const self = getCurrentInstance();\n    return {\n      overflow: overflowRef,\n      itemStyle: itemStyleRef,\n      layoutShiftDisabled: layoutShiftDisabledRef,\n      mergedXGap: computed(() => {\n        return pxfy(xGapRef.value || 0);\n      }),\n      deriveStyle: () => {\n        void isSsrRef.value;\n        // Here is quite a hack, I hope there is a better way to solve it\n        const {\n          privateSpan = defaultSpan,\n          privateShow = true,\n          privateColStart = undefined,\n          privateOffset = 0\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        } = self.vnode.props;\n        const {\n          value: xGap\n        } = xGapRef;\n        const mergedXGap = pxfy(xGap || 0);\n        return {\n          display: !privateShow ? 'none' : '',\n          gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n          marginLeft: privateOffset ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})` : ''\n        };\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    if (this.layoutShiftDisabled) {\n      const {\n        span,\n        offset,\n        mergedXGap\n      } = this;\n      return h(\"div\", {\n        style: {\n          gridColumn: `span ${span} / span ${span}`,\n          marginLeft: offset ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})` : ''\n        }\n      }, this.$slots);\n    }\n    return h(\"div\", {\n      style: [this.itemStyle, this.deriveStyle()]\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      overflow: this.overflow\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","getCurrentInstance","computed","pxfy","keysOf","gridInjectionKey","defaultSpan","gridItemProps","span","type","Number","String","default","offset","suffix","Boolean","privateOffset","privateSpan","privateColStart","privateShow","gridItemPropKeys","__GRID_ITEM__","name","alias","props","setup","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","self","overflow","itemStyle","layoutShiftDisabled","mergedXGap","value","deriveStyle","undefined","vnode","xGap","display","gridColumn","marginLeft","render","_a","_b","style","$slots","call"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/grid/src/GridItem.mjs"],"sourcesContent":["import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from \"../../_utils/index.mjs\";\nimport { gridInjectionKey } from \"./config.mjs\";\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n  span: {\n    type: [Number, String],\n    default: defaultSpan\n  },\n  offset: {\n    type: [Number, String],\n    default: 0\n  },\n  suffix: Boolean,\n  // private props\n  privateOffset: Number,\n  privateSpan: Number,\n  privateColStart: Number,\n  privateShow: {\n    type: Boolean,\n    default: true\n  }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n  __GRID_ITEM__: true,\n  name: 'GridItem',\n  alias: ['Gi'],\n  props: gridItemProps,\n  setup() {\n    const {\n      isSsrRef,\n      xGapRef,\n      itemStyleRef,\n      overflowRef,\n      layoutShiftDisabledRef\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(gridInjectionKey);\n    const self = getCurrentInstance();\n    return {\n      overflow: overflowRef,\n      itemStyle: itemStyleRef,\n      layoutShiftDisabled: layoutShiftDisabledRef,\n      mergedXGap: computed(() => {\n        return pxfy(xGapRef.value || 0);\n      }),\n      deriveStyle: () => {\n        void isSsrRef.value;\n        // Here is quite a hack, I hope there is a better way to solve it\n        const {\n          privateSpan = defaultSpan,\n          privateShow = true,\n          privateColStart = undefined,\n          privateOffset = 0\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        } = self.vnode.props;\n        const {\n          value: xGap\n        } = xGapRef;\n        const mergedXGap = pxfy(xGap || 0);\n        return {\n          display: !privateShow ? 'none' : '',\n          gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n          marginLeft: privateOffset ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})` : ''\n        };\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    if (this.layoutShiftDisabled) {\n      const {\n        span,\n        offset,\n        mergedXGap\n      } = this;\n      return h(\"div\", {\n        style: {\n          gridColumn: `span ${span} / span ${span}`,\n          marginLeft: offset ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})` : ''\n        }\n      }, this.$slots);\n    }\n    return h(\"div\", {\n      style: [this.itemStyle, this.deriveStyle()]\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      overflow: this.overflow\n    }));\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}