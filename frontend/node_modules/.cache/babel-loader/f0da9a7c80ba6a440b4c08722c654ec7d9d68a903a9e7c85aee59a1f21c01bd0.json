{"ast":null,"code":"import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { depx, getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from \"../../../_mixins/index.mjs\";\nimport { rtlInset, useReactivated, Wrapper } from \"../../../_utils/index.mjs\";\nimport { scrollbarLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: [String, Array],\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n    // dom ref\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null);\n    // data ref\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + depx(themeRef.value.self.width) * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + depx(themeRef.value.self.height) * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    });\n    // methods\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n      if (typeof options === 'number') {\n        scrollToPosition(options, y !== null && y !== void 0 ? y : 0, 0, false, 'auto');\n        return;\n      }\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {\n            // do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n          return;\n        }\n      }\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      isShowXBarRef.value = true;\n    }\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      isShowYBarRef.value = true;\n    }\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    function sync() {\n      if (!props.scrollable) return;\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n    function isMouseUpAway(e) {\n      var _a;\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          colorHover,\n          height,\n          width,\n          borderRadius,\n          railInsetHorizontal,\n          railInsetVertical,\n          railColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': borderRadius,\n        '--n-scrollbar-width': width,\n        '--n-scrollbar-height': height,\n        '--n-scrollbar-rail-inset-horizontal': railInsetHorizontal,\n        '--n-scrollbar-rail-inset-vertical': (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? rtlInset(railInsetVertical) : railInsetVertical,\n        '--n-scrollbar-rail-color': railColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n    const createYRail = (className, style) => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`, className],\n        \"data-scrollbar-rail\": true,\n        style: [style || '', this.verticalRailStyle],\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n    const createChildren = () => {\n      var _a, _b;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(undefined, undefined), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail(this.themeClass, this.cssVars));\n    } else {\n      return scrollbarNode;\n    }\n  }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;","map":{"version":3,"names":["h","ref","defineComponent","computed","onMounted","onBeforeUnmount","mergeProps","Transition","watchEffect","Fragment","on","off","VResizeObserver","useIsIos","depx","getPreciseEventTarget","useConfig","useTheme","useThemeClass","useRtl","rtlInset","useReactivated","Wrapper","scrollbarLight","style","scrollbarProps","Object","assign","props","duration","type","Number","default","scrollable","Boolean","xScrollable","trigger","String","useUnifiedContainer","triggerDisplayManually","container","Function","content","containerClass","containerStyle","contentClass","Array","contentStyle","horizontalRailStyle","verticalRailStyle","onScroll","onWheel","onResize","internalOnUpdateScrollLeft","internalHoistYRail","Scrollbar","name","inheritAttrs","setup","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","rtlEnabledRef","wrapperRef","containerRef","contentRef","yRailRef","xRailRef","contentHeightRef","contentWidthRef","containerHeightRef","containerWidthRef","yRailSizeRef","xRailSizeRef","containerScrollTopRef","containerScrollLeftRef","isShowXBarRef","isShowYBarRef","yBarPressed","xBarPressed","xBarVanishTimerId","yBarVanishTimerId","memoYTop","memoXLeft","memoMouseX","memoMouseY","isIos","themeRef","yBarSizeRef","value","containerHeight","contentHeight","yRailSize","Math","min","self","width","yBarSizePxRef","xBarSizeRef","containerWidth","contentWidth","xRailSize","height","xBarSizePxRef","yBarTopRef","containerScrollTop","heightDiff","yBarTopPxRef","xBarLeftRef","containerScrollLeft","widthDiff","xBarLeftPxRef","needYBarRef","needXBarRef","mergedShowXBarRef","mergedShowYBarRef","mergedContainerRef","mergedContentRef","activateState","scrollTo","top","left","handleContentResize","isDeactivated","sync","handleContainerResize","e","options","y","scrollToPosition","index","elSize","position","behavior","el","debounce","undefined","offsetTop","offsetHeight","MAX_SAFE_INTEGER","scrollBy","scrollTop","handleMouseEnterWrapper","showXBar","showYBar","handleMouseLeaveWrapper","hideBar","hideYBar","hideXBar","window","clearTimeout","setTimeout","handleScroll","syncScrollState","scrollLeft","syncPositionState","offsetWidth","xRailEl","yRailEl","syncUnifiedContainer","scrollHeight","scrollWidth","isMouseUpAway","_a","contains","handleXScrollMouseDown","preventDefault","stopPropagation","handleXScrollMouseMove","handleXScrollMouseUp","innerWidth","clientX","xBarSize","dX","dScrollLeft","toScrollLeftUpperBound","toScrollLeft","max","handleYScrollMouseDown","handleYScrollMouseMove","handleYScrollMouseUp","clientY","yBarSize","dY","dScrollTop","toScrollTopUpperBound","toScrollTop","needXBar","needYBar","mergedClsPrefix","classList","add","remove","cssVarsRef","common","cubicBezierEaseInOut","color","colorHover","borderRadius","railInsetHorizontal","railInsetVertical","railColor","themeClassHandle","exposedMethods","rtlEnabled","yBarSizePx","xBarSizePx","yBarTopPx","xBarLeftPx","isShowXBar","isShowYBar","cssVars","themeClass","onRender","render","$slots","call","triggerIsNone","createYRail","className","class","onMousedown","createChildren","_b","$attrs","role","onMouseenter","onMouseleave","right","scrollbarNode","XScrollbar"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/_internal/scrollbar/src/Scrollbar.mjs"],"sourcesContent":["import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { depx, getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from \"../../../_mixins/index.mjs\";\nimport { rtlInset, useReactivated, Wrapper } from \"../../../_utils/index.mjs\";\nimport { scrollbarLight } from \"../styles/index.mjs\";\nimport style from \"./styles/index.cssr.mjs\";\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: [String, Array],\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n    // dom ref\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null);\n    // data ref\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + depx(themeRef.value.self.width) * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + depx(themeRef.value.self.height) * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    });\n    // methods\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n      if (typeof options === 'number') {\n        scrollToPosition(options, y !== null && y !== void 0 ? y : 0, 0, false, 'auto');\n        return;\n      }\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {\n            // do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n          return;\n        }\n      }\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      isShowXBarRef.value = true;\n    }\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      isShowYBarRef.value = true;\n    }\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    function sync() {\n      if (!props.scrollable) return;\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n    function isMouseUpAway(e) {\n      var _a;\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          colorHover,\n          height,\n          width,\n          borderRadius,\n          railInsetHorizontal,\n          railInsetVertical,\n          railColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': borderRadius,\n        '--n-scrollbar-width': width,\n        '--n-scrollbar-height': height,\n        '--n-scrollbar-rail-inset-horizontal': railInsetHorizontal,\n        '--n-scrollbar-rail-inset-vertical': (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? rtlInset(railInsetVertical) : railInsetVertical,\n        '--n-scrollbar-rail-color': railColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n    const createYRail = (className, style) => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`, className],\n        \"data-scrollbar-rail\": true,\n        style: [style || '', this.verticalRailStyle],\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n    const createChildren = () => {\n      var _a, _b;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(undefined, undefined), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail(this.themeClass, this.cssVars));\n    } else {\n      return scrollbarNode;\n    }\n  }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}