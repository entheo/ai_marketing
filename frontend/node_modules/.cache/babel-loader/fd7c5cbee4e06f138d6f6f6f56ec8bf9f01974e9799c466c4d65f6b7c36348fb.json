{"ast":null,"code":"import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from \"../../select/src/utils.mjs\";\nimport { NInternalSelectMenu } from \"../../_internal/index.mjs\";\nimport { createSelectOptions } from \"./utils.mjs\";\nimport { cascaderInjectionKey } from \"./interface.mjs\";\nimport { resolveSlot } from \"../../_utils/index.mjs\";\nexport default defineComponent({\n  name: 'NCascaderSelectMenu',\n  props: {\n    value: {\n      type: [String, Number, Array],\n      default: null\n    },\n    show: Boolean,\n    pattern: {\n      type: String,\n      default: ''\n    },\n    multiple: Boolean,\n    tmNodes: {\n      type: Array,\n      default: () => []\n    },\n    filter: Function,\n    labelField: {\n      type: String,\n      required: true\n    },\n    separator: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      isMountedRef,\n      mergedValueRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      mergedCheckStrategyRef,\n      slots: cascaderSlots,\n      syncSelectMenuPosition,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      doUncheck: cascaderDoUncheck,\n      doCheck: cascaderDoCheck,\n      clearPattern\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(cascaderInjectionKey);\n    const menuInstRef = ref(null);\n    const selectOptionsRef = computed(() => {\n      return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n    });\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, _, path) => path.some(option => option[labelField] && ~option[labelField].indexOf(pattern));\n    });\n    const filteredSelectOptionsRef = computed(() => {\n      const {\n        pattern\n      } = props;\n      const {\n        value: mergedFilter\n      } = mergedFilterRef;\n      return (pattern ? selectOptionsRef.value.filter(option => {\n        return mergedFilter(pattern, option.rawNode, option.path);\n      }) : selectOptionsRef.value).map(option => ({\n        value: option.value,\n        label: option.label\n      }));\n    });\n    const selectTreeMateRef = computed(() => {\n      return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n    });\n    function handleResize() {\n      syncSelectMenuPosition();\n    }\n    function handleToggle(tmNode) {\n      doCheck(tmNode);\n    }\n    // We don't care what type the tmNode is, we only care about its key\n    function doCheck(tmNode) {\n      if (props.multiple) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n        if (Array.isArray(mergedValue)) {\n          if (!mergedValue.includes(tmNode.key)) {\n            cascaderDoCheck(tmNode.key);\n          } else {\n            cascaderDoUncheck(tmNode.key);\n          }\n        } else if (mergedValue === null) {\n          cascaderDoCheck(tmNode.key);\n        }\n        clearPattern();\n      } else {\n        cascaderDoCheck(tmNode.key);\n        // currently the select menu is set to focusable\n        // however just leave it here\n        closeMenu(true);\n      }\n    }\n    function prev() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n    }\n    function next() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n    }\n    function enter() {\n      var _a;\n      if (menuInstRef) {\n        const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n        if (pendingOptionTmNode) {\n          doCheck(pendingOptionTmNode);\n        }\n        return true;\n      }\n      return false;\n    }\n    function handleClickOutside(e) {\n      handleSelectMenuClickOutside(e);\n    }\n    const exposedRef = {\n      prev,\n      next,\n      enter\n    };\n    return Object.assign({\n      isMounted: isMountedRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      menuInstRef,\n      selectTreeMate: selectTreeMateRef,\n      handleResize,\n      handleToggle,\n      handleClickOutside,\n      cascaderSlots\n    }, exposedRef);\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      isMounted,\n      mergedTheme,\n      cascaderSlots\n    } = this;\n    return h(Transition, {\n      name: \"fade-in-scale-up-transition\",\n      appear: isMounted\n    }, {\n      default: () => this.show ? withDirectives(h(NInternalSelectMenu, {\n        ref: \"menuInstRef\",\n        onResize: this.handleResize,\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-menu`,\n        autoPending: true,\n        themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu,\n        theme: mergedTheme.peers.InternalSelectMenu,\n        treeMate: this.selectTreeMate,\n        multiple: this.multiple,\n        value: this.value,\n        onToggle: this.handleToggle\n      }, {\n        empty: () => resolveSlot(cascaderSlots['not-found'], () => [])\n      }), [[clickoutside, this.handleClickOutside, undefined, {\n        capture: true\n      }]]) : null\n    });\n  }\n});","map":{"version":3,"names":["h","Transition","ref","inject","defineComponent","computed","withDirectives","clickoutside","createTreeMate","createTmOptions","NInternalSelectMenu","createSelectOptions","cascaderInjectionKey","resolveSlot","name","props","value","type","String","Number","Array","default","show","Boolean","pattern","multiple","tmNodes","filter","Function","labelField","required","separator","setup","isMountedRef","mergedValueRef","mergedClsPrefixRef","mergedThemeRef","mergedCheckStrategyRef","slots","cascaderSlots","syncSelectMenuPosition","closeMenu","handleSelectMenuClickOutside","doUncheck","cascaderDoUncheck","doCheck","cascaderDoCheck","clearPattern","menuInstRef","selectOptionsRef","mergedFilterRef","_","path","some","option","indexOf","filteredSelectOptionsRef","mergedFilter","rawNode","map","label","selectTreeMateRef","handleResize","handleToggle","tmNode","mergedValue","isArray","includes","key","prev","_a","next","enter","pendingOptionTmNode","getPendingTmNode","handleClickOutside","e","exposedRef","Object","assign","isMounted","mergedTheme","mergedClsPrefix","selectTreeMate","render","appear","onResize","clsPrefix","class","autoPending","themeOverrides","peerOverrides","InternalSelectMenu","theme","peers","treeMate","onToggle","empty","undefined","capture"],"sources":["/Users/wangjohnson/ai_marketing/frontend/node_modules/naive-ui/es/cascader/src/CascaderSelectMenu.mjs"],"sourcesContent":["import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from \"../../select/src/utils.mjs\";\nimport { NInternalSelectMenu } from \"../../_internal/index.mjs\";\nimport { createSelectOptions } from \"./utils.mjs\";\nimport { cascaderInjectionKey } from \"./interface.mjs\";\nimport { resolveSlot } from \"../../_utils/index.mjs\";\nexport default defineComponent({\n  name: 'NCascaderSelectMenu',\n  props: {\n    value: {\n      type: [String, Number, Array],\n      default: null\n    },\n    show: Boolean,\n    pattern: {\n      type: String,\n      default: ''\n    },\n    multiple: Boolean,\n    tmNodes: {\n      type: Array,\n      default: () => []\n    },\n    filter: Function,\n    labelField: {\n      type: String,\n      required: true\n    },\n    separator: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      isMountedRef,\n      mergedValueRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      mergedCheckStrategyRef,\n      slots: cascaderSlots,\n      syncSelectMenuPosition,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      doUncheck: cascaderDoUncheck,\n      doCheck: cascaderDoCheck,\n      clearPattern\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(cascaderInjectionKey);\n    const menuInstRef = ref(null);\n    const selectOptionsRef = computed(() => {\n      return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n    });\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, _, path) => path.some(option => option[labelField] && ~option[labelField].indexOf(pattern));\n    });\n    const filteredSelectOptionsRef = computed(() => {\n      const {\n        pattern\n      } = props;\n      const {\n        value: mergedFilter\n      } = mergedFilterRef;\n      return (pattern ? selectOptionsRef.value.filter(option => {\n        return mergedFilter(pattern, option.rawNode, option.path);\n      }) : selectOptionsRef.value).map(option => ({\n        value: option.value,\n        label: option.label\n      }));\n    });\n    const selectTreeMateRef = computed(() => {\n      return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n    });\n    function handleResize() {\n      syncSelectMenuPosition();\n    }\n    function handleToggle(tmNode) {\n      doCheck(tmNode);\n    }\n    // We don't care what type the tmNode is, we only care about its key\n    function doCheck(tmNode) {\n      if (props.multiple) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n        if (Array.isArray(mergedValue)) {\n          if (!mergedValue.includes(tmNode.key)) {\n            cascaderDoCheck(tmNode.key);\n          } else {\n            cascaderDoUncheck(tmNode.key);\n          }\n        } else if (mergedValue === null) {\n          cascaderDoCheck(tmNode.key);\n        }\n        clearPattern();\n      } else {\n        cascaderDoCheck(tmNode.key);\n        // currently the select menu is set to focusable\n        // however just leave it here\n        closeMenu(true);\n      }\n    }\n    function prev() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n    }\n    function next() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n    }\n    function enter() {\n      var _a;\n      if (menuInstRef) {\n        const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n        if (pendingOptionTmNode) {\n          doCheck(pendingOptionTmNode);\n        }\n        return true;\n      }\n      return false;\n    }\n    function handleClickOutside(e) {\n      handleSelectMenuClickOutside(e);\n    }\n    const exposedRef = {\n      prev,\n      next,\n      enter\n    };\n    return Object.assign({\n      isMounted: isMountedRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      menuInstRef,\n      selectTreeMate: selectTreeMateRef,\n      handleResize,\n      handleToggle,\n      handleClickOutside,\n      cascaderSlots\n    }, exposedRef);\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      isMounted,\n      mergedTheme,\n      cascaderSlots\n    } = this;\n    return h(Transition, {\n      name: \"fade-in-scale-up-transition\",\n      appear: isMounted\n    }, {\n      default: () => this.show ? withDirectives(h(NInternalSelectMenu, {\n        ref: \"menuInstRef\",\n        onResize: this.handleResize,\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-menu`,\n        autoPending: true,\n        themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu,\n        theme: mergedTheme.peers.InternalSelectMenu,\n        treeMate: this.selectTreeMate,\n        multiple: this.multiple,\n        value: this.value,\n        onToggle: this.handleToggle\n      }, {\n        empty: () => resolveSlot(cascaderSlots['not-found'], () => [])\n      }), [[clickoutside, this.handleClickOutside, undefined, {\n        capture: true\n      }]]) : null\n    });\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}