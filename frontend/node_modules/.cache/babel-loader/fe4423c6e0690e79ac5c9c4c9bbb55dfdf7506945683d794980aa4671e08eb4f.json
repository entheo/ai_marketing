{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'HomePage',\n  setup() {\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n    const router = useRouter();\n    const handleLoginSubmit = () => {\n      // 这里可以添加登录的API调用逻辑\n      axios.post('http://localhost:8003/account/login/', this.formData).then(response => {\n        // 处理你后端返回的response\n        console.log(response);\n        console.log(\"登录成功，用户名: \", loginUsername.value); // 实际开发中应移除\n        // 登录成功后，重定向到仪表板（根据实际情况调整路由）\n        router.push('/dashboard');\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    const handleRegisterSubmit = () => {\n      // 注册逻辑，应该包括API调用\n      axios.post('http://localhost:8003/account/login/', this.formData).then(response => {\n        console.log(\"尝试注册\", registerUsername.value, registerPassword.value, invitation.value);\n        // 处理你后端返回的response\n        console.log(response);\n        console.log(\"登录成功，用户名: \", loginUsername.value); // 实际开发中应移除\n        // 登录成功后，重定向到登录（根据实际情况调整路由）\n        router.push('/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    return {\n      loginUsername,\n      loginPassword,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","name","setup","loginUsername","loginPassword","registerUsername","registerPassword","invitation","router","handleLoginSubmit","axios","post","formData","then","response","console","log","value","push","catch","err","handleRegisterSubmit"],"sources":["/Users/wangjohnson/ai_marketing/frontend/src/components/HomePage.vue"],"sourcesContent":["<!-- src/components/HomePage.vue -->\n<template>\n  <div>\n    <h1>欢迎来到我们的网站</h1>\n    <p>请登录以继续操作。</p>\n    <!-- 登录表单 -->\n    <form @submit.prevent=\"handleLoginSubmit\">\n      <input type=\"text\" v-model=\"loginUsername\" placeholder=\"用户名\" />\n      <input type=\"password\" v-model=\"loginPassword\" placeholder=\"密码\" />\n      <button type=\"submit\">登录</button>\n    </form>\n\n    <!-- 注册表单 -->\n    <form @submit.prevent=\"handleRegisterSubmit\" class=\"register-form\">\n        <h2>注册</h2>\n        <input type=\"text\" v-model=\"registerUsername\" placeholder=\"用户名\" />\n        <input type=\"password\" v-model=\"registerPassword\" placeholder=\"密码\" />\n        <input type=\"text\" v-model=\"invitation\" placeholder=\"邀请码\" />\n        <button type=\"submit\">注册</button>\n      </form>\n  \n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'HomePage',\n  setup() {\n    const loginUsername = ref('');\n    const loginPassword = ref('');\n\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const invitation = ref('');\n\n    const router = useRouter();\n\n    const handleLoginSubmit = () => {\n      // 这里可以添加登录的API调用逻辑\n        axios.post('http://localhost:8003/account/login/', this.formData)\n            .then(response => {\n              // 处理你后端返回的response\n              console.log(response);\n              console.log(\"登录成功，用户名: \", loginUsername.value); // 实际开发中应移除\n              // 登录成功后，重定向到仪表板（根据实际情况调整路由）\n              router.push('/dashboard');\n          })\n            .catch(err => {\n              console.log(err);\n          });\n    };\n\n    const handleRegisterSubmit = () => {\n      // 注册逻辑，应该包括API调用\n        axios.post('http://localhost:8003/account/login/', this.formData)\n            .then(response => {\n              console.log(\"尝试注册\", registerUsername.value, registerPassword.value, invitation.value);\n              // 处理你后端返回的response\n              console.log(response); \n              console.log(\"登录成功，用户名: \", loginUsername.value); // 实际开发中应移除\n              // 登录成功后，重定向到登录（根据实际情况调整路由）\n              router.push('/login');\n          })\n            .catch(err => {\n              console.log(err);\n          });\n    };\n\n    return {\n      loginUsername,\n      loginPassword,\n      registerUsername,\n      registerPassword,\n      invitation,\n      handleLoginSubmit,\n      handleRegisterSubmit,\n    };\n  },\n};\n</script>\n\n\n"],"mappings":";AAyBA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,aAAY,GAAIJ,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMK,aAAY,GAAIL,GAAG,CAAC,EAAE,CAAC;IAE7B,MAAMM,gBAAe,GAAIN,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMO,gBAAe,GAAIP,GAAG,CAAC,EAAE,CAAC;IAChC,MAAMQ,UAAS,GAAIR,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMS,MAAK,GAAIR,SAAS,CAAC,CAAC;IAE1B,MAAMS,iBAAgB,GAAIA,CAAA,KAAM;MAC9B;MACEC,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE,IAAI,CAACC,QAAQ,EAC3DC,IAAI,CAACC,QAAO,IAAK;QAChB;QACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,aAAa,CAACc,KAAK,CAAC,EAAE;QAChD;QACAT,MAAM,CAACU,IAAI,CAAC,YAAY,CAAC;MAC7B,CAAC,EACEC,KAAK,CAACC,GAAE,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MACpB,CAAC,CAAC;IACR,CAAC;IAED,MAAMC,oBAAmB,GAAIA,CAAA,KAAM;MACjC;MACEX,KAAK,CAACC,IAAI,CAAC,sCAAsC,EAAE,IAAI,CAACC,QAAQ,EAC3DC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEX,gBAAgB,CAACY,KAAK,EAAEX,gBAAgB,CAACW,KAAK,EAAEV,UAAU,CAACU,KAAK,CAAC;QACrF;QACAF,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,aAAa,CAACc,KAAK,CAAC,EAAE;QAChD;QACAT,MAAM,CAACU,IAAI,CAAC,QAAQ,CAAC;MACzB,CAAC,EACEC,KAAK,CAACC,GAAE,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MACpB,CAAC,CAAC;IACR,CAAC;IAED,OAAO;MACLjB,aAAa;MACbC,aAAa;MACbC,gBAAgB;MAChBC,gBAAgB;MAChBC,UAAU;MACVE,iBAAiB;MACjBY;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}