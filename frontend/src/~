<!-- src/components/HomePage.vue -->
<template>
  <div>

    <div class='brand'>
      <h1>步步为营</h1>
    </div>
    <p class='slogan'>一款仅为追求效果的营销人提供方便的AI助理</p>

    <!-- 登录表单 -->
    <n-grid class="login" cols="2 s:2 m:2 l:8 xl:8 2xl:8" responsive="screen">
      <n-grid-item span=2 :offset=3>
        <login-form/>
      </n-grid-item>
    </n-grid>
   
    
    <!--
    <form @submit.prevent="handleLoginSubmit">
      <input type="text" v-model="loginUsername" placeholder="用户名" />
      <input type="password" v-model="loginPassword" placeholder="密码" />
      <select v-model="keepLoggedInForDays"> 
        <option value="7">保持登录7天</option>
      </select>
      <button type="submit">登录</button>
    </form>
    -->

    <!-- 注册表单 -->
    <form @submit.prevent="handleRegisterSubmit" class="register-form">
        <h2>注册</h2>
        <input type="text" v-model="registerUsername" placeholder="用户名" />
        <input type="password" v-model="registerPassword" placeholder="密码" />
        <input type="text" v-model="invitation" placeholder="邀请码" />
        <button type="submit">注册</button>
      </form>
  
  </div>
</template>

<script setup>
import axios from 'axios';
import { ref } from 'vue';
import { useStore } from 'vuex';
import { useRouter } from 'vue-router';
import LoginForm from './LoginForm.vue';
import {NGrid,NGridItem} from 'naive-ui';

// 用于获取csrftoken的函数
function getCsrfToken() {
  return document.cookie.split('; ')
    .find(row => row.startsWith('csrftoken'))
    ?.split('=')[1];
}

const authStore = useStore();
console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态
// 在组件加载时获取CSRF token
const csrfToken = ref(getCsrfToken());

const registerUsername = ref('');
const registerPassword = ref('');
const invitation = ref('');
const router = useRouter();
const handleRegisterSubmit = async () => {
      try{
          const response = await axios.post('/account/register/', {
            username: registerUsername.value,
            password: registerPassword.value,
            invitation_code: invitation.value
          },
          {
          headers: {
            'X-CSRFToken': csrfToken.value,
            }
          });
          console.log(response);
          console.log("注册成功，用户名: ", registerUsername.value);
          await router.push('/login');
          }
     catch (err) {
            console.log(err);
           }
       };

/*
export default {
  name: 'HomePage',
  setup() {
    const authStore = useStore();
    console.log(authStore.getters.isLoggedIn); // 使用getters来访问状态
    // 在组件加载时获取CSRF token
    const csrfToken = ref(getCsrfToken());
    const loginUsername = ref('');
    const loginPassword = ref('');
    const keepLoggedInForDays = ref('7'); // 默认设置为7天，通过select控件让用户可选择

    const registerUsername = ref('');
    const registerPassword = ref('');
    const invitation = ref('');

    const router = useRouter();

    const handleLoginSubmit = async () => {
      try{
          const response = await axios.post('/account/login/', {
            username: loginUsername.value,
            password: loginPassword.value,
            keep_logged_in_for_days: keepLoggedInForDays.value
          },
         {
            withCredentials: true,
            headers: {
            'X-CSRFToken': csrfToken.value,
          }
        });

         console.log("登录成功，用户名: ", loginUsername.value);
         const token = response.data.token.access;
         const user = response.data.username;
         const csrf_token = response.data.csrf_token;
         console.log('csrf_token:');
         console.log(csrf_token);
         localStorage.setItem('token', token);
         await authStore.commit('auth_success', { token, user });
         await router.push('/dashboard');
          }
      catch (err) {
          console.log(err);
          }
        };
       

    const handleRegisterSubmit = async () => {
      try{
          const response = await axios.post('/account/register/', {
            username: registerUsername.value,
            password: registerPassword.value,
            invitation_code: invitation.value
          },
          {
          headers: {
            'X-CSRFToken': csrfToken.value,
            }
          });
          console.log(response);
          console.log("注册成功，用户名: ", registerUsername.value);
          await router.push('/login');
          }
     catch (err) {
            console.log(err);
           }
       };

    return {
      loginUsername,
      loginPassword,
      keepLoggedInForDays,
      registerUsername,
      registerPassword,
      invitation,
      handleLoginSubmit,
      handleRegisterSubmit,
      csrfToken, // 添加csrfToken到返回值中
      LoginForm,
    };
  },
};
*/
</script>

<style>
.brand{
    margin-top:3em;
    font-size:3em;
    }
.slogan{
    font-size:1.2em}
.login{
    margin-top:3em;}
</style>
